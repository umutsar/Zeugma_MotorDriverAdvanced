ARM GAS  /tmp/ccBQMMuH.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/tim.c"
  18              		.section	.text.MX_TIM2_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_TIM2_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_TIM2_Init:
  26              	.LFB66:
   1:Src/tim.c     **** /* USER CODE BEGIN Header */
   2:Src/tim.c     **** /**
   3:Src/tim.c     ****   ******************************************************************************
   4:Src/tim.c     ****   * @file    tim.c
   5:Src/tim.c     ****   * @brief   This file provides code for the configuration
   6:Src/tim.c     ****   *          of the TIM instances.
   7:Src/tim.c     ****   ******************************************************************************
   8:Src/tim.c     ****   * @attention
   9:Src/tim.c     ****   *
  10:Src/tim.c     ****   * Copyright (c) 2024 STMicroelectronics.
  11:Src/tim.c     ****   * All rights reserved.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/tim.c     ****   * in the root directory of this software component.
  15:Src/tim.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** /* USER CODE END Header */
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim1;
  28:Src/tim.c     **** TIM_HandleTypeDef htim2;
  29:Src/tim.c     **** 
  30:Src/tim.c     **** /* TIM1 init function */
  31:Src/tim.c     **** void MX_TIM1_Init(void)
  32:Src/tim.c     **** {
ARM GAS  /tmp/ccBQMMuH.s 			page 2


  33:Src/tim.c     **** 
  34:Src/tim.c     ****   /* USER CODE BEGIN TIM1_Init 0 */
  35:Src/tim.c     **** 
  36:Src/tim.c     ****   /* USER CODE END TIM1_Init 0 */
  37:Src/tim.c     **** 
  38:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  39:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  40:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  41:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  42:Src/tim.c     **** 
  43:Src/tim.c     ****   /* USER CODE BEGIN TIM1_Init 1 */
  44:Src/tim.c     **** 
  45:Src/tim.c     ****   /* USER CODE END TIM1_Init 1 */
  46:Src/tim.c     ****   htim1.Instance = TIM1;
  47:Src/tim.c     ****   htim1.Init.Prescaler = 2;
  48:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  49:Src/tim.c     ****   htim1.Init.Period = 999;
  50:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  51:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  52:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  53:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  54:Src/tim.c     ****   {
  55:Src/tim.c     ****     Error_Handler();
  56:Src/tim.c     ****   }
  57:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  58:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  59:Src/tim.c     ****   {
  60:Src/tim.c     ****     Error_Handler();
  61:Src/tim.c     ****   }
  62:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  63:Src/tim.c     ****   {
  64:Src/tim.c     ****     Error_Handler();
  65:Src/tim.c     ****   }
  66:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  67:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  68:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  69:Src/tim.c     ****   {
  70:Src/tim.c     ****     Error_Handler();
  71:Src/tim.c     ****   }
  72:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  73:Src/tim.c     ****   sConfigOC.Pulse = 0;
  74:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  75:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  76:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  77:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  78:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  79:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  80:Src/tim.c     ****   {
  81:Src/tim.c     ****     Error_Handler();
  82:Src/tim.c     ****   }
  83:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  84:Src/tim.c     ****   {
  85:Src/tim.c     ****     Error_Handler();
  86:Src/tim.c     ****   }
  87:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
  88:Src/tim.c     ****   {
  89:Src/tim.c     ****     Error_Handler();
ARM GAS  /tmp/ccBQMMuH.s 			page 3


  90:Src/tim.c     ****   }
  91:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  92:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  93:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  94:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 60;
  95:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  96:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  97:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  98:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  99:Src/tim.c     ****   {
 100:Src/tim.c     ****     Error_Handler();
 101:Src/tim.c     ****   }
 102:Src/tim.c     ****   /* USER CODE BEGIN TIM1_Init 2 */
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   /* USER CODE END TIM1_Init 2 */
 105:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
 106:Src/tim.c     **** 
 107:Src/tim.c     **** }
 108:Src/tim.c     **** /* TIM2 init function */
 109:Src/tim.c     **** void MX_TIM2_Init(void)
 110:Src/tim.c     **** {
  27              		.loc 1 110 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 87B0     		sub	sp, sp, #28
  35              		.cfi_def_cfa_offset 32
 111:Src/tim.c     **** 
 112:Src/tim.c     ****   /* USER CODE BEGIN TIM2_Init 0 */
 113:Src/tim.c     **** 
 114:Src/tim.c     ****   /* USER CODE END TIM2_Init 0 */
 115:Src/tim.c     **** 
 116:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  36              		.loc 1 116 3 view .LVU1
  37              		.loc 1 116 26 is_stmt 0 view .LVU2
  38 0004 0023     		movs	r3, #0
  39 0006 0293     		str	r3, [sp, #8]
  40 0008 0393     		str	r3, [sp, #12]
  41 000a 0493     		str	r3, [sp, #16]
  42 000c 0593     		str	r3, [sp, #20]
 117:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  43              		.loc 1 117 3 is_stmt 1 view .LVU3
  44              		.loc 1 117 27 is_stmt 0 view .LVU4
  45 000e 0093     		str	r3, [sp]
  46 0010 0193     		str	r3, [sp, #4]
 118:Src/tim.c     **** 
 119:Src/tim.c     ****   /* USER CODE BEGIN TIM2_Init 1 */
 120:Src/tim.c     **** 
 121:Src/tim.c     ****   /* USER CODE END TIM2_Init 1 */
 122:Src/tim.c     ****   htim2.Instance = TIM2;
  47              		.loc 1 122 3 is_stmt 1 view .LVU5
  48              		.loc 1 122 18 is_stmt 0 view .LVU6
  49 0012 1648     		ldr	r0, .L9
  50 0014 4FF08042 		mov	r2, #1073741824
ARM GAS  /tmp/ccBQMMuH.s 			page 4


  51 0018 0260     		str	r2, [r0]
 123:Src/tim.c     ****   htim2.Init.Prescaler = 719;
  52              		.loc 1 123 3 is_stmt 1 view .LVU7
  53              		.loc 1 123 24 is_stmt 0 view .LVU8
  54 001a 40F2CF22 		movw	r2, #719
  55 001e 4260     		str	r2, [r0, #4]
 124:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  56              		.loc 1 124 3 is_stmt 1 view .LVU9
  57              		.loc 1 124 26 is_stmt 0 view .LVU10
  58 0020 8360     		str	r3, [r0, #8]
 125:Src/tim.c     ****   htim2.Init.Period = 65535;
  59              		.loc 1 125 3 is_stmt 1 view .LVU11
  60              		.loc 1 125 21 is_stmt 0 view .LVU12
  61 0022 4FF6FF72 		movw	r2, #65535
  62 0026 C260     		str	r2, [r0, #12]
 126:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  63              		.loc 1 126 3 is_stmt 1 view .LVU13
  64              		.loc 1 126 28 is_stmt 0 view .LVU14
  65 0028 0361     		str	r3, [r0, #16]
 127:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  66              		.loc 1 127 3 is_stmt 1 view .LVU15
  67              		.loc 1 127 32 is_stmt 0 view .LVU16
  68 002a 8361     		str	r3, [r0, #24]
 128:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  69              		.loc 1 128 3 is_stmt 1 view .LVU17
  70              		.loc 1 128 7 is_stmt 0 view .LVU18
  71 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
  72              	.LVL0:
  73              		.loc 1 128 6 discriminator 1 view .LVU19
  74 0030 90B9     		cbnz	r0, .L6
  75              	.L2:
 129:Src/tim.c     ****   {
 130:Src/tim.c     ****     Error_Handler();
 131:Src/tim.c     ****   }
 132:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  76              		.loc 1 132 3 is_stmt 1 view .LVU20
  77              		.loc 1 132 34 is_stmt 0 view .LVU21
  78 0032 4FF48053 		mov	r3, #4096
  79 0036 0293     		str	r3, [sp, #8]
 133:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  80              		.loc 1 133 3 is_stmt 1 view .LVU22
  81              		.loc 1 133 7 is_stmt 0 view .LVU23
  82 0038 02A9     		add	r1, sp, #8
  83 003a 0C48     		ldr	r0, .L9
  84 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  85              	.LVL1:
  86              		.loc 1 133 6 discriminator 1 view .LVU24
  87 0040 68B9     		cbnz	r0, .L7
  88              	.L3:
 134:Src/tim.c     ****   {
 135:Src/tim.c     ****     Error_Handler();
 136:Src/tim.c     ****   }
 137:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  89              		.loc 1 137 3 is_stmt 1 view .LVU25
  90              		.loc 1 137 37 is_stmt 0 view .LVU26
  91 0042 0023     		movs	r3, #0
  92 0044 0093     		str	r3, [sp]
ARM GAS  /tmp/ccBQMMuH.s 			page 5


 138:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  93              		.loc 1 138 3 is_stmt 1 view .LVU27
  94              		.loc 1 138 33 is_stmt 0 view .LVU28
  95 0046 0193     		str	r3, [sp, #4]
 139:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  96              		.loc 1 139 3 is_stmt 1 view .LVU29
  97              		.loc 1 139 7 is_stmt 0 view .LVU30
  98 0048 6946     		mov	r1, sp
  99 004a 0848     		ldr	r0, .L9
 100 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 101              	.LVL2:
 102              		.loc 1 139 6 discriminator 1 view .LVU31
 103 0050 40B9     		cbnz	r0, .L8
 104              	.L1:
 140:Src/tim.c     ****   {
 141:Src/tim.c     ****     Error_Handler();
 142:Src/tim.c     ****   }
 143:Src/tim.c     ****   /* USER CODE BEGIN TIM2_Init 2 */
 144:Src/tim.c     **** 
 145:Src/tim.c     ****   /* USER CODE END TIM2_Init 2 */
 146:Src/tim.c     **** 
 147:Src/tim.c     **** }
 105              		.loc 1 147 1 view .LVU32
 106 0052 07B0     		add	sp, sp, #28
 107              		.cfi_remember_state
 108              		.cfi_def_cfa_offset 4
 109              		@ sp needed
 110 0054 5DF804FB 		ldr	pc, [sp], #4
 111              	.L6:
 112              		.cfi_restore_state
 130:Src/tim.c     ****   }
 113              		.loc 1 130 5 is_stmt 1 view .LVU33
 114 0058 FFF7FEFF 		bl	Error_Handler
 115              	.LVL3:
 116 005c E9E7     		b	.L2
 117              	.L7:
 135:Src/tim.c     ****   }
 118              		.loc 1 135 5 view .LVU34
 119 005e FFF7FEFF 		bl	Error_Handler
 120              	.LVL4:
 121 0062 EEE7     		b	.L3
 122              	.L8:
 141:Src/tim.c     ****   }
 123              		.loc 1 141 5 view .LVU35
 124 0064 FFF7FEFF 		bl	Error_Handler
 125              	.LVL5:
 126              		.loc 1 147 1 is_stmt 0 view .LVU36
 127 0068 F3E7     		b	.L1
 128              	.L10:
 129 006a 00BF     		.align	2
 130              	.L9:
 131 006c 00000000 		.word	htim2
 132              		.cfi_endproc
 133              	.LFE66:
 135              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_TIM_Base_MspInit
ARM GAS  /tmp/ccBQMMuH.s 			page 6


 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	HAL_TIM_Base_MspInit:
 143              	.LVL6:
 144              	.LFB67:
 148:Src/tim.c     **** 
 149:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 150:Src/tim.c     **** {
 145              		.loc 1 150 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		.loc 1 150 1 is_stmt 0 view .LVU38
 150 0000 00B5     		push	{lr}
 151              		.cfi_def_cfa_offset 4
 152              		.cfi_offset 14, -4
 153 0002 83B0     		sub	sp, sp, #12
 154              		.cfi_def_cfa_offset 16
 151:Src/tim.c     **** 
 152:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 155              		.loc 1 152 3 is_stmt 1 view .LVU39
 156              		.loc 1 152 20 is_stmt 0 view .LVU40
 157 0004 0368     		ldr	r3, [r0]
 158              		.loc 1 152 5 view .LVU41
 159 0006 144A     		ldr	r2, .L17
 160 0008 9342     		cmp	r3, r2
 161 000a 05D0     		beq	.L15
 153:Src/tim.c     ****   {
 154:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 155:Src/tim.c     **** 
 156:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 157:Src/tim.c     ****     /* TIM1 clock enable */
 158:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 159:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 160:Src/tim.c     **** 
 161:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 162:Src/tim.c     ****   }
 163:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 162              		.loc 1 163 8 is_stmt 1 view .LVU42
 163              		.loc 1 163 10 is_stmt 0 view .LVU43
 164 000c B3F1804F 		cmp	r3, #1073741824
 165 0010 0DD0     		beq	.L16
 166              	.LVL7:
 167              	.L11:
 164:Src/tim.c     ****   {
 165:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 166:Src/tim.c     **** 
 167:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 168:Src/tim.c     ****     /* TIM2 clock enable */
 169:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 170:Src/tim.c     **** 
 171:Src/tim.c     ****     /* TIM2 interrupt Init */
 172:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 173:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 174:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 175:Src/tim.c     **** 
ARM GAS  /tmp/ccBQMMuH.s 			page 7


 176:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 177:Src/tim.c     ****   }
 178:Src/tim.c     **** }
 168              		.loc 1 178 1 view .LVU44
 169 0012 03B0     		add	sp, sp, #12
 170              		.cfi_remember_state
 171              		.cfi_def_cfa_offset 4
 172              		@ sp needed
 173 0014 5DF804FB 		ldr	pc, [sp], #4
 174              	.LVL8:
 175              	.L15:
 176              		.cfi_restore_state
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 177              		.loc 1 158 5 is_stmt 1 view .LVU45
 178              	.LBB2:
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 179              		.loc 1 158 5 view .LVU46
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 180              		.loc 1 158 5 view .LVU47
 181 0018 104B     		ldr	r3, .L17+4
 182 001a 9A69     		ldr	r2, [r3, #24]
 183 001c 42F40062 		orr	r2, r2, #2048
 184 0020 9A61     		str	r2, [r3, #24]
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 185              		.loc 1 158 5 view .LVU48
 186 0022 9B69     		ldr	r3, [r3, #24]
 187 0024 03F40063 		and	r3, r3, #2048
 188 0028 0093     		str	r3, [sp]
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 189              		.loc 1 158 5 view .LVU49
 190 002a 009B     		ldr	r3, [sp]
 191              	.LBE2:
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 192              		.loc 1 158 5 view .LVU50
 193 002c F1E7     		b	.L11
 194              	.L16:
 169:Src/tim.c     **** 
 195              		.loc 1 169 5 view .LVU51
 196              	.LBB3:
 169:Src/tim.c     **** 
 197              		.loc 1 169 5 view .LVU52
 169:Src/tim.c     **** 
 198              		.loc 1 169 5 view .LVU53
 199 002e 03F50433 		add	r3, r3, #135168
 200 0032 DA69     		ldr	r2, [r3, #28]
 201 0034 42F00102 		orr	r2, r2, #1
 202 0038 DA61     		str	r2, [r3, #28]
 169:Src/tim.c     **** 
 203              		.loc 1 169 5 view .LVU54
 204 003a DB69     		ldr	r3, [r3, #28]
 205 003c 03F00103 		and	r3, r3, #1
 206 0040 0193     		str	r3, [sp, #4]
 169:Src/tim.c     **** 
 207              		.loc 1 169 5 view .LVU55
 208 0042 019B     		ldr	r3, [sp, #4]
 209              	.LBE3:
 169:Src/tim.c     **** 
ARM GAS  /tmp/ccBQMMuH.s 			page 8


 210              		.loc 1 169 5 view .LVU56
 172:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 211              		.loc 1 172 5 view .LVU57
 212 0044 0022     		movs	r2, #0
 213 0046 1146     		mov	r1, r2
 214 0048 1C20     		movs	r0, #28
 215              	.LVL9:
 172:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 216              		.loc 1 172 5 is_stmt 0 view .LVU58
 217 004a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 218              	.LVL10:
 173:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 219              		.loc 1 173 5 is_stmt 1 view .LVU59
 220 004e 1C20     		movs	r0, #28
 221 0050 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 222              	.LVL11:
 223              		.loc 1 178 1 is_stmt 0 view .LVU60
 224 0054 DDE7     		b	.L11
 225              	.L18:
 226 0056 00BF     		.align	2
 227              	.L17:
 228 0058 002C0140 		.word	1073818624
 229 005c 00100240 		.word	1073876992
 230              		.cfi_endproc
 231              	.LFE67:
 233              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_TIM_MspPostInit
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	HAL_TIM_MspPostInit:
 241              	.LVL12:
 242              	.LFB68:
 179:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 180:Src/tim.c     **** {
 243              		.loc 1 180 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 24
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		.loc 1 180 1 is_stmt 0 view .LVU62
 248 0000 10B5     		push	{r4, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
 251              		.cfi_offset 14, -4
 252 0002 86B0     		sub	sp, sp, #24
 253              		.cfi_def_cfa_offset 32
 181:Src/tim.c     **** 
 182:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 254              		.loc 1 182 3 is_stmt 1 view .LVU63
 255              		.loc 1 182 20 is_stmt 0 view .LVU64
 256 0004 0023     		movs	r3, #0
 257 0006 0293     		str	r3, [sp, #8]
 258 0008 0393     		str	r3, [sp, #12]
 259 000a 0493     		str	r3, [sp, #16]
 260 000c 0593     		str	r3, [sp, #20]
 183:Src/tim.c     ****   if(timHandle->Instance==TIM1)
ARM GAS  /tmp/ccBQMMuH.s 			page 9


 261              		.loc 1 183 3 is_stmt 1 view .LVU65
 262              		.loc 1 183 15 is_stmt 0 view .LVU66
 263 000e 0268     		ldr	r2, [r0]
 264              		.loc 1 183 5 view .LVU67
 265 0010 164B     		ldr	r3, .L23
 266 0012 9A42     		cmp	r2, r3
 267 0014 01D0     		beq	.L22
 268              	.LVL13:
 269              	.L19:
 184:Src/tim.c     ****   {
 185:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 186:Src/tim.c     **** 
 187:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 188:Src/tim.c     **** 
 189:Src/tim.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 190:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 191:Src/tim.c     ****     /**TIM1 GPIO Configuration
 192:Src/tim.c     ****     PB13     ------> TIM1_CH1N
 193:Src/tim.c     ****     PB14     ------> TIM1_CH2N
 194:Src/tim.c     ****     PB15     ------> TIM1_CH3N
 195:Src/tim.c     ****     PA8     ------> TIM1_CH1
 196:Src/tim.c     ****     PA9     ------> TIM1_CH2
 197:Src/tim.c     ****     PA10     ------> TIM1_CH3
 198:Src/tim.c     ****     */
 199:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 200:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 202:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 203:Src/tim.c     **** 
 204:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
 205:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 206:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 207:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 210:Src/tim.c     **** 
 211:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 212:Src/tim.c     ****   }
 213:Src/tim.c     **** 
 214:Src/tim.c     **** }
 270              		.loc 1 214 1 view .LVU68
 271 0016 06B0     		add	sp, sp, #24
 272              		.cfi_remember_state
 273              		.cfi_def_cfa_offset 8
 274              		@ sp needed
 275 0018 10BD     		pop	{r4, pc}
 276              	.LVL14:
 277              	.L22:
 278              		.cfi_restore_state
 189:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 279              		.loc 1 189 5 is_stmt 1 view .LVU69
 280              	.LBB4:
 189:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 281              		.loc 1 189 5 view .LVU70
 189:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 282              		.loc 1 189 5 view .LVU71
 283 001a 03F56443 		add	r3, r3, #58368
ARM GAS  /tmp/ccBQMMuH.s 			page 10


 284 001e 9A69     		ldr	r2, [r3, #24]
 285 0020 42F00802 		orr	r2, r2, #8
 286 0024 9A61     		str	r2, [r3, #24]
 189:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 287              		.loc 1 189 5 view .LVU72
 288 0026 9A69     		ldr	r2, [r3, #24]
 289 0028 02F00802 		and	r2, r2, #8
 290 002c 0092     		str	r2, [sp]
 189:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 291              		.loc 1 189 5 view .LVU73
 292 002e 009A     		ldr	r2, [sp]
 293              	.LBE4:
 189:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 294              		.loc 1 189 5 view .LVU74
 190:Src/tim.c     ****     /**TIM1 GPIO Configuration
 295              		.loc 1 190 5 view .LVU75
 296              	.LBB5:
 190:Src/tim.c     ****     /**TIM1 GPIO Configuration
 297              		.loc 1 190 5 view .LVU76
 190:Src/tim.c     ****     /**TIM1 GPIO Configuration
 298              		.loc 1 190 5 view .LVU77
 299 0030 9A69     		ldr	r2, [r3, #24]
 300 0032 42F00402 		orr	r2, r2, #4
 301 0036 9A61     		str	r2, [r3, #24]
 190:Src/tim.c     ****     /**TIM1 GPIO Configuration
 302              		.loc 1 190 5 view .LVU78
 303 0038 9B69     		ldr	r3, [r3, #24]
 304 003a 03F00403 		and	r3, r3, #4
 305 003e 0193     		str	r3, [sp, #4]
 190:Src/tim.c     ****     /**TIM1 GPIO Configuration
 306              		.loc 1 190 5 view .LVU79
 307 0040 019B     		ldr	r3, [sp, #4]
 308              	.LBE5:
 190:Src/tim.c     ****     /**TIM1 GPIO Configuration
 309              		.loc 1 190 5 view .LVU80
 199:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 310              		.loc 1 199 5 view .LVU81
 199:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 311              		.loc 1 199 25 is_stmt 0 view .LVU82
 312 0042 4FF46043 		mov	r3, #57344
 313 0046 0293     		str	r3, [sp, #8]
 200:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 314              		.loc 1 200 5 is_stmt 1 view .LVU83
 200:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 315              		.loc 1 200 26 is_stmt 0 view .LVU84
 316 0048 0224     		movs	r4, #2
 317 004a 0394     		str	r4, [sp, #12]
 201:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 318              		.loc 1 201 5 is_stmt 1 view .LVU85
 201:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 319              		.loc 1 201 27 is_stmt 0 view .LVU86
 320 004c 0594     		str	r4, [sp, #20]
 202:Src/tim.c     **** 
 321              		.loc 1 202 5 is_stmt 1 view .LVU87
 322 004e 02A9     		add	r1, sp, #8
 323 0050 0748     		ldr	r0, .L23+4
 324              	.LVL15:
ARM GAS  /tmp/ccBQMMuH.s 			page 11


 202:Src/tim.c     **** 
 325              		.loc 1 202 5 is_stmt 0 view .LVU88
 326 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL16:
 204:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 328              		.loc 1 204 5 is_stmt 1 view .LVU89
 204:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 329              		.loc 1 204 25 is_stmt 0 view .LVU90
 330 0056 4FF4E063 		mov	r3, #1792
 331 005a 0293     		str	r3, [sp, #8]
 205:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 332              		.loc 1 205 5 is_stmt 1 view .LVU91
 205:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 333              		.loc 1 205 26 is_stmt 0 view .LVU92
 334 005c 0394     		str	r4, [sp, #12]
 206:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 335              		.loc 1 206 5 is_stmt 1 view .LVU93
 206:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 336              		.loc 1 206 27 is_stmt 0 view .LVU94
 337 005e 0594     		str	r4, [sp, #20]
 207:Src/tim.c     **** 
 338              		.loc 1 207 5 is_stmt 1 view .LVU95
 339 0060 02A9     		add	r1, sp, #8
 340 0062 0448     		ldr	r0, .L23+8
 341 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 342              	.LVL17:
 343              		.loc 1 214 1 is_stmt 0 view .LVU96
 344 0068 D5E7     		b	.L19
 345              	.L24:
 346 006a 00BF     		.align	2
 347              	.L23:
 348 006c 002C0140 		.word	1073818624
 349 0070 000C0140 		.word	1073810432
 350 0074 00080140 		.word	1073809408
 351              		.cfi_endproc
 352              	.LFE68:
 354              		.section	.text.MX_TIM1_Init,"ax",%progbits
 355              		.align	1
 356              		.global	MX_TIM1_Init
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	MX_TIM1_Init:
 362              	.LFB65:
  32:Src/tim.c     **** 
 363              		.loc 1 32 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 88
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 10B5     		push	{r4, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 4, -8
 370              		.cfi_offset 14, -4
 371 0002 96B0     		sub	sp, sp, #88
 372              		.cfi_def_cfa_offset 96
  38:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 373              		.loc 1 38 3 view .LVU98
ARM GAS  /tmp/ccBQMMuH.s 			page 12


  38:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 374              		.loc 1 38 26 is_stmt 0 view .LVU99
 375 0004 0024     		movs	r4, #0
 376 0006 1294     		str	r4, [sp, #72]
 377 0008 1394     		str	r4, [sp, #76]
 378 000a 1494     		str	r4, [sp, #80]
 379 000c 1594     		str	r4, [sp, #84]
  39:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 380              		.loc 1 39 3 is_stmt 1 view .LVU100
  39:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 381              		.loc 1 39 27 is_stmt 0 view .LVU101
 382 000e 1094     		str	r4, [sp, #64]
 383 0010 1194     		str	r4, [sp, #68]
  40:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 384              		.loc 1 40 3 is_stmt 1 view .LVU102
  40:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 385              		.loc 1 40 22 is_stmt 0 view .LVU103
 386 0012 0994     		str	r4, [sp, #36]
 387 0014 0A94     		str	r4, [sp, #40]
 388 0016 0B94     		str	r4, [sp, #44]
 389 0018 0C94     		str	r4, [sp, #48]
 390 001a 0D94     		str	r4, [sp, #52]
 391 001c 0E94     		str	r4, [sp, #56]
 392 001e 0F94     		str	r4, [sp, #60]
  41:Src/tim.c     **** 
 393              		.loc 1 41 3 is_stmt 1 view .LVU104
  41:Src/tim.c     **** 
 394              		.loc 1 41 34 is_stmt 0 view .LVU105
 395 0020 2022     		movs	r2, #32
 396 0022 2146     		mov	r1, r4
 397 0024 01A8     		add	r0, sp, #4
 398 0026 FFF7FEFF 		bl	memset
 399              	.LVL18:
  46:Src/tim.c     ****   htim1.Init.Prescaler = 2;
 400              		.loc 1 46 3 is_stmt 1 view .LVU106
  46:Src/tim.c     ****   htim1.Init.Prescaler = 2;
 401              		.loc 1 46 18 is_stmt 0 view .LVU107
 402 002a 3748     		ldr	r0, .L43
 403 002c 374B     		ldr	r3, .L43+4
 404 002e 0360     		str	r3, [r0]
  47:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 405              		.loc 1 47 3 is_stmt 1 view .LVU108
  47:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 406              		.loc 1 47 24 is_stmt 0 view .LVU109
 407 0030 0223     		movs	r3, #2
 408 0032 4360     		str	r3, [r0, #4]
  48:Src/tim.c     ****   htim1.Init.Period = 999;
 409              		.loc 1 48 3 is_stmt 1 view .LVU110
  48:Src/tim.c     ****   htim1.Init.Period = 999;
 410              		.loc 1 48 26 is_stmt 0 view .LVU111
 411 0034 8460     		str	r4, [r0, #8]
  49:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 412              		.loc 1 49 3 is_stmt 1 view .LVU112
  49:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 413              		.loc 1 49 21 is_stmt 0 view .LVU113
 414 0036 40F2E733 		movw	r3, #999
 415 003a C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccBQMMuH.s 			page 13


  50:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 416              		.loc 1 50 3 is_stmt 1 view .LVU114
  50:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 417              		.loc 1 50 28 is_stmt 0 view .LVU115
 418 003c 0461     		str	r4, [r0, #16]
  51:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 419              		.loc 1 51 3 is_stmt 1 view .LVU116
  51:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 420              		.loc 1 51 32 is_stmt 0 view .LVU117
 421 003e 4461     		str	r4, [r0, #20]
  52:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 422              		.loc 1 52 3 is_stmt 1 view .LVU118
  52:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 423              		.loc 1 52 32 is_stmt 0 view .LVU119
 424 0040 8461     		str	r4, [r0, #24]
  53:Src/tim.c     ****   {
 425              		.loc 1 53 3 is_stmt 1 view .LVU120
  53:Src/tim.c     ****   {
 426              		.loc 1 53 7 is_stmt 0 view .LVU121
 427 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 428              	.LVL19:
  53:Src/tim.c     ****   {
 429              		.loc 1 53 6 discriminator 1 view .LVU122
 430 0046 0028     		cmp	r0, #0
 431 0048 45D1     		bne	.L35
 432              	.L26:
  57:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 433              		.loc 1 57 3 is_stmt 1 view .LVU123
  57:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 434              		.loc 1 57 34 is_stmt 0 view .LVU124
 435 004a 4FF48053 		mov	r3, #4096
 436 004e 1293     		str	r3, [sp, #72]
  58:Src/tim.c     ****   {
 437              		.loc 1 58 3 is_stmt 1 view .LVU125
  58:Src/tim.c     ****   {
 438              		.loc 1 58 7 is_stmt 0 view .LVU126
 439 0050 12A9     		add	r1, sp, #72
 440 0052 2D48     		ldr	r0, .L43
 441 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 442              	.LVL20:
  58:Src/tim.c     ****   {
 443              		.loc 1 58 6 discriminator 1 view .LVU127
 444 0058 0028     		cmp	r0, #0
 445 005a 3FD1     		bne	.L36
 446              	.L27:
  62:Src/tim.c     ****   {
 447              		.loc 1 62 3 is_stmt 1 view .LVU128
  62:Src/tim.c     ****   {
 448              		.loc 1 62 7 is_stmt 0 view .LVU129
 449 005c 2A48     		ldr	r0, .L43
 450 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 451              	.LVL21:
  62:Src/tim.c     ****   {
 452              		.loc 1 62 6 discriminator 1 view .LVU130
 453 0062 0028     		cmp	r0, #0
 454 0064 3DD1     		bne	.L37
 455              	.L28:
ARM GAS  /tmp/ccBQMMuH.s 			page 14


  66:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 456              		.loc 1 66 3 is_stmt 1 view .LVU131
  66:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 457              		.loc 1 66 37 is_stmt 0 view .LVU132
 458 0066 0023     		movs	r3, #0
 459 0068 1093     		str	r3, [sp, #64]
  67:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 460              		.loc 1 67 3 is_stmt 1 view .LVU133
  67:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 461              		.loc 1 67 33 is_stmt 0 view .LVU134
 462 006a 1193     		str	r3, [sp, #68]
  68:Src/tim.c     ****   {
 463              		.loc 1 68 3 is_stmt 1 view .LVU135
  68:Src/tim.c     ****   {
 464              		.loc 1 68 7 is_stmt 0 view .LVU136
 465 006c 10A9     		add	r1, sp, #64
 466 006e 2648     		ldr	r0, .L43
 467 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 468              	.LVL22:
  68:Src/tim.c     ****   {
 469              		.loc 1 68 6 discriminator 1 view .LVU137
 470 0074 0028     		cmp	r0, #0
 471 0076 37D1     		bne	.L38
 472              	.L29:
  72:Src/tim.c     ****   sConfigOC.Pulse = 0;
 473              		.loc 1 72 3 is_stmt 1 view .LVU138
  72:Src/tim.c     ****   sConfigOC.Pulse = 0;
 474              		.loc 1 72 20 is_stmt 0 view .LVU139
 475 0078 6023     		movs	r3, #96
 476 007a 0993     		str	r3, [sp, #36]
  73:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 477              		.loc 1 73 3 is_stmt 1 view .LVU140
  73:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 478              		.loc 1 73 19 is_stmt 0 view .LVU141
 479 007c 0022     		movs	r2, #0
 480 007e 0A92     		str	r2, [sp, #40]
  74:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 481              		.loc 1 74 3 is_stmt 1 view .LVU142
  74:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 482              		.loc 1 74 24 is_stmt 0 view .LVU143
 483 0080 0B92     		str	r2, [sp, #44]
  75:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 484              		.loc 1 75 3 is_stmt 1 view .LVU144
  75:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 485              		.loc 1 75 25 is_stmt 0 view .LVU145
 486 0082 0C92     		str	r2, [sp, #48]
  76:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 487              		.loc 1 76 3 is_stmt 1 view .LVU146
  76:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 488              		.loc 1 76 24 is_stmt 0 view .LVU147
 489 0084 0D92     		str	r2, [sp, #52]
  77:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 490              		.loc 1 77 3 is_stmt 1 view .LVU148
  77:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 491              		.loc 1 77 25 is_stmt 0 view .LVU149
 492 0086 0E92     		str	r2, [sp, #56]
  78:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /tmp/ccBQMMuH.s 			page 15


 493              		.loc 1 78 3 is_stmt 1 view .LVU150
  78:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 494              		.loc 1 78 26 is_stmt 0 view .LVU151
 495 0088 0F92     		str	r2, [sp, #60]
  79:Src/tim.c     ****   {
 496              		.loc 1 79 3 is_stmt 1 view .LVU152
  79:Src/tim.c     ****   {
 497              		.loc 1 79 7 is_stmt 0 view .LVU153
 498 008a 09A9     		add	r1, sp, #36
 499 008c 1E48     		ldr	r0, .L43
 500 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 501              	.LVL23:
  79:Src/tim.c     ****   {
 502              		.loc 1 79 6 discriminator 1 view .LVU154
 503 0092 60BB     		cbnz	r0, .L39
 504              	.L30:
  83:Src/tim.c     ****   {
 505              		.loc 1 83 3 is_stmt 1 view .LVU155
  83:Src/tim.c     ****   {
 506              		.loc 1 83 7 is_stmt 0 view .LVU156
 507 0094 0422     		movs	r2, #4
 508 0096 09A9     		add	r1, sp, #36
 509 0098 1B48     		ldr	r0, .L43
 510 009a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 511              	.LVL24:
  83:Src/tim.c     ****   {
 512              		.loc 1 83 6 discriminator 1 view .LVU157
 513 009e 48BB     		cbnz	r0, .L40
 514              	.L31:
  87:Src/tim.c     ****   {
 515              		.loc 1 87 3 is_stmt 1 view .LVU158
  87:Src/tim.c     ****   {
 516              		.loc 1 87 7 is_stmt 0 view .LVU159
 517 00a0 0822     		movs	r2, #8
 518 00a2 09A9     		add	r1, sp, #36
 519 00a4 1848     		ldr	r0, .L43
 520 00a6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 521              	.LVL25:
  87:Src/tim.c     ****   {
 522              		.loc 1 87 6 discriminator 1 view .LVU160
 523 00aa 30BB     		cbnz	r0, .L41
 524              	.L32:
  91:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 525              		.loc 1 91 3 is_stmt 1 view .LVU161
  91:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 526              		.loc 1 91 40 is_stmt 0 view .LVU162
 527 00ac 0023     		movs	r3, #0
 528 00ae 0193     		str	r3, [sp, #4]
  92:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 529              		.loc 1 92 3 is_stmt 1 view .LVU163
  92:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 530              		.loc 1 92 41 is_stmt 0 view .LVU164
 531 00b0 0293     		str	r3, [sp, #8]
  93:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 60;
 532              		.loc 1 93 3 is_stmt 1 view .LVU165
  93:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 60;
 533              		.loc 1 93 34 is_stmt 0 view .LVU166
ARM GAS  /tmp/ccBQMMuH.s 			page 16


 534 00b2 0393     		str	r3, [sp, #12]
  94:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 535              		.loc 1 94 3 is_stmt 1 view .LVU167
  94:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 536              		.loc 1 94 33 is_stmt 0 view .LVU168
 537 00b4 3C22     		movs	r2, #60
 538 00b6 0492     		str	r2, [sp, #16]
  95:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 539              		.loc 1 95 3 is_stmt 1 view .LVU169
  95:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 540              		.loc 1 95 35 is_stmt 0 view .LVU170
 541 00b8 0593     		str	r3, [sp, #20]
  96:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 542              		.loc 1 96 3 is_stmt 1 view .LVU171
  96:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 543              		.loc 1 96 38 is_stmt 0 view .LVU172
 544 00ba 4FF40052 		mov	r2, #8192
 545 00be 0692     		str	r2, [sp, #24]
  97:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 546              		.loc 1 97 3 is_stmt 1 view .LVU173
  97:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 547              		.loc 1 97 40 is_stmt 0 view .LVU174
 548 00c0 0893     		str	r3, [sp, #32]
  98:Src/tim.c     ****   {
 549              		.loc 1 98 3 is_stmt 1 view .LVU175
  98:Src/tim.c     ****   {
 550              		.loc 1 98 7 is_stmt 0 view .LVU176
 551 00c2 01A9     		add	r1, sp, #4
 552 00c4 1048     		ldr	r0, .L43
 553 00c6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 554              	.LVL26:
  98:Src/tim.c     ****   {
 555              		.loc 1 98 6 discriminator 1 view .LVU177
 556 00ca C8B9     		cbnz	r0, .L42
 557              	.L33:
 105:Src/tim.c     **** 
 558              		.loc 1 105 3 is_stmt 1 view .LVU178
 559 00cc 0E48     		ldr	r0, .L43
 560 00ce FFF7FEFF 		bl	HAL_TIM_MspPostInit
 561              	.LVL27:
 107:Src/tim.c     **** /* TIM2 init function */
 562              		.loc 1 107 1 is_stmt 0 view .LVU179
 563 00d2 16B0     		add	sp, sp, #88
 564              		.cfi_remember_state
 565              		.cfi_def_cfa_offset 8
 566              		@ sp needed
 567 00d4 10BD     		pop	{r4, pc}
 568              	.L35:
 569              		.cfi_restore_state
  55:Src/tim.c     ****   }
 570              		.loc 1 55 5 is_stmt 1 view .LVU180
 571 00d6 FFF7FEFF 		bl	Error_Handler
 572              	.LVL28:
 573 00da B6E7     		b	.L26
 574              	.L36:
  60:Src/tim.c     ****   }
 575              		.loc 1 60 5 view .LVU181
ARM GAS  /tmp/ccBQMMuH.s 			page 17


 576 00dc FFF7FEFF 		bl	Error_Handler
 577              	.LVL29:
 578 00e0 BCE7     		b	.L27
 579              	.L37:
  64:Src/tim.c     ****   }
 580              		.loc 1 64 5 view .LVU182
 581 00e2 FFF7FEFF 		bl	Error_Handler
 582              	.LVL30:
 583 00e6 BEE7     		b	.L28
 584              	.L38:
  70:Src/tim.c     ****   }
 585              		.loc 1 70 5 view .LVU183
 586 00e8 FFF7FEFF 		bl	Error_Handler
 587              	.LVL31:
 588 00ec C4E7     		b	.L29
 589              	.L39:
  81:Src/tim.c     ****   }
 590              		.loc 1 81 5 view .LVU184
 591 00ee FFF7FEFF 		bl	Error_Handler
 592              	.LVL32:
 593 00f2 CFE7     		b	.L30
 594              	.L40:
  85:Src/tim.c     ****   }
 595              		.loc 1 85 5 view .LVU185
 596 00f4 FFF7FEFF 		bl	Error_Handler
 597              	.LVL33:
 598 00f8 D2E7     		b	.L31
 599              	.L41:
  89:Src/tim.c     ****   }
 600              		.loc 1 89 5 view .LVU186
 601 00fa FFF7FEFF 		bl	Error_Handler
 602              	.LVL34:
 603 00fe D5E7     		b	.L32
 604              	.L42:
 100:Src/tim.c     ****   }
 605              		.loc 1 100 5 view .LVU187
 606 0100 FFF7FEFF 		bl	Error_Handler
 607              	.LVL35:
 608 0104 E2E7     		b	.L33
 609              	.L44:
 610 0106 00BF     		.align	2
 611              	.L43:
 612 0108 00000000 		.word	htim1
 613 010c 002C0140 		.word	1073818624
 614              		.cfi_endproc
 615              	.LFE65:
 617              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 618              		.align	1
 619              		.global	HAL_TIM_Base_MspDeInit
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	HAL_TIM_Base_MspDeInit:
 625              	.LVL36:
 626              	.LFB69:
 215:Src/tim.c     **** 
 216:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
ARM GAS  /tmp/ccBQMMuH.s 			page 18


 217:Src/tim.c     **** {
 627              		.loc 1 217 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		.loc 1 217 1 is_stmt 0 view .LVU189
 632 0000 08B5     		push	{r3, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 3, -8
 635              		.cfi_offset 14, -4
 218:Src/tim.c     **** 
 219:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 636              		.loc 1 219 3 is_stmt 1 view .LVU190
 637              		.loc 1 219 20 is_stmt 0 view .LVU191
 638 0002 0368     		ldr	r3, [r0]
 639              		.loc 1 219 5 view .LVU192
 640 0004 0B4A     		ldr	r2, .L51
 641 0006 9342     		cmp	r3, r2
 642 0008 03D0     		beq	.L49
 220:Src/tim.c     ****   {
 221:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 222:Src/tim.c     **** 
 223:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 224:Src/tim.c     ****     /* Peripheral clock disable */
 225:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 226:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 227:Src/tim.c     **** 
 228:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 229:Src/tim.c     ****   }
 230:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 643              		.loc 1 230 8 is_stmt 1 view .LVU193
 644              		.loc 1 230 10 is_stmt 0 view .LVU194
 645 000a B3F1804F 		cmp	r3, #1073741824
 646 000e 07D0     		beq	.L50
 647              	.LVL37:
 648              	.L45:
 231:Src/tim.c     ****   {
 232:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 233:Src/tim.c     **** 
 234:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 235:Src/tim.c     ****     /* Peripheral clock disable */
 236:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 237:Src/tim.c     **** 
 238:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 239:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 240:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 241:Src/tim.c     **** 
 242:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 243:Src/tim.c     ****   }
 244:Src/tim.c     **** }
 649              		.loc 1 244 1 view .LVU195
 650 0010 08BD     		pop	{r3, pc}
 651              	.LVL38:
 652              	.L49:
 225:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 653              		.loc 1 225 5 is_stmt 1 view .LVU196
 654 0012 02F56442 		add	r2, r2, #58368
ARM GAS  /tmp/ccBQMMuH.s 			page 19


 655 0016 9369     		ldr	r3, [r2, #24]
 656 0018 23F40063 		bic	r3, r3, #2048
 657 001c 9361     		str	r3, [r2, #24]
 658 001e F7E7     		b	.L45
 659              	.L50:
 236:Src/tim.c     **** 
 660              		.loc 1 236 5 view .LVU197
 661 0020 054A     		ldr	r2, .L51+4
 662 0022 D369     		ldr	r3, [r2, #28]
 663 0024 23F00103 		bic	r3, r3, #1
 664 0028 D361     		str	r3, [r2, #28]
 239:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 665              		.loc 1 239 5 view .LVU198
 666 002a 1C20     		movs	r0, #28
 667              	.LVL39:
 239:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 668              		.loc 1 239 5 is_stmt 0 view .LVU199
 669 002c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 670              	.LVL40:
 671              		.loc 1 244 1 view .LVU200
 672 0030 EEE7     		b	.L45
 673              	.L52:
 674 0032 00BF     		.align	2
 675              	.L51:
 676 0034 002C0140 		.word	1073818624
 677 0038 00100240 		.word	1073876992
 678              		.cfi_endproc
 679              	.LFE69:
 681              		.global	htim2
 682              		.section	.bss.htim2,"aw",%nobits
 683              		.align	2
 686              	htim2:
 687 0000 00000000 		.space	72
 687      00000000 
 687      00000000 
 687      00000000 
 687      00000000 
 688              		.global	htim1
 689              		.section	.bss.htim1,"aw",%nobits
 690              		.align	2
 693              	htim1:
 694 0000 00000000 		.space	72
 694      00000000 
 694      00000000 
 694      00000000 
 694      00000000 
 695              		.text
 696              	.Letext0:
 697              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 698              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 699              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 700              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 701              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 702              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 703              		.file 8 "Inc/tim.h"
 704              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 705              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
ARM GAS  /tmp/ccBQMMuH.s 			page 20


 706              		.file 11 "Inc/main.h"
 707              		.file 12 "<built-in>"
ARM GAS  /tmp/ccBQMMuH.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
     /tmp/ccBQMMuH.s:19     .text.MX_TIM2_Init:00000000 $t
     /tmp/ccBQMMuH.s:25     .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccBQMMuH.s:131    .text.MX_TIM2_Init:0000006c $d
     /tmp/ccBQMMuH.s:686    .bss.htim2:00000000 htim2
     /tmp/ccBQMMuH.s:136    .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/ccBQMMuH.s:142    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/ccBQMMuH.s:228    .text.HAL_TIM_Base_MspInit:00000058 $d
     /tmp/ccBQMMuH.s:234    .text.HAL_TIM_MspPostInit:00000000 $t
     /tmp/ccBQMMuH.s:240    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
     /tmp/ccBQMMuH.s:348    .text.HAL_TIM_MspPostInit:0000006c $d
     /tmp/ccBQMMuH.s:355    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccBQMMuH.s:361    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccBQMMuH.s:612    .text.MX_TIM1_Init:00000108 $d
     /tmp/ccBQMMuH.s:693    .bss.htim1:00000000 htim1
     /tmp/ccBQMMuH.s:618    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/ccBQMMuH.s:624    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/ccBQMMuH.s:676    .text.HAL_TIM_Base_MspDeInit:00000034 $d
     /tmp/ccBQMMuH.s:683    .bss.htim2:00000000 $d
     /tmp/ccBQMMuH.s:690    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
memset
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_NVIC_DisableIRQ
