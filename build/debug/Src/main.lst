ARM GAS  /tmp/cceuXVgF.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.map,"ax",%progbits
  19              		.align	1
  20              		.global	map
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	map:
  26              	.LVL0:
  27              	.LFB68:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  **************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  **************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****  * in the root directory of this software component.
  14:Src/main.c    ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  **************************
  17:Src/main.c    ****  */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "adc.h"
  22:Src/main.c    **** #include "dma.h"
  23:Src/main.c    **** #include "tim.h"
  24:Src/main.c    **** #include "usb_device.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** #include "stdbool.h"
  30:Src/main.c    **** #include "debug_monitor.h"
  31:Src/main.c    **** #include "first_step.h"
ARM GAS  /tmp/cceuXVgF.s 			page 2


  32:Src/main.c    **** #include "rpm.h"
  33:Src/main.c    **** #include "steps.h"
  34:Src/main.c    **** #include "old_value_hall.h"
  35:Src/main.c    **** /* USER CODE END Includes */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PD */
  44:Src/main.c    **** #define voltageConversion_value 0.0396593777777778
  45:Src/main.c    **** #define currentConversionValue 0.00083008
  46:Src/main.c    **** /* USER CODE END PD */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  49:Src/main.c    **** /* USER CODE BEGIN PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PM */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** /* USER CODE BEGIN PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** volatile bool oldValue[3] = {0, 0, 0};
  69:Src/main.c    **** bool mode = 1;
  70:Src/main.c    **** volatile bool first_step_flag = 1;
  71:Src/main.c    **** volatile bool flagg = 1;
  72:Src/main.c    **** uint32_t adcbuffer[2] = {0, 0};
  73:Src/main.c    **** volatile uint16_t speedInAdc = 0;
  74:Src/main.c    **** volatile uint16_t currentValue = 0;
  75:Src/main.c    **** volatile uint16_t filtered_current = 0;
  76:Src/main.c    **** bool run_status = false;
  77:Src/main.c    **** volatile bool hall_A = 0, hall_B = 0, hall_C = 0;
  78:Src/main.c    **** bool geri_vites = true;
  79:Src/main.c    **** volatile uint32_t step = 0;
  80:Src/main.c    **** volatile uint32_t pwm_value = 0;
  81:Src/main.c    **** uint32_t pedal_value_mapped = 0;
  82:Src/main.c    **** uint16_t min_pwm_limit = 100;
  83:Src/main.c    **** volatile uint16_t firstStepDelay = 40;
  84:Src/main.c    **** volatile uint32_t previousTime2 = 0;
  85:Src/main.c    **** volatile uint8_t oncekiDegerler[3];
  86:Src/main.c    **** uint32_t timeForRotorStopStatusMs = 0;
  87:Src/main.c    **** uint32_t timeForRotorStopStatusMsFlag = 0;
  88:Src/main.c    **** 
ARM GAS  /tmp/cceuXVgF.s 			page 3


  89:Src/main.c    **** volatile uint32_t rpm_counter = 0;
  90:Src/main.c    **** volatile uint32_t rpm;
  91:Src/main.c    **** volatile uint32_t difference_two_coummutation_time = 1;
  92:Src/main.c    **** 
  93:Src/main.c    **** uint32_t previousTime3 = 0;
  94:Src/main.c    **** 
  95:Src/main.c    **** // Temporary variables
  96:Src/main.c    **** uint16_t minCurrent = 5000;
  97:Src/main.c    **** uint16_t maxCurrent = 0;
  98:Src/main.c    **** uint16_t temporary_current_value = 0;
  99:Src/main.c    **** uint16_t average = 0;
 100:Src/main.c    **** 
 101:Src/main.c    **** long map(long x, long in_min, long in_max, long out_min, long out_max)
 102:Src/main.c    **** {
  28              		.loc 1 102 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 103:Src/main.c    ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  33              		.loc 1 103 3 view .LVU1
  34              		.loc 1 103 13 is_stmt 0 view .LVU2
  35 0000 A0EB010C 		sub	ip, r0, r1
  36              		.loc 1 103 34 view .LVU3
  37 0004 0098     		ldr	r0, [sp]
  38              	.LVL1:
  39              		.loc 1 103 34 view .LVU4
  40 0006 C01A     		subs	r0, r0, r3
  41              		.loc 1 103 23 view .LVU5
  42 0008 00FB0CFC 		mul	ip, r0, ip
  43              		.loc 1 103 55 view .LVU6
  44 000c 521A     		subs	r2, r2, r1
  45              	.LVL2:
  46              		.loc 1 103 45 view .LVU7
  47 000e 9CFBF2FC 		sdiv	ip, ip, r2
 104:Src/main.c    **** }
  48              		.loc 1 104 1 view .LVU8
  49 0012 0CEB0300 		add	r0, ip, r3
  50 0016 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
  55              		.align	1
  56              		.global	HAL_ADC_ConvCpltCallback
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	HAL_ADC_ConvCpltCallback:
  62              	.LVL3:
  63              	.LFB69:
 105:Src/main.c    **** 
 106:Src/main.c    **** // void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 107:Src/main.c    **** // {
 108:Src/main.c    **** //   rpm = rpm_counter * 25;
 109:Src/main.c    **** //   rpm_counter = 0;
 110:Src/main.c    **** // }
 111:Src/main.c    **** 
ARM GAS  /tmp/cceuXVgF.s 			page 4


 112:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 113:Src/main.c    **** { // ADC DMA LEMLERÄ°
  64              		.loc 1 113 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 114:Src/main.c    ****   if (hadc->Instance == ADC1)
  68              		.loc 1 114 3 view .LVU10
  69              		.loc 1 114 11 is_stmt 0 view .LVU11
  70 0000 0268     		ldr	r2, [r0]
  71              		.loc 1 114 6 view .LVU12
  72 0002 344B     		ldr	r3, .L14
  73 0004 9A42     		cmp	r2, r3
  74 0006 00D0     		beq	.L13
  75 0008 7047     		bx	lr
  76              	.L13:
 113:Src/main.c    ****   if (hadc->Instance == ADC1)
  77              		.loc 1 113 1 view .LVU13
  78 000a 00B5     		push	{lr}
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 14, -4
  81 000c 83B0     		sub	sp, sp, #12
  82              		.cfi_def_cfa_offset 16
 115:Src/main.c    ****   {
 116:Src/main.c    ****     currentValue = adcbuffer[1];
  83              		.loc 1 116 5 is_stmt 1 view .LVU14
  84              		.loc 1 116 18 is_stmt 0 view .LVU15
  85 000e 324B     		ldr	r3, .L14+4
  86 0010 9A88     		ldrh	r2, [r3, #4]
  87 0012 324B     		ldr	r3, .L14+8
  88 0014 1A80     		strh	r2, [r3]	@ movhi
 117:Src/main.c    ****     filtered_current = 4500 - currentValue;
  89              		.loc 1 117 5 is_stmt 1 view .LVU16
  90              		.loc 1 117 29 is_stmt 0 view .LVU17
  91 0016 1B88     		ldrh	r3, [r3]
  92 0018 9BB2     		uxth	r3, r3
  93 001a C3F58C53 		rsb	r3, r3, #4480
  94 001e 1433     		adds	r3, r3, #20
  95 0020 9BB2     		uxth	r3, r3
  96              		.loc 1 117 22 view .LVU18
  97 0022 2F4A     		ldr	r2, .L14+12
  98 0024 1380     		strh	r3, [r2]	@ movhi
 118:Src/main.c    **** 
 119:Src/main.c    ****     // TEMPORARY DEVELOPING LINES
 120:Src/main.c    ****     if (filtered_current <= 1600 && filtered_current >= 1300)
  99              		.loc 1 120 5 is_stmt 1 view .LVU19
 100              		.loc 1 120 26 is_stmt 0 view .LVU20
 101 0026 1388     		ldrh	r3, [r2]
 102 0028 9BB2     		uxth	r3, r3
 103              		.loc 1 120 8 view .LVU21
 104 002a B3F5C86F 		cmp	r3, #1600
 105 002e 15D8     		bhi	.L4
 106              		.loc 1 120 54 discriminator 1 view .LVU22
 107 0030 1388     		ldrh	r3, [r2]
 108 0032 9BB2     		uxth	r3, r3
 109              		.loc 1 120 34 discriminator 1 view .LVU23
 110 0034 40F21352 		movw	r2, #1299
ARM GAS  /tmp/cceuXVgF.s 			page 5


 111 0038 9342     		cmp	r3, r2
 112 003a 0FD9     		bls	.L4
 121:Src/main.c    ****       temporary_current_value = map(filtered_current, 1300, 1600, 0, 4430);
 113              		.loc 1 121 7 is_stmt 1 view .LVU24
 114              		.loc 1 121 33 is_stmt 0 view .LVU25
 115 003c 284B     		ldr	r3, .L14+12
 116 003e 1888     		ldrh	r0, [r3]
 117              	.LVL4:
 118              		.loc 1 121 33 view .LVU26
 119 0040 41F24E13 		movw	r3, #4430
 120 0044 0093     		str	r3, [sp]
 121 0046 0023     		movs	r3, #0
 122 0048 4FF4C862 		mov	r2, #1600
 123 004c 40F21451 		movw	r1, #1300
 124 0050 80B2     		uxth	r0, r0
 125 0052 FFF7FEFF 		bl	map
 126              	.LVL5:
 127              		.loc 1 121 31 discriminator 1 view .LVU27
 128 0056 234B     		ldr	r3, .L14+16
 129 0058 1880     		strh	r0, [r3]	@ movhi
 130              		.loc 1 121 31 view .LVU28
 131 005a 09E0     		b	.L5
 132              	.LVL6:
 133              	.L4:
 122:Src/main.c    ****     else if (filtered_current > 1600)
 134              		.loc 1 122 10 is_stmt 1 view .LVU29
 135              		.loc 1 122 31 is_stmt 0 view .LVU30
 136 005c 204B     		ldr	r3, .L14+12
 137 005e 1B88     		ldrh	r3, [r3]
 138 0060 9BB2     		uxth	r3, r3
 139              		.loc 1 122 13 view .LVU31
 140 0062 B3F5C86F 		cmp	r3, #1600
 141 0066 2FD9     		bls	.L6
 123:Src/main.c    ****       temporary_current_value = 4430;
 142              		.loc 1 123 7 is_stmt 1 view .LVU32
 143              		.loc 1 123 31 is_stmt 0 view .LVU33
 144 0068 1E4B     		ldr	r3, .L14+16
 145 006a 41F24E12 		movw	r2, #4430
 146 006e 1A80     		strh	r2, [r3]	@ movhi
 147              	.LVL7:
 148              	.L5:
 124:Src/main.c    ****     else
 125:Src/main.c    ****       temporary_current_value = 1300;
 126:Src/main.c    ****     // END
 127:Src/main.c    **** 
 128:Src/main.c    ****     speedInAdc = adcbuffer[0];
 149              		.loc 1 128 5 is_stmt 1 view .LVU34
 150              		.loc 1 128 16 is_stmt 0 view .LVU35
 151 0070 194B     		ldr	r3, .L14+4
 152 0072 1A88     		ldrh	r2, [r3]
 153 0074 1C4B     		ldr	r3, .L14+20
 154 0076 1A80     		strh	r2, [r3]	@ movhi
 129:Src/main.c    ****     if ((currentValue <= 1500) && (pwm_value > 100))
 155              		.loc 1 129 5 is_stmt 1 view .LVU36
 156              		.loc 1 129 23 is_stmt 0 view .LVU37
 157 0078 184B     		ldr	r3, .L14+8
 158 007a 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/cceuXVgF.s 			page 6


 159 007c 9BB2     		uxth	r3, r3
 160              		.loc 1 129 8 view .LVU38
 161 007e 40F2DC52 		movw	r2, #1500
 162 0082 9342     		cmp	r3, r2
 163 0084 07D8     		bhi	.L7
 164              		.loc 1 129 46 discriminator 1 view .LVU39
 165 0086 194B     		ldr	r3, .L14+24
 166 0088 1B68     		ldr	r3, [r3]
 167              		.loc 1 129 32 discriminator 1 view .LVU40
 168 008a 642B     		cmp	r3, #100
 169 008c 03D9     		bls	.L7
 130:Src/main.c    ****     {
 131:Src/main.c    ****       pwm_value = pwm_value - 1;
 170              		.loc 1 131 7 is_stmt 1 view .LVU41
 171              		.loc 1 131 29 is_stmt 0 view .LVU42
 172 008e 174A     		ldr	r2, .L14+24
 173 0090 1368     		ldr	r3, [r2]
 174 0092 013B     		subs	r3, r3, #1
 175              		.loc 1 131 17 view .LVU43
 176 0094 1360     		str	r3, [r2]
 177              	.L7:
 132:Src/main.c    ****     }
 133:Src/main.c    **** 
 134:Src/main.c    ****     if (minCurrent > filtered_current)
 178              		.loc 1 134 5 is_stmt 1 view .LVU44
 179              		.loc 1 134 20 is_stmt 0 view .LVU45
 180 0096 164B     		ldr	r3, .L14+28
 181 0098 1A88     		ldrh	r2, [r3]
 182 009a 114B     		ldr	r3, .L14+12
 183 009c 1B88     		ldrh	r3, [r3]
 184 009e 9BB2     		uxth	r3, r3
 185              		.loc 1 134 8 view .LVU46
 186 00a0 9A42     		cmp	r2, r3
 187 00a2 03D9     		bls	.L8
 135:Src/main.c    ****       minCurrent = filtered_current;
 188              		.loc 1 135 7 is_stmt 1 view .LVU47
 189              		.loc 1 135 18 is_stmt 0 view .LVU48
 190 00a4 0E4B     		ldr	r3, .L14+12
 191 00a6 1A88     		ldrh	r2, [r3]
 192 00a8 114B     		ldr	r3, .L14+28
 193 00aa 1A80     		strh	r2, [r3]	@ movhi
 194              	.L8:
 136:Src/main.c    ****     if (maxCurrent < filtered_current)
 195              		.loc 1 136 5 is_stmt 1 view .LVU49
 196              		.loc 1 136 20 is_stmt 0 view .LVU50
 197 00ac 114B     		ldr	r3, .L14+32
 198 00ae 1A88     		ldrh	r2, [r3]
 199 00b0 0B4B     		ldr	r3, .L14+12
 200 00b2 1B88     		ldrh	r3, [r3]
 201 00b4 9BB2     		uxth	r3, r3
 202              		.loc 1 136 8 view .LVU51
 203 00b6 9A42     		cmp	r2, r3
 204 00b8 03D2     		bcs	.L2
 137:Src/main.c    ****       maxCurrent = filtered_current;
 205              		.loc 1 137 7 is_stmt 1 view .LVU52
 206              		.loc 1 137 18 is_stmt 0 view .LVU53
 207 00ba 094B     		ldr	r3, .L14+12
ARM GAS  /tmp/cceuXVgF.s 			page 7


 208 00bc 1A88     		ldrh	r2, [r3]
 209 00be 0D4B     		ldr	r3, .L14+32
 210 00c0 1A80     		strh	r2, [r3]	@ movhi
 211              	.L2:
 138:Src/main.c    ****   }
 139:Src/main.c    **** }
 212              		.loc 1 139 1 view .LVU54
 213 00c2 03B0     		add	sp, sp, #12
 214              		.cfi_remember_state
 215              		.cfi_def_cfa_offset 4
 216              		@ sp needed
 217 00c4 5DF804FB 		ldr	pc, [sp], #4
 218              	.LVL8:
 219              	.L6:
 220              		.cfi_restore_state
 125:Src/main.c    ****     // END
 221              		.loc 1 125 7 is_stmt 1 view .LVU55
 125:Src/main.c    ****     // END
 222              		.loc 1 125 31 is_stmt 0 view .LVU56
 223 00c8 064B     		ldr	r3, .L14+16
 224 00ca 40F21452 		movw	r2, #1300
 225 00ce 1A80     		strh	r2, [r3]	@ movhi
 226 00d0 CEE7     		b	.L5
 227              	.L15:
 228 00d2 00BF     		.align	2
 229              	.L14:
 230 00d4 00240140 		.word	1073816576
 231 00d8 00000000 		.word	adcbuffer
 232 00dc 00000000 		.word	currentValue
 233 00e0 00000000 		.word	filtered_current
 234 00e4 00000000 		.word	temporary_current_value
 235 00e8 00000000 		.word	speedInAdc
 236 00ec 00000000 		.word	pwm_value
 237 00f0 00000000 		.word	minCurrent
 238 00f4 00000000 		.word	maxCurrent
 239              		.cfi_endproc
 240              	.LFE69:
 242              		.section	.text.filtreye_koy,"ax",%progbits
 243              		.align	1
 244              		.global	filtreye_koy
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	filtreye_koy:
 250              	.LVL9:
 251              	.LFB70:
 140:Src/main.c    **** 
 141:Src/main.c    **** // GPIO INTERRUPT HAS BEEN REMOVED FROM HERE
 142:Src/main.c    **** 
 143:Src/main.c    **** uint16_t filtreye_koy(uint16_t num)
 144:Src/main.c    **** {
 252              		.loc 1 144 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 145:Src/main.c    ****   static uint16_t dizi[40] = {0}; // Ortalama hesaplama iÃ§in dizi
ARM GAS  /tmp/cceuXVgF.s 			page 8


 257              		.loc 1 145 3 view .LVU58
 146:Src/main.c    ****   static uint16_t dizi_index = 0; // Diziye ekleme iÃ§in indeks
 258              		.loc 1 146 3 view .LVU59
 147:Src/main.c    ****   uint32_t toplam = 0;            // ToplamÄ± tutmak iÃ§in deÄiÅken
 259              		.loc 1 147 3 view .LVU60
 148:Src/main.c    ****   uint16_t average = 0;           // Ortalama deÄeri tutmak iÃ§in
 260              		.loc 1 148 3 view .LVU61
 149:Src/main.c    **** 
 150:Src/main.c    ****   // Yeni numarayÄ± diziye ekle
 151:Src/main.c    ****   dizi[dizi_index++] = num;
 261              		.loc 1 151 3 view .LVU62
 262              		.loc 1 151 18 is_stmt 0 view .LVU63
 263 0000 0E49     		ldr	r1, .L21
 264 0002 0A88     		ldrh	r2, [r1]
 265 0004 531C     		adds	r3, r2, #1
 266 0006 9BB2     		uxth	r3, r3
 267 0008 0B80     		strh	r3, [r1]	@ movhi
 268              		.loc 1 151 22 view .LVU64
 269 000a 0D49     		ldr	r1, .L21+4
 270 000c 21F81200 		strh	r0, [r1, r2, lsl #1]	@ movhi
 152:Src/main.c    **** 
 153:Src/main.c    ****   // Dizi indexi sÄ±nÄ±r kontrolÃ¼
 154:Src/main.c    ****   if (dizi_index == 40)
 271              		.loc 1 154 3 is_stmt 1 view .LVU65
 272              		.loc 1 154 6 is_stmt 0 view .LVU66
 273 0010 282B     		cmp	r3, #40
 274 0012 02D0     		beq	.L20
 275              	.L17:
 155:Src/main.c    ****     dizi_index = 0;
 156:Src/main.c    **** 
 157:Src/main.c    ****   // Dizi elemanlarÄ±nÄ±n toplamÄ±nÄ± hesapla
 158:Src/main.c    ****   for (int i = 0; i < 40; i++)
 276              		.loc 1 158 3 is_stmt 1 view .LVU67
 277              	.LBB4:
 278              		.loc 1 158 8 view .LVU68
 279              	.LVL10:
 280              		.loc 1 158 12 is_stmt 0 view .LVU69
 281 0014 0023     		movs	r3, #0
 282              	.LBE4:
 147:Src/main.c    ****   uint16_t average = 0;           // Ortalama deÄeri tutmak iÃ§in
 283              		.loc 1 147 12 view .LVU70
 284 0016 1846     		mov	r0, r3
 285              	.LVL11:
 286              	.LBB5:
 287              		.loc 1 158 3 view .LVU71
 288 0018 08E0     		b	.L18
 289              	.LVL12:
 290              	.L20:
 291              		.loc 1 158 3 view .LVU72
 292              	.LBE5:
 155:Src/main.c    ****     dizi_index = 0;
 293              		.loc 1 155 5 is_stmt 1 view .LVU73
 155:Src/main.c    ****     dizi_index = 0;
 294              		.loc 1 155 16 is_stmt 0 view .LVU74
 295 001a 084B     		ldr	r3, .L21
 296 001c 0022     		movs	r2, #0
 297 001e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/cceuXVgF.s 			page 9


 298 0020 F8E7     		b	.L17
 299              	.LVL13:
 300              	.L19:
 301              	.LBB6:
 159:Src/main.c    ****   {
 160:Src/main.c    ****     toplam += dizi[i];
 302              		.loc 1 160 5 is_stmt 1 view .LVU75
 303              		.loc 1 160 19 is_stmt 0 view .LVU76
 304 0022 074A     		ldr	r2, .L21+4
 305 0024 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 306              		.loc 1 160 12 view .LVU77
 307 0028 1044     		add	r0, r0, r2
 308              	.LVL14:
 158:Src/main.c    ****   {
 309              		.loc 1 158 28 is_stmt 1 discriminator 3 view .LVU78
 310 002a 0133     		adds	r3, r3, #1
 311              	.LVL15:
 312              	.L18:
 158:Src/main.c    ****   {
 313              		.loc 1 158 21 discriminator 1 view .LVU79
 314 002c 272B     		cmp	r3, #39
 315 002e F8DD     		ble	.L19
 316              	.LBE6:
 161:Src/main.c    ****   }
 162:Src/main.c    **** 
 163:Src/main.c    ****   // Ortalama hesapla
 164:Src/main.c    ****   average = toplam / 40;
 317              		.loc 1 164 3 view .LVU80
 318              		.loc 1 164 20 is_stmt 0 view .LVU81
 319 0030 044B     		ldr	r3, .L21+8
 320              	.LVL16:
 321              		.loc 1 164 20 view .LVU82
 322 0032 A3FB0030 		umull	r3, r0, r3, r0
 323              	.LVL17:
 165:Src/main.c    **** 
 166:Src/main.c    ****   return average;
 324              		.loc 1 166 3 is_stmt 1 view .LVU83
 167:Src/main.c    **** }
 325              		.loc 1 167 1 is_stmt 0 view .LVU84
 326 0036 C0F34F10 		ubfx	r0, r0, #5, #16
 327              	.LVL18:
 328              		.loc 1 167 1 view .LVU85
 329 003a 7047     		bx	lr
 330              	.L22:
 331              		.align	2
 332              	.L21:
 333 003c 00000000 		.word	dizi_index.1
 334 0040 00000000 		.word	dizi.0
 335 0044 CDCCCCCC 		.word	-858993459
 336              		.cfi_endproc
 337              	.LFE70:
 339              		.section	.text.Error_Handler,"ax",%progbits
 340              		.align	1
 341              		.global	Error_Handler
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
ARM GAS  /tmp/cceuXVgF.s 			page 10


 346              	Error_Handler:
 347              	.LFB73:
 168:Src/main.c    **** 
 169:Src/main.c    **** /* USER CODE END 0 */
 170:Src/main.c    **** 
 171:Src/main.c    **** /**
 172:Src/main.c    ****  * @brief  The application entry point.
 173:Src/main.c    ****  * @retval int
 174:Src/main.c    ****  */
 175:Src/main.c    **** int main(void)
 176:Src/main.c    **** {
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* USER CODE BEGIN 1 */
 179:Src/main.c    ****   /* USER CODE END 1 */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 184:Src/main.c    ****   HAL_Init();
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE BEGIN Init */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END Init */
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* Configure the system clock */
 191:Src/main.c    ****   SystemClock_Config();
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* USER CODE END SysInit */
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* Initialize all configured peripherals */
 198:Src/main.c    ****   MX_GPIO_Init();
 199:Src/main.c    ****   MX_DMA_Init();
 200:Src/main.c    ****   MX_ADC1_Init();
 201:Src/main.c    ****   MX_TIM1_Init();
 202:Src/main.c    ****   MX_USB_DEVICE_Init();
 203:Src/main.c    ****   MX_TIM2_Init();
 204:Src/main.c    ****   /* USER CODE BEGIN 2 */
 205:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, adcbuffer, 2);
 206:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 207:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 208:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 209:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 210:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 211:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 212:Src/main.c    **** 
 213:Src/main.c    ****   HAL_TIM_Base_Start(&htim2);
 214:Src/main.c    **** 
 215:Src/main.c    ****   uint32_t previousTime = HAL_GetTick();
 216:Src/main.c    ****   HAL_Delay(1000);
 217:Src/main.c    ****   TIM1->CCER = 0x0000;
 218:Src/main.c    ****   previousTime2 = HAL_GetTick();
 219:Src/main.c    ****   previousTime3 = HAL_GetTick();
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE END 2 */
 222:Src/main.c    **** 
ARM GAS  /tmp/cceuXVgF.s 			page 11


 223:Src/main.c    ****   /* Infinite loop */
 224:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 225:Src/main.c    ****   while (1)
 226:Src/main.c    ****   {
 227:Src/main.c    ****     uint32_t filtreli_akim = filtreye_koy(filtered_current);
 228:Src/main.c    ****     average = 0;
 229:Src/main.c    **** 
 230:Src/main.c    ****     /* USER CODE END WHILE */
 231:Src/main.c    **** 
 232:Src/main.c    ****     /* USER CODE BEGIN 3 */
 233:Src/main.c    ****     if (HAL_GetTick() - previousTime3 > 65)
 234:Src/main.c    ****     {
 235:Src/main.c    ****       // LOG_VAR(rpm);
 236:Src/main.c    ****       filtreli_akim = map(filtreli_akim, 1200, 1600, 20, 800);
 237:Src/main.c    ****       LOG_VAR(rpm);
 238:Src/main.c    ****       LOG_VAR(pedal_value_mapped);
 239:Src/main.c    ****       LOG_VAR(temporary_current_value);
 240:Src/main.c    ****       LOG_VAR(pwm_value);
 241:Src/main.c    ****       LOG_POST();
 242:Src/main.c    ****       previousTime3 = HAL_GetTick();
 243:Src/main.c    ****     }
 244:Src/main.c    **** 
 245:Src/main.c    ****     hall_A = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 246:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 247:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 248:Src/main.c    **** 
 249:Src/main.c    ****     // LOG_VAR(rpm);
 250:Src/main.c    **** 
 251:Src/main.c    ****     // LOG_VAR(filtered_current);
 252:Src/main.c    ****     // LOG_VAR(pwm_value);
 253:Src/main.c    **** 
 254:Src/main.c    ****     // LOG_VAR(pedal_value_mapped);
 255:Src/main.c    ****     // LOG_VAR(temporary_current_value);
 256:Src/main.c    **** 
 257:Src/main.c    ****     // LOG_POST();
 258:Src/main.c    ****     if (HAL_GetTick() - previousTime2 > 400)
 259:Src/main.c    ****     {
 260:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 261:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 262:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
 263:Src/main.c    ****       TIM1->CCER = 0x0000;
 264:Src/main.c    ****       rpm = get_rpm(-1);
 265:Src/main.c    ****       previousTime2 = HAL_GetTick();
 266:Src/main.c    ****     }
 267:Src/main.c    **** 
 268:Src/main.c    ****     if (HAL_GetTick() - timeForRotorStopStatusMs > 500)
 269:Src/main.c    ****     {
 270:Src/main.c    ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 271:Src/main.c    ****       HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 272:Src/main.c    ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 273:Src/main.c    ****       HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 274:Src/main.c    ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 275:Src/main.c    ****       HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 276:Src/main.c    ****     }
 277:Src/main.c    **** 
 278:Src/main.c    ****     if (speedInAdc >= 900 && HAL_GetTick() - timeForRotorStopStatusMs > 450) // Checked
 279:Src/main.c    ****     {
ARM GAS  /tmp/cceuXVgF.s 			page 12


 280:Src/main.c    ****       timeForRotorStopStatusMsFlag = 1;
 281:Src/main.c    **** 
 282:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 283:Src/main.c    ****       if (mode == 0)
 284:Src/main.c    ****       {
 285:Src/main.c    ****         pedal_value_mapped = map(speedInAdc, 700, 3600, 0, 10000);
 286:Src/main.c    ****       }
 287:Src/main.c    ****       else
 288:Src/main.c    ****       {
 289:Src/main.c    ****         pedal_value_mapped = map(speedInAdc, 700, 3600, 0, 10000);
 290:Src/main.c    ****       }
 291:Src/main.c    ****       HAL_Delay(10); // KaldÄ±rÄ±labilir
 292:Src/main.c    **** 
 293:Src/main.c    ****       if (temporary_current_value > pedal_value_mapped) // if (filtered_current > pedal_value_mappe
 294:Src/main.c    ****       {
 295:Src/main.c    ****         if (pwm_value > min_pwm_limit)
 296:Src/main.c    ****         {
 297:Src/main.c    ****           pwm_value -= 1;
 298:Src/main.c    ****         }
 299:Src/main.c    ****         else
 300:Src/main.c    ****         {
 301:Src/main.c    ****           pwm_value = min_pwm_limit;
 302:Src/main.c    ****         }
 303:Src/main.c    ****       }
 304:Src/main.c    **** 
 305:Src/main.c    ****       else
 306:Src/main.c    ****       {
 307:Src/main.c    ****         if (pwm_value < min_pwm_limit)
 308:Src/main.c    ****         {
 309:Src/main.c    ****           pwm_value = min_pwm_limit;
 310:Src/main.c    ****         }
 311:Src/main.c    ****         else if (pwm_value < 400)
 312:Src/main.c    ****         {
 313:Src/main.c    ****           if (HAL_GetTick() - previousTime > 2)
 314:Src/main.c    ****           {
 315:Src/main.c    ****             pwm_value += 1;
 316:Src/main.c    ****             previousTime = HAL_GetTick();
 317:Src/main.c    ****           }
 318:Src/main.c    ****         }
 319:Src/main.c    ****       }
 320:Src/main.c    **** 
 321:Src/main.c    ****       if (!run_status)
 322:Src/main.c    ****       {
 323:Src/main.c    ****         run_status = true;
 324:Src/main.c    ****         geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 325:Src/main.c    ****         first_step(hall_A, hall_B, hall_C);
 326:Src/main.c    ****       }
 327:Src/main.c    ****     }
 328:Src/main.c    ****     else if ((run_status) && (speedInAdc < 900))
 329:Src/main.c    ****     {
 330:Src/main.c    ****       pwm_value = 0;
 331:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
 332:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, 0);
 333:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 0);
 334:Src/main.c    ****       // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0); // Mosfetleri kapatÄ±yoruz
 335:Src/main.c    ****       // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 336:Src/main.c    ****       // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
ARM GAS  /tmp/cceuXVgF.s 			page 13


 337:Src/main.c    ****       TIM1->CCER = 0x0CCC;
 338:Src/main.c    ****       flagg = 1;
 339:Src/main.c    ****       oldValue[0] = 0;
 340:Src/main.c    ****       oldValue[1] = 0;
 341:Src/main.c    ****       oldValue[2] = 0;
 342:Src/main.c    ****       hall_A = 0;
 343:Src/main.c    ****       hall_B = 0;
 344:Src/main.c    ****       hall_C = 0;
 345:Src/main.c    ****       step = 0;
 346:Src/main.c    ****       pedal_value_mapped = 0;
 347:Src/main.c    ****       first_step_flag = 1;
 348:Src/main.c    ****       run_status = false;
 349:Src/main.c    **** 
 350:Src/main.c    ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 351:Src/main.c    ****       HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_1);
 352:Src/main.c    ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 353:Src/main.c    ****       HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_2);
 354:Src/main.c    ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 355:Src/main.c    ****       HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_3);
 356:Src/main.c    ****       if (timeForRotorStopStatusMsFlag)
 357:Src/main.c    ****       {
 358:Src/main.c    ****         timeForRotorStopStatusMs = HAL_GetTick();
 359:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 360:Src/main.c    ****       }
 361:Src/main.c    ****     }
 362:Src/main.c    ****   }
 363:Src/main.c    **** 
 364:Src/main.c    ****   hall_A = HAL_GPIO_ReadPin(GPIOA, HALL_1_Pin);
 365:Src/main.c    ****   hall_B = HAL_GPIO_ReadPin(GPIOA, HALL_2_Pin);
 366:Src/main.c    ****   hall_C = HAL_GPIO_ReadPin(GPIOA, HALL_3_Pin);
 367:Src/main.c    ****   /* USER CODE END 3 */
 368:Src/main.c    **** }
 369:Src/main.c    **** 
 370:Src/main.c    **** /**
 371:Src/main.c    ****  * @brief System Clock Configuration
 372:Src/main.c    ****  * @retval None
 373:Src/main.c    ****  */
 374:Src/main.c    **** void SystemClock_Config(void)
 375:Src/main.c    **** {
 376:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 377:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 378:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 379:Src/main.c    **** 
 380:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 381:Src/main.c    ****    * in the RCC_OscInitTypeDef structure.
 382:Src/main.c    ****    */
 383:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 384:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 385:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 386:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 387:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 388:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 389:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 390:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 391:Src/main.c    ****   {
 392:Src/main.c    ****     Error_Handler();
 393:Src/main.c    ****   }
ARM GAS  /tmp/cceuXVgF.s 			page 14


 394:Src/main.c    **** 
 395:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 396:Src/main.c    ****    */
 397:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 398:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 399:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 400:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 401:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 402:Src/main.c    **** 
 403:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 404:Src/main.c    ****   {
 405:Src/main.c    ****     Error_Handler();
 406:Src/main.c    ****   }
 407:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC | RCC_PERIPHCLK_USB;
 408:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 409:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 410:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 411:Src/main.c    ****   {
 412:Src/main.c    ****     Error_Handler();
 413:Src/main.c    ****   }
 414:Src/main.c    **** }
 415:Src/main.c    **** 
 416:Src/main.c    **** /* USER CODE BEGIN 4 */
 417:Src/main.c    **** 
 418:Src/main.c    **** /* USER CODE END 4 */
 419:Src/main.c    **** 
 420:Src/main.c    **** /**
 421:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 422:Src/main.c    ****  * @retval None
 423:Src/main.c    ****  */
 424:Src/main.c    **** void Error_Handler(void)
 425:Src/main.c    **** {
 348              		.loc 1 425 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ Volatile: function does not return.
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 426:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 427:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 428:Src/main.c    ****   __disable_irq();
 354              		.loc 1 428 3 view .LVU87
 355              	.LBB7:
 356              	.LBI7:
 357              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  /tmp/cceuXVgF.s 			page 15


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cceuXVgF.s 			page 16


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/cceuXVgF.s 			page 17


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 358              		.loc 2 140 27 view .LVU88
 359              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 360              		.loc 2 142 3 view .LVU89
 361              		.syntax unified
 362              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 363 0000 72B6     		cpsid i
 364              	@ 0 "" 2
 365              		.thumb
 366              		.syntax unified
 367              	.L24:
 368              	.LBE8:
 369              	.LBE7:
 429:Src/main.c    ****   while (1)
 370              		.loc 1 429 3 view .LVU90
 430:Src/main.c    ****   {
 431:Src/main.c    ****   }
 371              		.loc 1 431 3 view .LVU91
 429:Src/main.c    ****   while (1)
 372              		.loc 1 429 9 view .LVU92
 373 0002 FEE7     		b	.L24
 374              		.cfi_endproc
 375              	.LFE73:
 377              		.section	.text.SystemClock_Config,"ax",%progbits
 378              		.align	1
 379              		.global	SystemClock_Config
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	SystemClock_Config:
 385              	.LFB72:
 375:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 386              		.loc 1 375 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 80
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 00B5     		push	{lr}
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 14, -4
 393 0002 95B0     		sub	sp, sp, #84
 394              		.cfi_def_cfa_offset 88
 376:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/cceuXVgF.s 			page 18


 395              		.loc 1 376 3 view .LVU94
 376:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 396              		.loc 1 376 22 is_stmt 0 view .LVU95
 397 0004 2822     		movs	r2, #40
 398 0006 0021     		movs	r1, #0
 399 0008 0DEB0200 		add	r0, sp, r2
 400 000c FFF7FEFF 		bl	memset
 401              	.LVL19:
 377:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 402              		.loc 1 377 3 is_stmt 1 view .LVU96
 377:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 403              		.loc 1 377 22 is_stmt 0 view .LVU97
 404 0010 0023     		movs	r3, #0
 405 0012 0593     		str	r3, [sp, #20]
 406 0014 0693     		str	r3, [sp, #24]
 407 0016 0793     		str	r3, [sp, #28]
 408 0018 0893     		str	r3, [sp, #32]
 409 001a 0993     		str	r3, [sp, #36]
 378:Src/main.c    **** 
 410              		.loc 1 378 3 is_stmt 1 view .LVU98
 378:Src/main.c    **** 
 411              		.loc 1 378 28 is_stmt 0 view .LVU99
 412 001c 0193     		str	r3, [sp, #4]
 413 001e 0293     		str	r3, [sp, #8]
 414 0020 0393     		str	r3, [sp, #12]
 415 0022 0493     		str	r3, [sp, #16]
 383:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 416              		.loc 1 383 3 is_stmt 1 view .LVU100
 383:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 417              		.loc 1 383 36 is_stmt 0 view .LVU101
 418 0024 0122     		movs	r2, #1
 419 0026 0A92     		str	r2, [sp, #40]
 384:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 420              		.loc 1 384 3 is_stmt 1 view .LVU102
 384:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 421              		.loc 1 384 30 is_stmt 0 view .LVU103
 422 0028 4FF48033 		mov	r3, #65536
 423 002c 0B93     		str	r3, [sp, #44]
 385:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 424              		.loc 1 385 3 is_stmt 1 view .LVU104
 386:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 425              		.loc 1 386 3 view .LVU105
 386:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 426              		.loc 1 386 30 is_stmt 0 view .LVU106
 427 002e 0E92     		str	r2, [sp, #56]
 387:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 428              		.loc 1 387 3 is_stmt 1 view .LVU107
 387:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 429              		.loc 1 387 34 is_stmt 0 view .LVU108
 430 0030 0222     		movs	r2, #2
 431 0032 1192     		str	r2, [sp, #68]
 388:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 432              		.loc 1 388 3 is_stmt 1 view .LVU109
 388:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 433              		.loc 1 388 35 is_stmt 0 view .LVU110
 434 0034 1293     		str	r3, [sp, #72]
 389:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/cceuXVgF.s 			page 19


 435              		.loc 1 389 3 is_stmt 1 view .LVU111
 389:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 436              		.loc 1 389 32 is_stmt 0 view .LVU112
 437 0036 4FF4E013 		mov	r3, #1835008
 438 003a 1393     		str	r3, [sp, #76]
 390:Src/main.c    ****   {
 439              		.loc 1 390 3 is_stmt 1 view .LVU113
 390:Src/main.c    ****   {
 440              		.loc 1 390 7 is_stmt 0 view .LVU114
 441 003c 0AA8     		add	r0, sp, #40
 442 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 443              	.LVL20:
 390:Src/main.c    ****   {
 444              		.loc 1 390 6 discriminator 1 view .LVU115
 445 0042 D8B9     		cbnz	r0, .L30
 397:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 446              		.loc 1 397 3 is_stmt 1 view .LVU116
 397:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 447              		.loc 1 397 31 is_stmt 0 view .LVU117
 448 0044 0F23     		movs	r3, #15
 449 0046 0593     		str	r3, [sp, #20]
 398:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 450              		.loc 1 398 3 is_stmt 1 view .LVU118
 398:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 451              		.loc 1 398 34 is_stmt 0 view .LVU119
 452 0048 0221     		movs	r1, #2
 453 004a 0691     		str	r1, [sp, #24]
 399:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 454              		.loc 1 399 3 is_stmt 1 view .LVU120
 399:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 455              		.loc 1 399 35 is_stmt 0 view .LVU121
 456 004c 0023     		movs	r3, #0
 457 004e 0793     		str	r3, [sp, #28]
 400:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 458              		.loc 1 400 3 is_stmt 1 view .LVU122
 400:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 459              		.loc 1 400 36 is_stmt 0 view .LVU123
 460 0050 4FF48062 		mov	r2, #1024
 461 0054 0892     		str	r2, [sp, #32]
 401:Src/main.c    **** 
 462              		.loc 1 401 3 is_stmt 1 view .LVU124
 401:Src/main.c    **** 
 463              		.loc 1 401 36 is_stmt 0 view .LVU125
 464 0056 0993     		str	r3, [sp, #36]
 403:Src/main.c    ****   {
 465              		.loc 1 403 3 is_stmt 1 view .LVU126
 403:Src/main.c    ****   {
 466              		.loc 1 403 7 is_stmt 0 view .LVU127
 467 0058 05A8     		add	r0, sp, #20
 468 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 469              	.LVL21:
 403:Src/main.c    ****   {
 470              		.loc 1 403 6 discriminator 1 view .LVU128
 471 005e 78B9     		cbnz	r0, .L31
 407:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 472              		.loc 1 407 3 is_stmt 1 view .LVU129
 407:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
ARM GAS  /tmp/cceuXVgF.s 			page 20


 473              		.loc 1 407 38 is_stmt 0 view .LVU130
 474 0060 1223     		movs	r3, #18
 475 0062 0193     		str	r3, [sp, #4]
 408:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 476              		.loc 1 408 3 is_stmt 1 view .LVU131
 408:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 477              		.loc 1 408 35 is_stmt 0 view .LVU132
 478 0064 4FF40043 		mov	r3, #32768
 479 0068 0393     		str	r3, [sp, #12]
 409:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 480              		.loc 1 409 3 is_stmt 1 view .LVU133
 409:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 481              		.loc 1 409 35 is_stmt 0 view .LVU134
 482 006a 0023     		movs	r3, #0
 483 006c 0493     		str	r3, [sp, #16]
 410:Src/main.c    ****   {
 484              		.loc 1 410 3 is_stmt 1 view .LVU135
 410:Src/main.c    ****   {
 485              		.loc 1 410 7 is_stmt 0 view .LVU136
 486 006e 01A8     		add	r0, sp, #4
 487 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 488              	.LVL22:
 410:Src/main.c    ****   {
 489              		.loc 1 410 6 discriminator 1 view .LVU137
 490 0074 30B9     		cbnz	r0, .L32
 414:Src/main.c    **** 
 491              		.loc 1 414 1 view .LVU138
 492 0076 15B0     		add	sp, sp, #84
 493              		.cfi_remember_state
 494              		.cfi_def_cfa_offset 4
 495              		@ sp needed
 496 0078 5DF804FB 		ldr	pc, [sp], #4
 497              	.L30:
 498              		.cfi_restore_state
 392:Src/main.c    ****   }
 499              		.loc 1 392 5 is_stmt 1 view .LVU139
 500 007c FFF7FEFF 		bl	Error_Handler
 501              	.LVL23:
 502              	.L31:
 405:Src/main.c    ****   }
 503              		.loc 1 405 5 view .LVU140
 504 0080 FFF7FEFF 		bl	Error_Handler
 505              	.LVL24:
 506              	.L32:
 412:Src/main.c    ****   }
 507              		.loc 1 412 5 view .LVU141
 508 0084 FFF7FEFF 		bl	Error_Handler
 509              	.LVL25:
 510              		.cfi_endproc
 511              	.LFE72:
 513              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 514              		.align	2
 515              	.LC0:
 516 0000 72706D00 		.ascii	"rpm\000"
 517              		.align	2
 518              	.LC1:
 519 0004 70656461 		.ascii	"pedal_value_mapped\000"
ARM GAS  /tmp/cceuXVgF.s 			page 21


 519      6C5F7661 
 519      6C75655F 
 519      6D617070 
 519      656400
 520 0017 00       		.align	2
 521              	.LC2:
 522 0018 74656D70 		.ascii	"temporary_current_value\000"
 522      6F726172 
 522      795F6375 
 522      7272656E 
 522      745F7661 
 523              		.align	2
 524              	.LC3:
 525 0030 70776D5F 		.ascii	"pwm_value\000"
 525      76616C75 
 525      6500
 526              		.section	.text.main,"ax",%progbits
 527              		.align	1
 528              		.global	main
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 533              	main:
 534              	.LFB71:
 176:Src/main.c    **** 
 535              		.loc 1 176 1 view -0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539 0000 70B5     		push	{r4, r5, r6, lr}
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 4, -16
 542              		.cfi_offset 5, -12
 543              		.cfi_offset 6, -8
 544              		.cfi_offset 14, -4
 545 0002 82B0     		sub	sp, sp, #8
 546              		.cfi_def_cfa_offset 24
 184:Src/main.c    **** 
 547              		.loc 1 184 3 view .LVU143
 548 0004 FFF7FEFF 		bl	HAL_Init
 549              	.LVL26:
 191:Src/main.c    **** 
 550              		.loc 1 191 3 view .LVU144
 551 0008 FFF7FEFF 		bl	SystemClock_Config
 552              	.LVL27:
 198:Src/main.c    ****   MX_DMA_Init();
 553              		.loc 1 198 3 view .LVU145
 554 000c FFF7FEFF 		bl	MX_GPIO_Init
 555              	.LVL28:
 199:Src/main.c    ****   MX_ADC1_Init();
 556              		.loc 1 199 3 view .LVU146
 557 0010 FFF7FEFF 		bl	MX_DMA_Init
 558              	.LVL29:
 200:Src/main.c    ****   MX_TIM1_Init();
 559              		.loc 1 200 3 view .LVU147
 560 0014 FFF7FEFF 		bl	MX_ADC1_Init
 561              	.LVL30:
ARM GAS  /tmp/cceuXVgF.s 			page 22


 201:Src/main.c    ****   MX_USB_DEVICE_Init();
 562              		.loc 1 201 3 view .LVU148
 563 0018 FFF7FEFF 		bl	MX_TIM1_Init
 564              	.LVL31:
 202:Src/main.c    ****   MX_TIM2_Init();
 565              		.loc 1 202 3 view .LVU149
 566 001c FFF7FEFF 		bl	MX_USB_DEVICE_Init
 567              	.LVL32:
 203:Src/main.c    ****   /* USER CODE BEGIN 2 */
 568              		.loc 1 203 3 view .LVU150
 569 0020 FFF7FEFF 		bl	MX_TIM2_Init
 570              	.LVL33:
 205:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 571              		.loc 1 205 3 view .LVU151
 572 0024 0222     		movs	r2, #2
 573 0026 A749     		ldr	r1, .L51
 574 0028 A748     		ldr	r0, .L51+4
 575 002a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 576              	.LVL34:
 206:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 577              		.loc 1 206 3 view .LVU152
 578 002e A74C     		ldr	r4, .L51+8
 579 0030 0021     		movs	r1, #0
 580 0032 2046     		mov	r0, r4
 581 0034 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 582              	.LVL35:
 207:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 583              		.loc 1 207 3 view .LVU153
 584 0038 0021     		movs	r1, #0
 585 003a 2046     		mov	r0, r4
 586 003c FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 587              	.LVL36:
 208:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 588              		.loc 1 208 3 view .LVU154
 589 0040 0421     		movs	r1, #4
 590 0042 2046     		mov	r0, r4
 591 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 592              	.LVL37:
 209:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 593              		.loc 1 209 3 view .LVU155
 594 0048 0421     		movs	r1, #4
 595 004a 2046     		mov	r0, r4
 596 004c FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 597              	.LVL38:
 210:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 598              		.loc 1 210 3 view .LVU156
 599 0050 0821     		movs	r1, #8
 600 0052 2046     		mov	r0, r4
 601 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 602              	.LVL39:
 211:Src/main.c    **** 
 603              		.loc 1 211 3 view .LVU157
 604 0058 0821     		movs	r1, #8
 605 005a 2046     		mov	r0, r4
 606 005c FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 607              	.LVL40:
 213:Src/main.c    **** 
ARM GAS  /tmp/cceuXVgF.s 			page 23


 608              		.loc 1 213 3 view .LVU158
 609 0060 9B48     		ldr	r0, .L51+12
 610 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start
 611              	.LVL41:
 215:Src/main.c    ****   HAL_Delay(1000);
 612              		.loc 1 215 3 view .LVU159
 215:Src/main.c    ****   HAL_Delay(1000);
 613              		.loc 1 215 27 is_stmt 0 view .LVU160
 614 0066 FFF7FEFF 		bl	HAL_GetTick
 615              	.LVL42:
 616 006a 0446     		mov	r4, r0
 617              	.LVL43:
 216:Src/main.c    ****   TIM1->CCER = 0x0000;
 618              		.loc 1 216 3 is_stmt 1 view .LVU161
 619 006c 4FF47A70 		mov	r0, #1000
 620              	.LVL44:
 216:Src/main.c    ****   TIM1->CCER = 0x0000;
 621              		.loc 1 216 3 is_stmt 0 view .LVU162
 622 0070 FFF7FEFF 		bl	HAL_Delay
 623              	.LVL45:
 217:Src/main.c    ****   previousTime2 = HAL_GetTick();
 624              		.loc 1 217 3 is_stmt 1 view .LVU163
 217:Src/main.c    ****   previousTime2 = HAL_GetTick();
 625              		.loc 1 217 14 is_stmt 0 view .LVU164
 626 0074 974B     		ldr	r3, .L51+16
 627 0076 0022     		movs	r2, #0
 628 0078 1A62     		str	r2, [r3, #32]
 218:Src/main.c    ****   previousTime3 = HAL_GetTick();
 629              		.loc 1 218 3 is_stmt 1 view .LVU165
 218:Src/main.c    ****   previousTime3 = HAL_GetTick();
 630              		.loc 1 218 19 is_stmt 0 view .LVU166
 631 007a FFF7FEFF 		bl	HAL_GetTick
 632              	.LVL46:
 218:Src/main.c    ****   previousTime3 = HAL_GetTick();
 633              		.loc 1 218 17 discriminator 1 view .LVU167
 634 007e 964B     		ldr	r3, .L51+20
 635 0080 1860     		str	r0, [r3]
 219:Src/main.c    **** 
 636              		.loc 1 219 3 is_stmt 1 view .LVU168
 219:Src/main.c    **** 
 637              		.loc 1 219 19 is_stmt 0 view .LVU169
 638 0082 FFF7FEFF 		bl	HAL_GetTick
 639              	.LVL47:
 219:Src/main.c    **** 
 640              		.loc 1 219 17 discriminator 1 view .LVU170
 641 0086 954B     		ldr	r3, .L51+24
 642 0088 1860     		str	r0, [r3]
 643 008a 81E0     		b	.L34
 644              	.L48:
 645              	.LBB9:
 236:Src/main.c    ****       LOG_VAR(rpm);
 646              		.loc 1 236 7 is_stmt 1 view .LVU171
 237:Src/main.c    ****       LOG_VAR(pedal_value_mapped);
 647              		.loc 1 237 7 view .LVU172
 648 008c 944B     		ldr	r3, .L51+28
 649 008e 1968     		ldr	r1, [r3]
 650 0090 9448     		ldr	r0, .L51+32
ARM GAS  /tmp/cceuXVgF.s 			page 24


 651 0092 FFF7FEFF 		bl	log_variable
 652              	.LVL48:
 238:Src/main.c    ****       LOG_VAR(temporary_current_value);
 653              		.loc 1 238 7 view .LVU173
 654 0096 944B     		ldr	r3, .L51+36
 655 0098 1968     		ldr	r1, [r3]
 656 009a 9448     		ldr	r0, .L51+40
 657 009c FFF7FEFF 		bl	log_variable
 658              	.LVL49:
 239:Src/main.c    ****       LOG_VAR(pwm_value);
 659              		.loc 1 239 7 view .LVU174
 660 00a0 934B     		ldr	r3, .L51+44
 661 00a2 1988     		ldrh	r1, [r3]
 662 00a4 9348     		ldr	r0, .L51+48
 663 00a6 FFF7FEFF 		bl	log_variable
 664              	.LVL50:
 240:Src/main.c    ****       LOG_POST();
 665              		.loc 1 240 7 view .LVU175
 666 00aa 934B     		ldr	r3, .L51+52
 667 00ac 1968     		ldr	r1, [r3]
 668 00ae 9348     		ldr	r0, .L51+56
 669 00b0 FFF7FEFF 		bl	log_variable
 670              	.LVL51:
 241:Src/main.c    ****       previousTime3 = HAL_GetTick();
 671              		.loc 1 241 7 view .LVU176
 672 00b4 FFF7FEFF 		bl	LOG_POST
 673              	.LVL52:
 242:Src/main.c    ****     }
 674              		.loc 1 242 7 view .LVU177
 242:Src/main.c    ****     }
 675              		.loc 1 242 23 is_stmt 0 view .LVU178
 676 00b8 FFF7FEFF 		bl	HAL_GetTick
 677              	.LVL53:
 242:Src/main.c    ****     }
 678              		.loc 1 242 21 discriminator 1 view .LVU179
 679 00bc 874B     		ldr	r3, .L51+24
 680 00be 1860     		str	r0, [r3]
 681 00c0 76E0     		b	.L35
 682              	.L49:
 260:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 683              		.loc 1 260 7 is_stmt 1 view .LVU180
 684 00c2 824B     		ldr	r3, .L51+8
 685 00c4 1A68     		ldr	r2, [r3]
 686 00c6 0023     		movs	r3, #0
 687 00c8 D363     		str	r3, [r2, #60]
 261:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
 688              		.loc 1 261 7 view .LVU181
 689 00ca 9363     		str	r3, [r2, #56]
 262:Src/main.c    ****       TIM1->CCER = 0x0000;
 690              		.loc 1 262 7 view .LVU182
 691 00cc 5363     		str	r3, [r2, #52]
 263:Src/main.c    ****       rpm = get_rpm(-1);
 692              		.loc 1 263 7 view .LVU183
 263:Src/main.c    ****       rpm = get_rpm(-1);
 693              		.loc 1 263 18 is_stmt 0 view .LVU184
 694 00ce 814A     		ldr	r2, .L51+16
 695 00d0 1362     		str	r3, [r2, #32]
ARM GAS  /tmp/cceuXVgF.s 			page 25


 264:Src/main.c    ****       previousTime2 = HAL_GetTick();
 696              		.loc 1 264 7 is_stmt 1 view .LVU185
 264:Src/main.c    ****       previousTime2 = HAL_GetTick();
 697              		.loc 1 264 13 is_stmt 0 view .LVU186
 698 00d2 4FF0FF30 		mov	r0, #-1
 699 00d6 FFF7FEFF 		bl	get_rpm
 700              	.LVL54:
 264:Src/main.c    ****       previousTime2 = HAL_GetTick();
 701              		.loc 1 264 11 discriminator 1 view .LVU187
 702 00da 814B     		ldr	r3, .L51+28
 703 00dc 1860     		str	r0, [r3]
 265:Src/main.c    ****     }
 704              		.loc 1 265 7 is_stmt 1 view .LVU188
 265:Src/main.c    ****     }
 705              		.loc 1 265 23 is_stmt 0 view .LVU189
 706 00de FFF7FEFF 		bl	HAL_GetTick
 707              	.LVL55:
 265:Src/main.c    ****     }
 708              		.loc 1 265 21 discriminator 1 view .LVU190
 709 00e2 7D4B     		ldr	r3, .L51+20
 710 00e4 1860     		str	r0, [r3]
 711 00e6 88E0     		b	.L36
 712              	.L50:
 270:Src/main.c    ****       HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 713              		.loc 1 270 7 is_stmt 1 view .LVU191
 714 00e8 784D     		ldr	r5, .L51+8
 715 00ea 0021     		movs	r1, #0
 716 00ec 2846     		mov	r0, r5
 717 00ee FFF7FEFF 		bl	HAL_TIM_PWM_Start
 718              	.LVL56:
 271:Src/main.c    ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 719              		.loc 1 271 7 view .LVU192
 720 00f2 0021     		movs	r1, #0
 721 00f4 2846     		mov	r0, r5
 722 00f6 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 723              	.LVL57:
 272:Src/main.c    ****       HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 724              		.loc 1 272 7 view .LVU193
 725 00fa 0421     		movs	r1, #4
 726 00fc 2846     		mov	r0, r5
 727 00fe FFF7FEFF 		bl	HAL_TIM_PWM_Start
 728              	.LVL58:
 273:Src/main.c    ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 729              		.loc 1 273 7 view .LVU194
 730 0102 0421     		movs	r1, #4
 731 0104 2846     		mov	r0, r5
 732 0106 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 733              	.LVL59:
 274:Src/main.c    ****       HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 734              		.loc 1 274 7 view .LVU195
 735 010a 0821     		movs	r1, #8
 736 010c 2846     		mov	r0, r5
 737 010e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 738              	.LVL60:
 275:Src/main.c    ****     }
 739              		.loc 1 275 7 view .LVU196
 740 0112 0821     		movs	r1, #8
ARM GAS  /tmp/cceuXVgF.s 			page 26


 741 0114 2846     		mov	r0, r5
 742 0116 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 743              	.LVL61:
 744 011a 77E0     		b	.L37
 745              	.L39:
 289:Src/main.c    ****       }
 746              		.loc 1 289 9 view .LVU197
 289:Src/main.c    ****       }
 747              		.loc 1 289 30 is_stmt 0 view .LVU198
 748 011c 784B     		ldr	r3, .L51+60
 749 011e 1888     		ldrh	r0, [r3]
 750 0120 42F21073 		movw	r3, #10000
 751 0124 0093     		str	r3, [sp]
 752 0126 0023     		movs	r3, #0
 753 0128 4FF46162 		mov	r2, #3600
 754 012c 4FF42F71 		mov	r1, #700
 755 0130 80B2     		uxth	r0, r0
 756 0132 FFF7FEFF 		bl	map
 757              	.LVL62:
 289:Src/main.c    ****       }
 758              		.loc 1 289 28 discriminator 1 view .LVU199
 759 0136 6C4B     		ldr	r3, .L51+36
 760 0138 1860     		str	r0, [r3]
 761 013a 93E0     		b	.L40
 762              	.L42:
 301:Src/main.c    ****         }
 763              		.loc 1 301 11 is_stmt 1 view .LVU200
 301:Src/main.c    ****         }
 764              		.loc 1 301 21 is_stmt 0 view .LVU201
 765 013c 6E4A     		ldr	r2, .L51+52
 766 013e 1360     		str	r3, [r2]
 767 0140 A5E0     		b	.L43
 768              	.L41:
 307:Src/main.c    ****         {
 769              		.loc 1 307 9 is_stmt 1 view .LVU202
 307:Src/main.c    ****         {
 770              		.loc 1 307 23 is_stmt 0 view .LVU203
 771 0142 704B     		ldr	r3, .L51+64
 772 0144 1B88     		ldrh	r3, [r3]
 773 0146 6C4A     		ldr	r2, .L51+52
 774 0148 1268     		ldr	r2, [r2]
 307:Src/main.c    ****         {
 775              		.loc 1 307 12 view .LVU204
 776 014a 9342     		cmp	r3, r2
 777 014c 02D9     		bls	.L44
 309:Src/main.c    ****         }
 778              		.loc 1 309 11 is_stmt 1 view .LVU205
 309:Src/main.c    ****         }
 779              		.loc 1 309 21 is_stmt 0 view .LVU206
 780 014e 6A4A     		ldr	r2, .L51+52
 781 0150 1360     		str	r3, [r2]
 782 0152 9CE0     		b	.L43
 783              	.L44:
 311:Src/main.c    ****         {
 784              		.loc 1 311 14 is_stmt 1 view .LVU207
 311:Src/main.c    ****         {
 785              		.loc 1 311 28 is_stmt 0 view .LVU208
ARM GAS  /tmp/cceuXVgF.s 			page 27


 786 0154 684B     		ldr	r3, .L51+52
 787 0156 1B68     		ldr	r3, [r3]
 311:Src/main.c    ****         {
 788              		.loc 1 311 17 view .LVU209
 789 0158 B3F5C87F 		cmp	r3, #400
 790 015c 80F09780 		bcs	.L43
 313:Src/main.c    ****           {
 791              		.loc 1 313 11 is_stmt 1 view .LVU210
 313:Src/main.c    ****           {
 792              		.loc 1 313 15 is_stmt 0 view .LVU211
 793 0160 FFF7FEFF 		bl	HAL_GetTick
 794              	.LVL63:
 313:Src/main.c    ****           {
 795              		.loc 1 313 29 discriminator 1 view .LVU212
 796 0164 001B     		subs	r0, r0, r4
 313:Src/main.c    ****           {
 797              		.loc 1 313 14 discriminator 1 view .LVU213
 798 0166 0228     		cmp	r0, #2
 799 0168 40F29180 		bls	.L43
 315:Src/main.c    ****             previousTime = HAL_GetTick();
 800              		.loc 1 315 13 is_stmt 1 view .LVU214
 315:Src/main.c    ****             previousTime = HAL_GetTick();
 801              		.loc 1 315 23 is_stmt 0 view .LVU215
 802 016c 624A     		ldr	r2, .L51+52
 803 016e 1368     		ldr	r3, [r2]
 804 0170 0133     		adds	r3, r3, #1
 805 0172 1360     		str	r3, [r2]
 316:Src/main.c    ****           }
 806              		.loc 1 316 13 is_stmt 1 view .LVU216
 316:Src/main.c    ****           }
 807              		.loc 1 316 28 is_stmt 0 view .LVU217
 808 0174 FFF7FEFF 		bl	HAL_GetTick
 809              	.LVL64:
 810 0178 0446     		mov	r4, r0
 811              	.LVL65:
 316:Src/main.c    ****           }
 812              		.loc 1 316 28 view .LVU218
 813 017a 88E0     		b	.L43
 814              	.LVL66:
 815              	.L38:
 328:Src/main.c    ****     {
 816              		.loc 1 328 10 is_stmt 1 view .LVU219
 328:Src/main.c    ****     {
 817              		.loc 1 328 14 is_stmt 0 view .LVU220
 818 017c 624B     		ldr	r3, .L51+68
 819 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328:Src/main.c    ****     {
 820              		.loc 1 328 13 view .LVU221
 821 0180 33B1     		cbz	r3, .L34
 328:Src/main.c    ****     {
 822              		.loc 1 328 42 discriminator 1 view .LVU222
 823 0182 5F4B     		ldr	r3, .L51+60
 824 0184 1B88     		ldrh	r3, [r3]
 825 0186 9BB2     		uxth	r3, r3
 328:Src/main.c    ****     {
 826              		.loc 1 328 27 discriminator 1 view .LVU223
 827 0188 B3F5617F 		cmp	r3, #900
ARM GAS  /tmp/cceuXVgF.s 			page 28


 828 018c C0F0D480 		bcc	.L47
 829              	.L34:
 328:Src/main.c    ****     {
 830              		.loc 1 328 27 discriminator 1 view .LVU224
 831              	.LBE9:
 225:Src/main.c    ****   {
 832              		.loc 1 225 3 is_stmt 1 view .LVU225
 833              	.LBB10:
 227:Src/main.c    ****     average = 0;
 834              		.loc 1 227 5 view .LVU226
 227:Src/main.c    ****     average = 0;
 835              		.loc 1 227 30 is_stmt 0 view .LVU227
 836 0190 5E4B     		ldr	r3, .L51+72
 837 0192 1888     		ldrh	r0, [r3]
 838 0194 80B2     		uxth	r0, r0
 839 0196 FFF7FEFF 		bl	filtreye_koy
 840              	.LVL67:
 228:Src/main.c    **** 
 841              		.loc 1 228 5 is_stmt 1 view .LVU228
 228:Src/main.c    **** 
 842              		.loc 1 228 13 is_stmt 0 view .LVU229
 843 019a 5D4B     		ldr	r3, .L51+76
 844 019c 0022     		movs	r2, #0
 845 019e 1A80     		strh	r2, [r3]	@ movhi
 233:Src/main.c    ****     {
 846              		.loc 1 233 5 is_stmt 1 view .LVU230
 233:Src/main.c    ****     {
 847              		.loc 1 233 9 is_stmt 0 view .LVU231
 848 01a0 FFF7FEFF 		bl	HAL_GetTick
 849              	.LVL68:
 233:Src/main.c    ****     {
 850              		.loc 1 233 23 discriminator 1 view .LVU232
 851 01a4 4D4B     		ldr	r3, .L51+24
 852 01a6 1B68     		ldr	r3, [r3]
 853 01a8 C01A     		subs	r0, r0, r3
 233:Src/main.c    ****     {
 854              		.loc 1 233 8 discriminator 1 view .LVU233
 855 01aa 4128     		cmp	r0, #65
 856 01ac 3FF66EAF 		bhi	.L48
 857              	.L35:
 245:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 858              		.loc 1 245 5 is_stmt 1 view .LVU234
 245:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 859              		.loc 1 245 14 is_stmt 0 view .LVU235
 860 01b0 584D     		ldr	r5, .L51+80
 861 01b2 0121     		movs	r1, #1
 862 01b4 2846     		mov	r0, r5
 863 01b6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 864              	.LVL69:
 245:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 865              		.loc 1 245 14 discriminator 1 view .LVU236
 866 01ba 0038     		subs	r0, r0, #0
 867 01bc 18BF     		it	ne
 868 01be 0120     		movne	r0, #1
 245:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 869              		.loc 1 245 12 discriminator 1 view .LVU237
 870 01c0 554B     		ldr	r3, .L51+84
ARM GAS  /tmp/cceuXVgF.s 			page 29


 871 01c2 1870     		strb	r0, [r3]
 246:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 872              		.loc 1 246 5 is_stmt 1 view .LVU238
 246:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 873              		.loc 1 246 14 is_stmt 0 view .LVU239
 874 01c4 0221     		movs	r1, #2
 875 01c6 2846     		mov	r0, r5
 876 01c8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 877              	.LVL70:
 246:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 878              		.loc 1 246 14 discriminator 1 view .LVU240
 879 01cc 0038     		subs	r0, r0, #0
 880 01ce 18BF     		it	ne
 881 01d0 0120     		movne	r0, #1
 246:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 882              		.loc 1 246 12 discriminator 1 view .LVU241
 883 01d2 524B     		ldr	r3, .L51+88
 884 01d4 1870     		strb	r0, [r3]
 247:Src/main.c    **** 
 885              		.loc 1 247 5 is_stmt 1 view .LVU242
 247:Src/main.c    **** 
 886              		.loc 1 247 14 is_stmt 0 view .LVU243
 887 01d6 0421     		movs	r1, #4
 888 01d8 2846     		mov	r0, r5
 889 01da FFF7FEFF 		bl	HAL_GPIO_ReadPin
 890              	.LVL71:
 247:Src/main.c    **** 
 891              		.loc 1 247 14 discriminator 1 view .LVU244
 892 01de 0038     		subs	r0, r0, #0
 893 01e0 18BF     		it	ne
 894 01e2 0120     		movne	r0, #1
 247:Src/main.c    **** 
 895              		.loc 1 247 12 discriminator 1 view .LVU245
 896 01e4 4E4B     		ldr	r3, .L51+92
 897 01e6 1870     		strb	r0, [r3]
 258:Src/main.c    ****     {
 898              		.loc 1 258 5 is_stmt 1 view .LVU246
 258:Src/main.c    ****     {
 899              		.loc 1 258 9 is_stmt 0 view .LVU247
 900 01e8 FFF7FEFF 		bl	HAL_GetTick
 901              	.LVL72:
 258:Src/main.c    ****     {
 902              		.loc 1 258 23 discriminator 1 view .LVU248
 903 01ec 3A4B     		ldr	r3, .L51+20
 904 01ee 1B68     		ldr	r3, [r3]
 905 01f0 C01A     		subs	r0, r0, r3
 258:Src/main.c    ****     {
 906              		.loc 1 258 8 discriminator 1 view .LVU249
 907 01f2 B0F5C87F 		cmp	r0, #400
 908 01f6 3FF664AF 		bhi	.L49
 909              	.L36:
 268:Src/main.c    ****     {
 910              		.loc 1 268 5 is_stmt 1 view .LVU250
 268:Src/main.c    ****     {
 911              		.loc 1 268 9 is_stmt 0 view .LVU251
 912 01fa FFF7FEFF 		bl	HAL_GetTick
 913              	.LVL73:
ARM GAS  /tmp/cceuXVgF.s 			page 30


 268:Src/main.c    ****     {
 914              		.loc 1 268 23 discriminator 1 view .LVU252
 915 01fe 494B     		ldr	r3, .L51+96
 916 0200 1B68     		ldr	r3, [r3]
 917 0202 C01A     		subs	r0, r0, r3
 268:Src/main.c    ****     {
 918              		.loc 1 268 8 discriminator 1 view .LVU253
 919 0204 B0F5FA7F 		cmp	r0, #500
 920 0208 3FF66EAF 		bhi	.L50
 921              	.L37:
 278:Src/main.c    ****     {
 922              		.loc 1 278 5 is_stmt 1 view .LVU254
 278:Src/main.c    ****     {
 923              		.loc 1 278 20 is_stmt 0 view .LVU255
 924 020c 3C4B     		ldr	r3, .L51+60
 925 020e 1B88     		ldrh	r3, [r3]
 926 0210 9BB2     		uxth	r3, r3
 278:Src/main.c    ****     {
 927              		.loc 1 278 8 view .LVU256
 928 0212 B3F5617F 		cmp	r3, #900
 929 0216 B1D3     		bcc	.L38
 278:Src/main.c    ****     {
 930              		.loc 1 278 30 discriminator 1 view .LVU257
 931 0218 FFF7FEFF 		bl	HAL_GetTick
 932              	.LVL74:
 278:Src/main.c    ****     {
 933              		.loc 1 278 44 discriminator 1 view .LVU258
 934 021c 414B     		ldr	r3, .L51+96
 935 021e 1B68     		ldr	r3, [r3]
 936 0220 C01A     		subs	r0, r0, r3
 278:Src/main.c    ****     {
 937              		.loc 1 278 27 discriminator 1 view .LVU259
 938 0222 B0F5E17F 		cmp	r0, #450
 939 0226 A9D9     		bls	.L38
 280:Src/main.c    **** 
 940              		.loc 1 280 7 is_stmt 1 view .LVU260
 280:Src/main.c    **** 
 941              		.loc 1 280 36 is_stmt 0 view .LVU261
 942 0228 3F4B     		ldr	r3, .L51+100
 943 022a 0122     		movs	r2, #1
 944 022c 1A60     		str	r2, [r3]
 282:Src/main.c    ****       if (mode == 0)
 945              		.loc 1 282 7 is_stmt 1 view .LVU262
 282:Src/main.c    ****       if (mode == 0)
 946              		.loc 1 282 14 is_stmt 0 view .LVU263
 947 022e 2021     		movs	r1, #32
 948 0230 3E48     		ldr	r0, .L51+104
 949 0232 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 950              	.LVL75:
 282:Src/main.c    ****       if (mode == 0)
 951              		.loc 1 282 14 discriminator 1 view .LVU264
 952 0236 0028     		cmp	r0, #0
 953 0238 14BF     		ite	ne
 954 023a 0122     		movne	r2, #1
 955 023c 0022     		moveq	r2, #0
 282:Src/main.c    ****       if (mode == 0)
 956              		.loc 1 282 12 discriminator 1 view .LVU265
ARM GAS  /tmp/cceuXVgF.s 			page 31


 957 023e 3C4B     		ldr	r3, .L51+108
 958 0240 1A70     		strb	r2, [r3]
 283:Src/main.c    ****       {
 959              		.loc 1 283 7 is_stmt 1 view .LVU266
 283:Src/main.c    ****       {
 960              		.loc 1 283 10 is_stmt 0 view .LVU267
 961 0242 7FF46BAF 		bne	.L39
 285:Src/main.c    ****       }
 962              		.loc 1 285 9 is_stmt 1 view .LVU268
 285:Src/main.c    ****       }
 963              		.loc 1 285 30 is_stmt 0 view .LVU269
 964 0246 2E4B     		ldr	r3, .L51+60
 965 0248 1888     		ldrh	r0, [r3]
 966 024a 42F21073 		movw	r3, #10000
 967 024e 0093     		str	r3, [sp]
 968 0250 0023     		movs	r3, #0
 969 0252 4FF46162 		mov	r2, #3600
 970 0256 4FF42F71 		mov	r1, #700
 971 025a 80B2     		uxth	r0, r0
 972 025c FFF7FEFF 		bl	map
 973              	.LVL76:
 285:Src/main.c    ****       }
 974              		.loc 1 285 28 discriminator 1 view .LVU270
 975 0260 214B     		ldr	r3, .L51+36
 976 0262 1860     		str	r0, [r3]
 977              	.L40:
 291:Src/main.c    **** 
 978              		.loc 1 291 7 is_stmt 1 view .LVU271
 979 0264 0A20     		movs	r0, #10
 980 0266 FFF7FEFF 		bl	HAL_Delay
 981              	.LVL77:
 293:Src/main.c    ****       {
 982              		.loc 1 293 7 view .LVU272
 293:Src/main.c    ****       {
 983              		.loc 1 293 35 is_stmt 0 view .LVU273
 984 026a 214B     		ldr	r3, .L51+44
 985 026c 1A88     		ldrh	r2, [r3]
 986 026e 1E4B     		ldr	r3, .L51+36
 987 0270 1B68     		ldr	r3, [r3]
 293:Src/main.c    ****       {
 988              		.loc 1 293 10 view .LVU274
 989 0272 9A42     		cmp	r2, r3
 990 0274 7FF665AF 		bls	.L41
 295:Src/main.c    ****         {
 991              		.loc 1 295 9 is_stmt 1 view .LVU275
 295:Src/main.c    ****         {
 992              		.loc 1 295 23 is_stmt 0 view .LVU276
 993 0278 224B     		ldr	r3, .L51+64
 994 027a 1B88     		ldrh	r3, [r3]
 995 027c 1E4A     		ldr	r2, .L51+52
 996 027e 1268     		ldr	r2, [r2]
 295:Src/main.c    ****         {
 997              		.loc 1 295 12 view .LVU277
 998 0280 9342     		cmp	r3, r2
 999 0282 BFF45BAF 		bcs	.L42
 297:Src/main.c    ****         }
 1000              		.loc 1 297 11 is_stmt 1 view .LVU278
ARM GAS  /tmp/cceuXVgF.s 			page 32


 297:Src/main.c    ****         }
 1001              		.loc 1 297 21 is_stmt 0 view .LVU279
 1002 0286 1C4A     		ldr	r2, .L51+52
 1003 0288 1368     		ldr	r3, [r2]
 1004 028a 013B     		subs	r3, r3, #1
 1005 028c 1360     		str	r3, [r2]
 1006              	.L43:
 321:Src/main.c    ****       {
 1007              		.loc 1 321 7 is_stmt 1 view .LVU280
 321:Src/main.c    ****       {
 1008              		.loc 1 321 11 is_stmt 0 view .LVU281
 1009 028e 1E4B     		ldr	r3, .L51+68
 1010 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 321:Src/main.c    ****       {
 1011              		.loc 1 321 10 view .LVU282
 1012 0292 002B     		cmp	r3, #0
 1013 0294 7FF47CAF 		bne	.L34
 323:Src/main.c    ****         geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 1014              		.loc 1 323 9 is_stmt 1 view .LVU283
 323:Src/main.c    ****         geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 1015              		.loc 1 323 20 is_stmt 0 view .LVU284
 1016 0298 1B4B     		ldr	r3, .L51+68
 1017 029a 0122     		movs	r2, #1
 1018 029c 1A70     		strb	r2, [r3]
 324:Src/main.c    ****         first_step(hall_A, hall_B, hall_C);
 1019              		.loc 1 324 9 is_stmt 1 view .LVU285
 324:Src/main.c    ****         first_step(hall_A, hall_B, hall_C);
 1020              		.loc 1 324 22 is_stmt 0 view .LVU286
 1021 029e 0821     		movs	r1, #8
 1022 02a0 1C48     		ldr	r0, .L51+80
 1023 02a2 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1024              	.LVL78:
 324:Src/main.c    ****         first_step(hall_A, hall_B, hall_C);
 1025              		.loc 1 324 22 discriminator 1 view .LVU287
 1026 02a6 0038     		subs	r0, r0, #0
 1027 02a8 18BF     		it	ne
 1028 02aa 0120     		movne	r0, #1
 324:Src/main.c    ****         first_step(hall_A, hall_B, hall_C);
 1029              		.loc 1 324 20 discriminator 1 view .LVU288
 1030 02ac 214B     		ldr	r3, .L51+112
 1031 02ae 1870     		strb	r0, [r3]
 325:Src/main.c    ****       }
 1032              		.loc 1 325 9 is_stmt 1 view .LVU289
 1033 02b0 194B     		ldr	r3, .L51+84
 1034 02b2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1035 02b4 194B     		ldr	r3, .L51+88
 1036 02b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1037 02b8 194B     		ldr	r3, .L51+92
 1038 02ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1039 02bc FFF7FEFF 		bl	first_step
 1040              	.LVL79:
 1041 02c0 66E7     		b	.L34
 1042              	.L52:
 1043 02c2 00BF     		.align	2
 1044              	.L51:
 1045 02c4 00000000 		.word	adcbuffer
 1046 02c8 00000000 		.word	hadc1
ARM GAS  /tmp/cceuXVgF.s 			page 33


 1047 02cc 00000000 		.word	htim1
 1048 02d0 00000000 		.word	htim2
 1049 02d4 002C0140 		.word	1073818624
 1050 02d8 00000000 		.word	previousTime2
 1051 02dc 00000000 		.word	previousTime3
 1052 02e0 00000000 		.word	rpm
 1053 02e4 00000000 		.word	.LC0
 1054 02e8 00000000 		.word	pedal_value_mapped
 1055 02ec 04000000 		.word	.LC1
 1056 02f0 00000000 		.word	temporary_current_value
 1057 02f4 18000000 		.word	.LC2
 1058 02f8 00000000 		.word	pwm_value
 1059 02fc 30000000 		.word	.LC3
 1060 0300 00000000 		.word	speedInAdc
 1061 0304 00000000 		.word	min_pwm_limit
 1062 0308 00000000 		.word	run_status
 1063 030c 00000000 		.word	filtered_current
 1064 0310 00000000 		.word	average
 1065 0314 00080140 		.word	1073809408
 1066 0318 00000000 		.word	hall_A
 1067 031c 00000000 		.word	hall_B
 1068 0320 00000000 		.word	hall_C
 1069 0324 00000000 		.word	timeForRotorStopStatusMs
 1070 0328 00000000 		.word	timeForRotorStopStatusMsFlag
 1071 032c 000C0140 		.word	1073810432
 1072 0330 00000000 		.word	mode
 1073 0334 00000000 		.word	geri_vites
 1074              	.L47:
 330:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
 1075              		.loc 1 330 7 view .LVU290
 330:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
 1076              		.loc 1 330 17 is_stmt 0 view .LVU291
 1077 0338 0025     		movs	r5, #0
 1078 033a 204B     		ldr	r3, .L53
 1079 033c 1D60     		str	r5, [r3]
 337:Src/main.c    ****       flagg = 1;
 1080              		.loc 1 337 7 is_stmt 1 view .LVU292
 337:Src/main.c    ****       flagg = 1;
 1081              		.loc 1 337 18 is_stmt 0 view .LVU293
 1082 033e 204B     		ldr	r3, .L53+4
 1083 0340 40F6CC42 		movw	r2, #3276
 1084 0344 1A62     		str	r2, [r3, #32]
 338:Src/main.c    ****       oldValue[0] = 0;
 1085              		.loc 1 338 7 is_stmt 1 view .LVU294
 338:Src/main.c    ****       oldValue[0] = 0;
 1086              		.loc 1 338 13 is_stmt 0 view .LVU295
 1087 0346 0122     		movs	r2, #1
 1088 0348 1E4B     		ldr	r3, .L53+8
 1089 034a 1A70     		strb	r2, [r3]
 339:Src/main.c    ****       oldValue[1] = 0;
 1090              		.loc 1 339 7 is_stmt 1 view .LVU296
 339:Src/main.c    ****       oldValue[1] = 0;
 1091              		.loc 1 339 19 is_stmt 0 view .LVU297
 1092 034c 1E4B     		ldr	r3, .L53+12
 1093 034e 1D70     		strb	r5, [r3]
 340:Src/main.c    ****       oldValue[2] = 0;
 1094              		.loc 1 340 7 is_stmt 1 view .LVU298
ARM GAS  /tmp/cceuXVgF.s 			page 34


 340:Src/main.c    ****       oldValue[2] = 0;
 1095              		.loc 1 340 19 is_stmt 0 view .LVU299
 1096 0350 5D70     		strb	r5, [r3, #1]
 341:Src/main.c    ****       hall_A = 0;
 1097              		.loc 1 341 7 is_stmt 1 view .LVU300
 341:Src/main.c    ****       hall_A = 0;
 1098              		.loc 1 341 19 is_stmt 0 view .LVU301
 1099 0352 9D70     		strb	r5, [r3, #2]
 342:Src/main.c    ****       hall_B = 0;
 1100              		.loc 1 342 7 is_stmt 1 view .LVU302
 342:Src/main.c    ****       hall_B = 0;
 1101              		.loc 1 342 14 is_stmt 0 view .LVU303
 1102 0354 1D4B     		ldr	r3, .L53+16
 1103 0356 1D70     		strb	r5, [r3]
 343:Src/main.c    ****       hall_C = 0;
 1104              		.loc 1 343 7 is_stmt 1 view .LVU304
 343:Src/main.c    ****       hall_C = 0;
 1105              		.loc 1 343 14 is_stmt 0 view .LVU305
 1106 0358 1D4B     		ldr	r3, .L53+20
 1107 035a 1D70     		strb	r5, [r3]
 344:Src/main.c    ****       step = 0;
 1108              		.loc 1 344 7 is_stmt 1 view .LVU306
 344:Src/main.c    ****       step = 0;
 1109              		.loc 1 344 14 is_stmt 0 view .LVU307
 1110 035c 1D4B     		ldr	r3, .L53+24
 1111 035e 1D70     		strb	r5, [r3]
 345:Src/main.c    ****       pedal_value_mapped = 0;
 1112              		.loc 1 345 7 is_stmt 1 view .LVU308
 345:Src/main.c    ****       pedal_value_mapped = 0;
 1113              		.loc 1 345 12 is_stmt 0 view .LVU309
 1114 0360 1D4B     		ldr	r3, .L53+28
 1115 0362 1D60     		str	r5, [r3]
 346:Src/main.c    ****       first_step_flag = 1;
 1116              		.loc 1 346 7 is_stmt 1 view .LVU310
 346:Src/main.c    ****       first_step_flag = 1;
 1117              		.loc 1 346 26 is_stmt 0 view .LVU311
 1118 0364 1D4B     		ldr	r3, .L53+32
 1119 0366 1D60     		str	r5, [r3]
 347:Src/main.c    ****       run_status = false;
 1120              		.loc 1 347 7 is_stmt 1 view .LVU312
 347:Src/main.c    ****       run_status = false;
 1121              		.loc 1 347 23 is_stmt 0 view .LVU313
 1122 0368 1D4B     		ldr	r3, .L53+36
 1123 036a 1A70     		strb	r2, [r3]
 348:Src/main.c    **** 
 1124              		.loc 1 348 7 is_stmt 1 view .LVU314
 348:Src/main.c    **** 
 1125              		.loc 1 348 18 is_stmt 0 view .LVU315
 1126 036c 1D4B     		ldr	r3, .L53+40
 1127 036e 1D70     		strb	r5, [r3]
 350:Src/main.c    ****       HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_1);
 1128              		.loc 1 350 7 is_stmt 1 view .LVU316
 1129 0370 1D4E     		ldr	r6, .L53+44
 1130 0372 2946     		mov	r1, r5
 1131 0374 3046     		mov	r0, r6
 1132 0376 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 1133              	.LVL80:
ARM GAS  /tmp/cceuXVgF.s 			page 35


 351:Src/main.c    ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 1134              		.loc 1 351 7 view .LVU317
 1135 037a 2946     		mov	r1, r5
 1136 037c 3046     		mov	r0, r6
 1137 037e FFF7FEFF 		bl	HAL_TIMEx_PWMN_Stop
 1138              	.LVL81:
 352:Src/main.c    ****       HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_2);
 1139              		.loc 1 352 7 view .LVU318
 1140 0382 0421     		movs	r1, #4
 1141 0384 3046     		mov	r0, r6
 1142 0386 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 1143              	.LVL82:
 353:Src/main.c    ****       HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 1144              		.loc 1 353 7 view .LVU319
 1145 038a 0421     		movs	r1, #4
 1146 038c 3046     		mov	r0, r6
 1147 038e FFF7FEFF 		bl	HAL_TIMEx_PWMN_Stop
 1148              	.LVL83:
 354:Src/main.c    ****       HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_3);
 1149              		.loc 1 354 7 view .LVU320
 1150 0392 0821     		movs	r1, #8
 1151 0394 3046     		mov	r0, r6
 1152 0396 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 1153              	.LVL84:
 355:Src/main.c    ****       if (timeForRotorStopStatusMsFlag)
 1154              		.loc 1 355 7 view .LVU321
 1155 039a 0821     		movs	r1, #8
 1156 039c 3046     		mov	r0, r6
 1157 039e FFF7FEFF 		bl	HAL_TIMEx_PWMN_Stop
 1158              	.LVL85:
 356:Src/main.c    ****       {
 1159              		.loc 1 356 7 view .LVU322
 356:Src/main.c    ****       {
 1160              		.loc 1 356 11 is_stmt 0 view .LVU323
 1161 03a2 124B     		ldr	r3, .L53+48
 1162 03a4 1B68     		ldr	r3, [r3]
 356:Src/main.c    ****       {
 1163              		.loc 1 356 10 view .LVU324
 1164 03a6 002B     		cmp	r3, #0
 1165 03a8 3FF4F2AE 		beq	.L34
 358:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1166              		.loc 1 358 9 is_stmt 1 view .LVU325
 358:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1167              		.loc 1 358 36 is_stmt 0 view .LVU326
 1168 03ac FFF7FEFF 		bl	HAL_GetTick
 1169              	.LVL86:
 358:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1170              		.loc 1 358 34 discriminator 1 view .LVU327
 1171 03b0 0F4B     		ldr	r3, .L53+52
 1172 03b2 1860     		str	r0, [r3]
 359:Src/main.c    ****       }
 1173              		.loc 1 359 9 is_stmt 1 view .LVU328
 359:Src/main.c    ****       }
 1174              		.loc 1 359 38 is_stmt 0 view .LVU329
 1175 03b4 0D4B     		ldr	r3, .L53+48
 1176 03b6 1D60     		str	r5, [r3]
 1177 03b8 EAE6     		b	.L34
ARM GAS  /tmp/cceuXVgF.s 			page 36


 1178              	.L54:
 1179 03ba 00BF     		.align	2
 1180              	.L53:
 1181 03bc 00000000 		.word	pwm_value
 1182 03c0 002C0140 		.word	1073818624
 1183 03c4 00000000 		.word	flagg
 1184 03c8 00000000 		.word	oldValue
 1185 03cc 00000000 		.word	hall_A
 1186 03d0 00000000 		.word	hall_B
 1187 03d4 00000000 		.word	hall_C
 1188 03d8 00000000 		.word	step
 1189 03dc 00000000 		.word	pedal_value_mapped
 1190 03e0 00000000 		.word	first_step_flag
 1191 03e4 00000000 		.word	run_status
 1192 03e8 00000000 		.word	htim1
 1193 03ec 00000000 		.word	timeForRotorStopStatusMsFlag
 1194 03f0 00000000 		.word	timeForRotorStopStatusMs
 1195              	.LBE10:
 1196              		.cfi_endproc
 1197              	.LFE71:
 1199              		.section	.bss.dizi.0,"aw",%nobits
 1200              		.align	2
 1203              	dizi.0:
 1204 0000 00000000 		.space	80
 1204      00000000 
 1204      00000000 
 1204      00000000 
 1204      00000000 
 1205              		.section	.bss.dizi_index.1,"aw",%nobits
 1206              		.align	1
 1209              	dizi_index.1:
 1210 0000 0000     		.space	2
 1211              		.global	average
 1212              		.section	.bss.average,"aw",%nobits
 1213              		.align	1
 1216              	average:
 1217 0000 0000     		.space	2
 1218              		.global	temporary_current_value
 1219              		.section	.bss.temporary_current_value,"aw",%nobits
 1220              		.align	1
 1223              	temporary_current_value:
 1224 0000 0000     		.space	2
 1225              		.global	maxCurrent
 1226              		.section	.bss.maxCurrent,"aw",%nobits
 1227              		.align	1
 1230              	maxCurrent:
 1231 0000 0000     		.space	2
 1232              		.global	minCurrent
 1233              		.section	.data.minCurrent,"aw"
 1234              		.align	1
 1237              	minCurrent:
 1238 0000 8813     		.short	5000
 1239              		.global	previousTime3
 1240              		.section	.bss.previousTime3,"aw",%nobits
 1241              		.align	2
 1244              	previousTime3:
 1245 0000 00000000 		.space	4
ARM GAS  /tmp/cceuXVgF.s 			page 37


 1246              		.global	difference_two_coummutation_time
 1247              		.section	.data.difference_two_coummutation_time,"aw"
 1248              		.align	2
 1251              	difference_two_coummutation_time:
 1252 0000 01000000 		.word	1
 1253              		.global	rpm
 1254              		.section	.bss.rpm,"aw",%nobits
 1255              		.align	2
 1258              	rpm:
 1259 0000 00000000 		.space	4
 1260              		.global	rpm_counter
 1261              		.section	.bss.rpm_counter,"aw",%nobits
 1262              		.align	2
 1265              	rpm_counter:
 1266 0000 00000000 		.space	4
 1267              		.global	timeForRotorStopStatusMsFlag
 1268              		.section	.bss.timeForRotorStopStatusMsFlag,"aw",%nobits
 1269              		.align	2
 1272              	timeForRotorStopStatusMsFlag:
 1273 0000 00000000 		.space	4
 1274              		.global	timeForRotorStopStatusMs
 1275              		.section	.bss.timeForRotorStopStatusMs,"aw",%nobits
 1276              		.align	2
 1279              	timeForRotorStopStatusMs:
 1280 0000 00000000 		.space	4
 1281              		.global	oncekiDegerler
 1282              		.section	.bss.oncekiDegerler,"aw",%nobits
 1283              		.align	2
 1286              	oncekiDegerler:
 1287 0000 000000   		.space	3
 1288              		.global	previousTime2
 1289              		.section	.bss.previousTime2,"aw",%nobits
 1290              		.align	2
 1293              	previousTime2:
 1294 0000 00000000 		.space	4
 1295              		.global	firstStepDelay
 1296              		.section	.data.firstStepDelay,"aw"
 1297              		.align	1
 1300              	firstStepDelay:
 1301 0000 2800     		.short	40
 1302              		.global	min_pwm_limit
 1303              		.section	.data.min_pwm_limit,"aw"
 1304              		.align	1
 1307              	min_pwm_limit:
 1308 0000 6400     		.short	100
 1309              		.global	pedal_value_mapped
 1310              		.section	.bss.pedal_value_mapped,"aw",%nobits
 1311              		.align	2
 1314              	pedal_value_mapped:
 1315 0000 00000000 		.space	4
 1316              		.global	pwm_value
 1317              		.section	.bss.pwm_value,"aw",%nobits
 1318              		.align	2
 1321              	pwm_value:
 1322 0000 00000000 		.space	4
 1323              		.global	step
 1324              		.section	.bss.step,"aw",%nobits
ARM GAS  /tmp/cceuXVgF.s 			page 38


 1325              		.align	2
 1328              	step:
 1329 0000 00000000 		.space	4
 1330              		.global	geri_vites
 1331              		.section	.data.geri_vites,"aw"
 1334              	geri_vites:
 1335 0000 01       		.byte	1
 1336              		.global	hall_C
 1337              		.section	.bss.hall_C,"aw",%nobits
 1340              	hall_C:
 1341 0000 00       		.space	1
 1342              		.global	hall_B
 1343              		.section	.bss.hall_B,"aw",%nobits
 1346              	hall_B:
 1347 0000 00       		.space	1
 1348              		.global	hall_A
 1349              		.section	.bss.hall_A,"aw",%nobits
 1352              	hall_A:
 1353 0000 00       		.space	1
 1354              		.global	run_status
 1355              		.section	.bss.run_status,"aw",%nobits
 1358              	run_status:
 1359 0000 00       		.space	1
 1360              		.global	filtered_current
 1361              		.section	.bss.filtered_current,"aw",%nobits
 1362              		.align	1
 1365              	filtered_current:
 1366 0000 0000     		.space	2
 1367              		.global	currentValue
 1368              		.section	.bss.currentValue,"aw",%nobits
 1369              		.align	1
 1372              	currentValue:
 1373 0000 0000     		.space	2
 1374              		.global	speedInAdc
 1375              		.section	.bss.speedInAdc,"aw",%nobits
 1376              		.align	1
 1379              	speedInAdc:
 1380 0000 0000     		.space	2
 1381              		.global	adcbuffer
 1382              		.section	.bss.adcbuffer,"aw",%nobits
 1383              		.align	2
 1386              	adcbuffer:
 1387 0000 00000000 		.space	8
 1387      00000000 
 1388              		.global	flagg
 1389              		.section	.data.flagg,"aw"
 1392              	flagg:
 1393 0000 01       		.byte	1
 1394              		.global	first_step_flag
 1395              		.section	.data.first_step_flag,"aw"
 1398              	first_step_flag:
 1399 0000 01       		.byte	1
 1400              		.global	mode
 1401              		.section	.data.mode,"aw"
 1404              	mode:
 1405 0000 01       		.byte	1
 1406              		.global	oldValue
ARM GAS  /tmp/cceuXVgF.s 			page 39


 1407              		.section	.bss.oldValue,"aw",%nobits
 1408              		.align	2
 1411              	oldValue:
 1412 0000 000000   		.space	3
 1413              		.text
 1414              	.Letext0:
 1415              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 1416              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1417              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1418              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1419              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1420              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1421              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1422              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1423              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1424              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1425              		.file 13 "Inc/main.h"
 1426              		.file 14 "Inc/adc.h"
 1427              		.file 15 "Inc/tim.h"
 1428              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1429              		.file 17 "Inc/Zeugma_h/rpm.h"
 1430              		.file 18 "Inc/Zeugma_h/first_step.h"
 1431              		.file 19 "Inc/Zeugma_h/debug_monitor.h"
 1432              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1433              		.file 21 "Inc/usb_device.h"
 1434              		.file 22 "Inc/dma.h"
 1435              		.file 23 "Inc/gpio.h"
 1436              		.file 24 "<built-in>"
ARM GAS  /tmp/cceuXVgF.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cceuXVgF.s:19     .text.map:00000000 $t
     /tmp/cceuXVgF.s:25     .text.map:00000000 map
     /tmp/cceuXVgF.s:55     .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/cceuXVgF.s:61     .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/cceuXVgF.s:230    .text.HAL_ADC_ConvCpltCallback:000000d4 $d
     /tmp/cceuXVgF.s:1386   .bss.adcbuffer:00000000 adcbuffer
     /tmp/cceuXVgF.s:1372   .bss.currentValue:00000000 currentValue
     /tmp/cceuXVgF.s:1365   .bss.filtered_current:00000000 filtered_current
     /tmp/cceuXVgF.s:1223   .bss.temporary_current_value:00000000 temporary_current_value
     /tmp/cceuXVgF.s:1379   .bss.speedInAdc:00000000 speedInAdc
     /tmp/cceuXVgF.s:1321   .bss.pwm_value:00000000 pwm_value
     /tmp/cceuXVgF.s:1237   .data.minCurrent:00000000 minCurrent
     /tmp/cceuXVgF.s:1230   .bss.maxCurrent:00000000 maxCurrent
     /tmp/cceuXVgF.s:243    .text.filtreye_koy:00000000 $t
     /tmp/cceuXVgF.s:249    .text.filtreye_koy:00000000 filtreye_koy
     /tmp/cceuXVgF.s:333    .text.filtreye_koy:0000003c $d
     /tmp/cceuXVgF.s:1209   .bss.dizi_index.1:00000000 dizi_index.1
     /tmp/cceuXVgF.s:1203   .bss.dizi.0:00000000 dizi.0
     /tmp/cceuXVgF.s:340    .text.Error_Handler:00000000 $t
     /tmp/cceuXVgF.s:346    .text.Error_Handler:00000000 Error_Handler
     /tmp/cceuXVgF.s:378    .text.SystemClock_Config:00000000 $t
     /tmp/cceuXVgF.s:384    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cceuXVgF.s:514    .rodata.main.str1.4:00000000 $d
     /tmp/cceuXVgF.s:527    .text.main:00000000 $t
     /tmp/cceuXVgF.s:533    .text.main:00000000 main
     /tmp/cceuXVgF.s:1045   .text.main:000002c4 $d
     /tmp/cceuXVgF.s:1293   .bss.previousTime2:00000000 previousTime2
     /tmp/cceuXVgF.s:1244   .bss.previousTime3:00000000 previousTime3
     /tmp/cceuXVgF.s:1258   .bss.rpm:00000000 rpm
     /tmp/cceuXVgF.s:1314   .bss.pedal_value_mapped:00000000 pedal_value_mapped
     /tmp/cceuXVgF.s:1307   .data.min_pwm_limit:00000000 min_pwm_limit
     /tmp/cceuXVgF.s:1358   .bss.run_status:00000000 run_status
     /tmp/cceuXVgF.s:1216   .bss.average:00000000 average
     /tmp/cceuXVgF.s:1352   .bss.hall_A:00000000 hall_A
     /tmp/cceuXVgF.s:1346   .bss.hall_B:00000000 hall_B
     /tmp/cceuXVgF.s:1340   .bss.hall_C:00000000 hall_C
     /tmp/cceuXVgF.s:1279   .bss.timeForRotorStopStatusMs:00000000 timeForRotorStopStatusMs
     /tmp/cceuXVgF.s:1272   .bss.timeForRotorStopStatusMsFlag:00000000 timeForRotorStopStatusMsFlag
     /tmp/cceuXVgF.s:1404   .data.mode:00000000 mode
     /tmp/cceuXVgF.s:1334   .data.geri_vites:00000000 geri_vites
     /tmp/cceuXVgF.s:1077   .text.main:00000338 $t
     /tmp/cceuXVgF.s:1181   .text.main:000003bc $d
     /tmp/cceuXVgF.s:1392   .data.flagg:00000000 flagg
     /tmp/cceuXVgF.s:1411   .bss.oldValue:00000000 oldValue
     /tmp/cceuXVgF.s:1328   .bss.step:00000000 step
     /tmp/cceuXVgF.s:1398   .data.first_step_flag:00000000 first_step_flag
     /tmp/cceuXVgF.s:1200   .bss.dizi.0:00000000 $d
     /tmp/cceuXVgF.s:1206   .bss.dizi_index.1:00000000 $d
     /tmp/cceuXVgF.s:1213   .bss.average:00000000 $d
     /tmp/cceuXVgF.s:1220   .bss.temporary_current_value:00000000 $d
     /tmp/cceuXVgF.s:1227   .bss.maxCurrent:00000000 $d
     /tmp/cceuXVgF.s:1234   .data.minCurrent:00000000 $d
     /tmp/cceuXVgF.s:1241   .bss.previousTime3:00000000 $d
     /tmp/cceuXVgF.s:1251   .data.difference_two_coummutation_time:00000000 difference_two_coummutation_time
     /tmp/cceuXVgF.s:1248   .data.difference_two_coummutation_time:00000000 $d
ARM GAS  /tmp/cceuXVgF.s 			page 41


     /tmp/cceuXVgF.s:1255   .bss.rpm:00000000 $d
     /tmp/cceuXVgF.s:1265   .bss.rpm_counter:00000000 rpm_counter
     /tmp/cceuXVgF.s:1262   .bss.rpm_counter:00000000 $d
     /tmp/cceuXVgF.s:1269   .bss.timeForRotorStopStatusMsFlag:00000000 $d
     /tmp/cceuXVgF.s:1276   .bss.timeForRotorStopStatusMs:00000000 $d
     /tmp/cceuXVgF.s:1286   .bss.oncekiDegerler:00000000 oncekiDegerler
     /tmp/cceuXVgF.s:1283   .bss.oncekiDegerler:00000000 $d
     /tmp/cceuXVgF.s:1290   .bss.previousTime2:00000000 $d
     /tmp/cceuXVgF.s:1300   .data.firstStepDelay:00000000 firstStepDelay
     /tmp/cceuXVgF.s:1297   .data.firstStepDelay:00000000 $d
     /tmp/cceuXVgF.s:1304   .data.min_pwm_limit:00000000 $d
     /tmp/cceuXVgF.s:1311   .bss.pedal_value_mapped:00000000 $d
     /tmp/cceuXVgF.s:1318   .bss.pwm_value:00000000 $d
     /tmp/cceuXVgF.s:1325   .bss.step:00000000 $d
     /tmp/cceuXVgF.s:1341   .bss.hall_C:00000000 $d
     /tmp/cceuXVgF.s:1347   .bss.hall_B:00000000 $d
     /tmp/cceuXVgF.s:1353   .bss.hall_A:00000000 $d
     /tmp/cceuXVgF.s:1359   .bss.run_status:00000000 $d
     /tmp/cceuXVgF.s:1362   .bss.filtered_current:00000000 $d
     /tmp/cceuXVgF.s:1369   .bss.currentValue:00000000 $d
     /tmp/cceuXVgF.s:1376   .bss.speedInAdc:00000000 $d
     /tmp/cceuXVgF.s:1383   .bss.adcbuffer:00000000 $d
     /tmp/cceuXVgF.s:1408   .bss.oldValue:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_TIM1_Init
MX_USB_DEVICE_Init
MX_TIM2_Init
HAL_ADC_Start_DMA
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_TIM_Base_Start
HAL_GetTick
HAL_Delay
log_variable
LOG_POST
get_rpm
HAL_GPIO_ReadPin
first_step
hadc1
htim1
htim2
HAL_TIM_PWM_Stop
HAL_TIMEx_PWMN_Stop
