ARM GAS  /tmp/ccJhhMkB.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f1xx_it.c ****   *
  16:Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Src/stm32f1xx_it.c ****   */
  18:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f1xx_it.c **** 
  20:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f1xx_it.c **** #include "main.h"
  22:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f1xx_it.c **** 
  27:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f1xx_it.c **** 
  30:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Src/stm32f1xx_it.c **** 
  32:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccJhhMkB.s 			page 2


  33:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f1xx_it.c **** 
  35:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f1xx_it.c **** 
  37:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f1xx_it.c **** 
  40:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f1xx_it.c **** 
  42:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f1xx_it.c **** 
  45:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f1xx_it.c **** 
  47:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f1xx_it.c **** 
  50:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f1xx_it.c **** 
  52:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f1xx_it.c **** 
  55:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f1xx_it.c **** 
  57:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f1xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  59:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32f1xx_it.c **** 
  63:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  64:Src/stm32f1xx_it.c **** 
  65:Src/stm32f1xx_it.c **** /******************************************************************************/
  66:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  67:Src/stm32f1xx_it.c **** /******************************************************************************/
  68:Src/stm32f1xx_it.c **** /**
  69:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32f1xx_it.c ****   */
  71:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  72:Src/stm32f1xx_it.c **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  73:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32f1xx_it.c **** 
  75:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 77 4 view .LVU1
  78:Src/stm32f1xx_it.c ****   {
  79:Src/stm32f1xx_it.c ****   }
  35              		.loc 1 79 3 view .LVU2
  77:Src/stm32f1xx_it.c ****   {
ARM GAS  /tmp/ccJhhMkB.s 			page 3


  36              		.loc 1 77 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB66:
  80:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32f1xx_it.c **** }
  82:Src/stm32f1xx_it.c **** 
  83:Src/stm32f1xx_it.c **** /**
  84:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32f1xx_it.c ****   */
  86:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32f1xx_it.c **** {
  50              		.loc 1 87 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  88:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32f1xx_it.c **** 
  90:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32f1xx_it.c ****   while (1)
  57              		.loc 1 91 3 view .LVU5
  92:Src/stm32f1xx_it.c ****   {
  93:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32f1xx_it.c ****   }
  58              		.loc 1 95 3 view .LVU6
  91:Src/stm32f1xx_it.c ****   {
  59              		.loc 1 91 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE66:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB67:
  96:Src/stm32f1xx_it.c **** }
  97:Src/stm32f1xx_it.c **** 
  98:Src/stm32f1xx_it.c **** /**
  99:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 100:Src/stm32f1xx_it.c ****   */
 101:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 102:Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/ccJhhMkB.s 			page 4


  73              		.loc 1 102 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 103:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Src/stm32f1xx_it.c **** 
 105:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Src/stm32f1xx_it.c ****   while (1)
  80              		.loc 1 106 3 view .LVU9
 107:Src/stm32f1xx_it.c ****   {
 108:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Src/stm32f1xx_it.c ****   }
  81              		.loc 1 110 3 view .LVU10
 106:Src/stm32f1xx_it.c ****   {
  82              		.loc 1 106 9 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE67:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB68:
 111:Src/stm32f1xx_it.c **** }
 112:Src/stm32f1xx_it.c **** 
 113:Src/stm32f1xx_it.c **** /**
 114:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:Src/stm32f1xx_it.c ****   */
 116:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 117:Src/stm32f1xx_it.c **** {
  96              		.loc 1 117 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 118:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Src/stm32f1xx_it.c **** 
 120:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 121 3 view .LVU13
 122:Src/stm32f1xx_it.c ****   {
 123:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Src/stm32f1xx_it.c ****   }
 104              		.loc 1 125 3 view .LVU14
 121:Src/stm32f1xx_it.c ****   {
 105              		.loc 1 121 9 view .LVU15
 106 0000 FEE7     		b	.L8
ARM GAS  /tmp/ccJhhMkB.s 			page 5


 107              		.cfi_endproc
 108              	.LFE68:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB69:
 126:Src/stm32f1xx_it.c **** }
 127:Src/stm32f1xx_it.c **** 
 128:Src/stm32f1xx_it.c **** /**
 129:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Src/stm32f1xx_it.c ****   */
 131:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 132:Src/stm32f1xx_it.c **** {
 119              		.loc 1 132 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 133:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Src/stm32f1xx_it.c **** 
 135:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 136 3 view .LVU17
 137:Src/stm32f1xx_it.c ****   {
 138:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Src/stm32f1xx_it.c ****   }
 127              		.loc 1 140 3 view .LVU18
 136:Src/stm32f1xx_it.c ****   {
 128              		.loc 1 136 9 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB70:
 141:Src/stm32f1xx_it.c **** }
 142:Src/stm32f1xx_it.c **** 
 143:Src/stm32f1xx_it.c **** /**
 144:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Src/stm32f1xx_it.c ****   */
 146:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 147:Src/stm32f1xx_it.c **** {
 142              		.loc 1 147 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccJhhMkB.s 			page 6


 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 148:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Src/stm32f1xx_it.c **** 
 150:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:Src/stm32f1xx_it.c **** 
 153:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Src/stm32f1xx_it.c **** }
 147              		.loc 1 154 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE70:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB71:
 155:Src/stm32f1xx_it.c **** 
 156:Src/stm32f1xx_it.c **** /**
 157:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 158:Src/stm32f1xx_it.c ****   */
 159:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 160:Src/stm32f1xx_it.c **** {
 161              		.loc 1 160 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 161:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Src/stm32f1xx_it.c **** 
 163:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Src/stm32f1xx_it.c **** 
 166:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Src/stm32f1xx_it.c **** }
 166              		.loc 1 167 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE71:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB72:
 168:Src/stm32f1xx_it.c **** 
 169:Src/stm32f1xx_it.c **** /**
 170:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Src/stm32f1xx_it.c ****   */
 172:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 173:Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/ccJhhMkB.s 			page 7


 180              		.loc 1 173 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 174:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Src/stm32f1xx_it.c **** 
 176:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Src/stm32f1xx_it.c **** 
 179:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Src/stm32f1xx_it.c **** }
 185              		.loc 1 180 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE72:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB73:
 181:Src/stm32f1xx_it.c **** 
 182:Src/stm32f1xx_it.c **** /**
 183:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 184:Src/stm32f1xx_it.c ****   */
 185:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 186:Src/stm32f1xx_it.c **** {
 199              		.loc 1 186 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
 187:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Src/stm32f1xx_it.c **** 
 189:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Src/stm32f1xx_it.c ****   HAL_IncTick();
 207              		.loc 1 190 3 view .LVU27
 208 0002 FFF7FEFF 		bl	HAL_IncTick
 209              	.LVL0:
 191:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Src/stm32f1xx_it.c **** 
 193:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Src/stm32f1xx_it.c **** }
 210              		.loc 1 194 1 is_stmt 0 view .LVU28
 211 0006 08BD     		pop	{r3, pc}
 212              		.cfi_endproc
 213              	.LFE73:
 215              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	EXTI0_IRQHandler
 218              		.syntax unified
ARM GAS  /tmp/ccJhhMkB.s 			page 8


 219              		.thumb
 220              		.thumb_func
 222              	EXTI0_IRQHandler:
 223              	.LFB74:
 195:Src/stm32f1xx_it.c **** 
 196:Src/stm32f1xx_it.c **** /******************************************************************************/
 197:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 198:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 201:Src/stm32f1xx_it.c **** /******************************************************************************/
 202:Src/stm32f1xx_it.c **** 
 203:Src/stm32f1xx_it.c **** /**
 204:Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 205:Src/stm32f1xx_it.c ****   */
 206:Src/stm32f1xx_it.c **** void EXTI0_IRQHandler(void)
 207:Src/stm32f1xx_it.c **** {
 224              		.loc 1 207 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 3, -8
 231              		.cfi_offset 14, -4
 208:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 209:Src/stm32f1xx_it.c **** 
 210:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 211:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(HALL_1_Pin);
 232              		.loc 1 211 3 view .LVU30
 233 0002 0120     		movs	r0, #1
 234 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 235              	.LVL1:
 212:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 213:Src/stm32f1xx_it.c **** 
 214:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 215:Src/stm32f1xx_it.c **** }
 236              		.loc 1 215 1 is_stmt 0 view .LVU31
 237 0008 08BD     		pop	{r3, pc}
 238              		.cfi_endproc
 239              	.LFE74:
 241              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	EXTI1_IRQHandler
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	EXTI1_IRQHandler:
 249              	.LFB75:
 216:Src/stm32f1xx_it.c **** 
 217:Src/stm32f1xx_it.c **** /**
 218:Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line1 interrupt.
 219:Src/stm32f1xx_it.c ****   */
 220:Src/stm32f1xx_it.c **** void EXTI1_IRQHandler(void)
 221:Src/stm32f1xx_it.c **** {
 250              		.loc 1 221 1 is_stmt 1 view -0
 251              		.cfi_startproc
ARM GAS  /tmp/ccJhhMkB.s 			page 9


 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254 0000 08B5     		push	{r3, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 3, -8
 257              		.cfi_offset 14, -4
 222:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 223:Src/stm32f1xx_it.c **** 
 224:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 225:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(HALL_2_Pin);
 258              		.loc 1 225 3 view .LVU33
 259 0002 0220     		movs	r0, #2
 260 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 261              	.LVL2:
 226:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 227:Src/stm32f1xx_it.c **** 
 228:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 229:Src/stm32f1xx_it.c **** }
 262              		.loc 1 229 1 is_stmt 0 view .LVU34
 263 0008 08BD     		pop	{r3, pc}
 264              		.cfi_endproc
 265              	.LFE75:
 267              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 268              		.align	1
 269              		.global	EXTI2_IRQHandler
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	EXTI2_IRQHandler:
 275              	.LFB76:
 230:Src/stm32f1xx_it.c **** 
 231:Src/stm32f1xx_it.c **** /**
 232:Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line2 interrupt.
 233:Src/stm32f1xx_it.c ****   */
 234:Src/stm32f1xx_it.c **** void EXTI2_IRQHandler(void)
 235:Src/stm32f1xx_it.c **** {
 276              		.loc 1 235 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 08B5     		push	{r3, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 236:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 237:Src/stm32f1xx_it.c **** 
 238:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 239:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(HALL_3_Pin);
 284              		.loc 1 239 3 view .LVU36
 285 0002 0420     		movs	r0, #4
 286 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 287              	.LVL3:
 240:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 241:Src/stm32f1xx_it.c **** 
 242:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 243:Src/stm32f1xx_it.c **** }
 288              		.loc 1 243 1 is_stmt 0 view .LVU37
ARM GAS  /tmp/ccJhhMkB.s 			page 10


 289 0008 08BD     		pop	{r3, pc}
 290              		.cfi_endproc
 291              	.LFE76:
 293              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 294              		.align	1
 295              		.global	DMA1_Channel1_IRQHandler
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	DMA1_Channel1_IRQHandler:
 301              	.LFB77:
 244:Src/stm32f1xx_it.c **** 
 245:Src/stm32f1xx_it.c **** /**
 246:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 247:Src/stm32f1xx_it.c ****   */
 248:Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 249:Src/stm32f1xx_it.c **** {
 302              		.loc 1 249 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306 0000 08B5     		push	{r3, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 250:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 251:Src/stm32f1xx_it.c **** 
 252:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 253:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 310              		.loc 1 253 3 view .LVU39
 311 0002 0248     		ldr	r0, .L24
 312 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 313              	.LVL4:
 254:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 255:Src/stm32f1xx_it.c **** 
 256:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 257:Src/stm32f1xx_it.c **** }
 314              		.loc 1 257 1 is_stmt 0 view .LVU40
 315 0008 08BD     		pop	{r3, pc}
 316              	.L25:
 317 000a 00BF     		.align	2
 318              	.L24:
 319 000c 00000000 		.word	hdma_adc1
 320              		.cfi_endproc
 321              	.LFE77:
 323              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 324              		.align	1
 325              		.global	USB_LP_CAN1_RX0_IRQHandler
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	USB_LP_CAN1_RX0_IRQHandler:
 331              	.LFB78:
 258:Src/stm32f1xx_it.c **** 
 259:Src/stm32f1xx_it.c **** /**
 260:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 261:Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/ccJhhMkB.s 			page 11


 262:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 263:Src/stm32f1xx_it.c **** {
 332              		.loc 1 263 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 264:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 265:Src/stm32f1xx_it.c **** 
 266:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 267:Src/stm32f1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 340              		.loc 1 267 3 view .LVU42
 341 0002 0248     		ldr	r0, .L28
 342 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 343              	.LVL5:
 268:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 269:Src/stm32f1xx_it.c **** 
 270:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 271:Src/stm32f1xx_it.c **** }
 344              		.loc 1 271 1 is_stmt 0 view .LVU43
 345 0008 08BD     		pop	{r3, pc}
 346              	.L29:
 347 000a 00BF     		.align	2
 348              	.L28:
 349 000c 00000000 		.word	hpcd_USB_FS
 350              		.cfi_endproc
 351              	.LFE78:
 353              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 354              		.align	1
 355              		.global	TIM2_IRQHandler
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	TIM2_IRQHandler:
 361              	.LFB79:
 272:Src/stm32f1xx_it.c **** 
 273:Src/stm32f1xx_it.c **** /**
 274:Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 275:Src/stm32f1xx_it.c ****   */
 276:Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 277:Src/stm32f1xx_it.c **** {
 362              		.loc 1 277 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 08B5     		push	{r3, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 278:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 279:Src/stm32f1xx_it.c **** 
 280:Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 281:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 370              		.loc 1 281 3 view .LVU45
ARM GAS  /tmp/ccJhhMkB.s 			page 12


 371 0002 0248     		ldr	r0, .L32
 372 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 373              	.LVL6:
 282:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 283:Src/stm32f1xx_it.c **** 
 284:Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 285:Src/stm32f1xx_it.c **** }
 374              		.loc 1 285 1 is_stmt 0 view .LVU46
 375 0008 08BD     		pop	{r3, pc}
 376              	.L33:
 377 000a 00BF     		.align	2
 378              	.L32:
 379 000c 00000000 		.word	htim2
 380              		.cfi_endproc
 381              	.LFE79:
 383              		.text
 384              	.Letext0:
 385              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 386              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 387              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 388              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 389              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 390              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 391              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 392              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 393              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccJhhMkB.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
     /tmp/ccJhhMkB.s:19     .text.NMI_Handler:00000000 $t
     /tmp/ccJhhMkB.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccJhhMkB.s:42     .text.HardFault_Handler:00000000 $t
     /tmp/ccJhhMkB.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccJhhMkB.s:65     .text.MemManage_Handler:00000000 $t
     /tmp/ccJhhMkB.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccJhhMkB.s:88     .text.BusFault_Handler:00000000 $t
     /tmp/ccJhhMkB.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccJhhMkB.s:111    .text.UsageFault_Handler:00000000 $t
     /tmp/ccJhhMkB.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccJhhMkB.s:134    .text.SVC_Handler:00000000 $t
     /tmp/ccJhhMkB.s:140    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccJhhMkB.s:153    .text.DebugMon_Handler:00000000 $t
     /tmp/ccJhhMkB.s:159    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccJhhMkB.s:172    .text.PendSV_Handler:00000000 $t
     /tmp/ccJhhMkB.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccJhhMkB.s:191    .text.SysTick_Handler:00000000 $t
     /tmp/ccJhhMkB.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccJhhMkB.s:216    .text.EXTI0_IRQHandler:00000000 $t
     /tmp/ccJhhMkB.s:222    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
     /tmp/ccJhhMkB.s:242    .text.EXTI1_IRQHandler:00000000 $t
     /tmp/ccJhhMkB.s:248    .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
     /tmp/ccJhhMkB.s:268    .text.EXTI2_IRQHandler:00000000 $t
     /tmp/ccJhhMkB.s:274    .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
     /tmp/ccJhhMkB.s:294    .text.DMA1_Channel1_IRQHandler:00000000 $t
     /tmp/ccJhhMkB.s:300    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
     /tmp/ccJhhMkB.s:319    .text.DMA1_Channel1_IRQHandler:0000000c $d
     /tmp/ccJhhMkB.s:324    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 $t
     /tmp/ccJhhMkB.s:330    .text.USB_LP_CAN1_RX0_IRQHandler:00000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/ccJhhMkB.s:349    .text.USB_LP_CAN1_RX0_IRQHandler:0000000c $d
     /tmp/ccJhhMkB.s:354    .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccJhhMkB.s:360    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccJhhMkB.s:379    .text.TIM2_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_adc1
HAL_PCD_IRQHandler
hpcd_USB_FS
HAL_TIM_IRQHandler
htim2
