ARM GAS  /tmp/ccOav7lU.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/usbd_desc.c"
  18              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  19              		.align	1
  20              		.global	USBD_FS_DeviceDescriptor
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	USBD_FS_DeviceDescriptor:
  26              	.LVL0:
  27              	.LFB68:
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/usbd_desc.c ****   * in the root directory of this software component.
  15:Src/usbd_desc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/usbd_desc.c ****   *
  17:Src/usbd_desc.c ****   ******************************************************************************
  18:Src/usbd_desc.c ****   */
  19:Src/usbd_desc.c **** /* USER CODE END Header */
  20:Src/usbd_desc.c **** 
  21:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/usbd_desc.c **** #include "usbd_core.h"
  23:Src/usbd_desc.c **** #include "usbd_desc.h"
  24:Src/usbd_desc.c **** #include "usbd_conf.h"
  25:Src/usbd_desc.c **** 
  26:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  27:Src/usbd_desc.c **** 
  28:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  29:Src/usbd_desc.c **** 
  30:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccOav7lU.s 			page 2


  32:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  33:Src/usbd_desc.c **** 
  34:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  35:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  36:Src/usbd_desc.c **** 
  37:Src/usbd_desc.c **** /* USER CODE END PV */
  38:Src/usbd_desc.c **** 
  39:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  40:Src/usbd_desc.c ****   * @{
  41:Src/usbd_desc.c ****   */
  42:Src/usbd_desc.c **** 
  43:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  44:Src/usbd_desc.c ****   * @{
  45:Src/usbd_desc.c ****   */
  46:Src/usbd_desc.c **** 
  47:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  48:Src/usbd_desc.c ****   * @brief Private types.
  49:Src/usbd_desc.c ****   * @{
  50:Src/usbd_desc.c ****   */
  51:Src/usbd_desc.c **** 
  52:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:Src/usbd_desc.c **** 
  54:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  55:Src/usbd_desc.c **** 
  56:Src/usbd_desc.c **** /**
  57:Src/usbd_desc.c ****   * @}
  58:Src/usbd_desc.c ****   */
  59:Src/usbd_desc.c **** 
  60:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  61:Src/usbd_desc.c ****   * @brief Private defines.
  62:Src/usbd_desc.c ****   * @{
  63:Src/usbd_desc.c ****   */
  64:Src/usbd_desc.c **** 
  65:Src/usbd_desc.c **** #define USBD_VID     1155
  66:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  67:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "Zeugma"
  68:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  69:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "Motor Surucu"
  70:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  71:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  72:Src/usbd_desc.c **** 
  73:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  74:Src/usbd_desc.c **** 
  75:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  76:Src/usbd_desc.c **** 
  77:Src/usbd_desc.c **** /**
  78:Src/usbd_desc.c ****   * @}
  79:Src/usbd_desc.c ****   */
  80:Src/usbd_desc.c **** 
  81:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  82:Src/usbd_desc.c **** 
  83:Src/usbd_desc.c **** /* USER CODE END 0 */
  84:Src/usbd_desc.c **** 
  85:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  86:Src/usbd_desc.c ****   * @brief Private macros.
  87:Src/usbd_desc.c ****   * @{
  88:Src/usbd_desc.c ****   */
ARM GAS  /tmp/ccOav7lU.s 			page 3


  89:Src/usbd_desc.c **** 
  90:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  91:Src/usbd_desc.c **** 
  92:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  93:Src/usbd_desc.c **** 
  94:Src/usbd_desc.c **** /**
  95:Src/usbd_desc.c ****   * @}
  96:Src/usbd_desc.c ****   */
  97:Src/usbd_desc.c **** 
  98:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
  99:Src/usbd_desc.c ****   * @brief Private functions declaration.
 100:Src/usbd_desc.c ****   * @{
 101:Src/usbd_desc.c ****   */
 102:Src/usbd_desc.c **** 
 103:Src/usbd_desc.c **** static void Get_SerialNum(void);
 104:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 105:Src/usbd_desc.c **** 
 106:Src/usbd_desc.c **** /**
 107:Src/usbd_desc.c ****   * @}
 108:Src/usbd_desc.c ****   */
 109:Src/usbd_desc.c **** 
 110:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 111:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 112:Src/usbd_desc.c ****   * @{
 113:Src/usbd_desc.c ****   */
 114:Src/usbd_desc.c **** 
 115:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 116:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 117:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 118:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** 
 123:Src/usbd_desc.c **** /**
 124:Src/usbd_desc.c ****   * @}
 125:Src/usbd_desc.c ****   */
 126:Src/usbd_desc.c **** 
 127:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 128:Src/usbd_desc.c ****   * @brief Private variables.
 129:Src/usbd_desc.c ****   * @{
 130:Src/usbd_desc.c ****   */
 131:Src/usbd_desc.c **** 
 132:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 133:Src/usbd_desc.c **** {
 134:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 135:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 136:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 137:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 138:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 139:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 140:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 141:Src/usbd_desc.c **** };
 142:Src/usbd_desc.c **** 
 143:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 144:Src/usbd_desc.c ****   #pragma data_alignment=4
 145:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
ARM GAS  /tmp/ccOav7lU.s 			page 4


 146:Src/usbd_desc.c **** /** USB standard device descriptor. */
 147:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 148:Src/usbd_desc.c **** {
 149:Src/usbd_desc.c ****   0x12,                       /*bLength */
 150:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 151:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 152:Src/usbd_desc.c ****   0x02,
 153:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 154:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 155:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 156:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 157:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 158:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 159:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 160:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 161:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 162:Src/usbd_desc.c ****   0x02,
 163:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 164:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 165:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 166:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 167:Src/usbd_desc.c **** };
 168:Src/usbd_desc.c **** 
 169:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** /**
 172:Src/usbd_desc.c ****   * @}
 173:Src/usbd_desc.c ****   */
 174:Src/usbd_desc.c **** 
 175:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 176:Src/usbd_desc.c ****   * @brief Private variables.
 177:Src/usbd_desc.c ****   * @{
 178:Src/usbd_desc.c ****   */
 179:Src/usbd_desc.c **** 
 180:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 181:Src/usbd_desc.c ****   #pragma data_alignment=4
 182:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 183:Src/usbd_desc.c **** 
 184:Src/usbd_desc.c **** /** USB lang identifier descriptor. */
 185:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 186:Src/usbd_desc.c **** {
 187:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 188:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 189:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 190:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 191:Src/usbd_desc.c **** };
 192:Src/usbd_desc.c **** 
 193:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 194:Src/usbd_desc.c ****   #pragma data_alignment=4
 195:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 196:Src/usbd_desc.c **** /* Internal string descriptor. */
 197:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 198:Src/usbd_desc.c **** 
 199:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 200:Src/usbd_desc.c ****   #pragma data_alignment=4
 201:Src/usbd_desc.c **** #endif
 202:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
ARM GAS  /tmp/ccOav7lU.s 			page 5


 203:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 204:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 205:Src/usbd_desc.c **** };
 206:Src/usbd_desc.c **** 
 207:Src/usbd_desc.c **** /**
 208:Src/usbd_desc.c ****   * @}
 209:Src/usbd_desc.c ****   */
 210:Src/usbd_desc.c **** 
 211:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 212:Src/usbd_desc.c ****   * @brief Private functions.
 213:Src/usbd_desc.c ****   * @{
 214:Src/usbd_desc.c ****   */
 215:Src/usbd_desc.c **** 
 216:Src/usbd_desc.c **** /**
 217:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 218:Src/usbd_desc.c ****   * @param  speed : Current device speed
 219:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 220:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 221:Src/usbd_desc.c ****   */
 222:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 223:Src/usbd_desc.c **** {
  28              		.loc 1 223 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 224:Src/usbd_desc.c ****   UNUSED(speed);
  33              		.loc 1 224 3 view .LVU1
 225:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  34              		.loc 1 225 3 view .LVU2
  35              		.loc 1 225 11 is_stmt 0 view .LVU3
  36 0000 1223     		movs	r3, #18
  37 0002 0B80     		strh	r3, [r1]	@ movhi
 226:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  38              		.loc 1 226 3 is_stmt 1 view .LVU4
 227:Src/usbd_desc.c **** }
  39              		.loc 1 227 1 is_stmt 0 view .LVU5
  40 0004 0048     		ldr	r0, .L2
  41              	.LVL1:
  42              		.loc 1 227 1 view .LVU6
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0008 00000000 		.word	USBD_FS_DeviceDesc
  48              		.cfi_endproc
  49              	.LFE68:
  51              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  52              		.align	1
  53              		.global	USBD_FS_LangIDStrDescriptor
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	USBD_FS_LangIDStrDescriptor:
  59              	.LVL2:
  60              	.LFB69:
 228:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccOav7lU.s 			page 6


 229:Src/usbd_desc.c **** /**
 230:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 231:Src/usbd_desc.c ****   * @param  speed : Current device speed
 232:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 233:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 234:Src/usbd_desc.c ****   */
 235:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 236:Src/usbd_desc.c **** {
  61              		.loc 1 236 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 237:Src/usbd_desc.c ****   UNUSED(speed);
  66              		.loc 1 237 3 view .LVU8
 238:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  67              		.loc 1 238 3 view .LVU9
  68              		.loc 1 238 11 is_stmt 0 view .LVU10
  69 0000 0423     		movs	r3, #4
  70 0002 0B80     		strh	r3, [r1]	@ movhi
 239:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  71              		.loc 1 239 3 is_stmt 1 view .LVU11
 240:Src/usbd_desc.c **** }
  72              		.loc 1 240 1 is_stmt 0 view .LVU12
  73 0004 0048     		ldr	r0, .L5
  74              	.LVL3:
  75              		.loc 1 240 1 view .LVU13
  76 0006 7047     		bx	lr
  77              	.L6:
  78              		.align	2
  79              	.L5:
  80 0008 00000000 		.word	USBD_LangIDDesc
  81              		.cfi_endproc
  82              	.LFE69:
  84              		.section	.text.IntToUnicode,"ax",%progbits
  85              		.align	1
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	IntToUnicode:
  91              	.LVL4:
  92              	.LFB76:
 241:Src/usbd_desc.c **** 
 242:Src/usbd_desc.c **** /**
 243:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 244:Src/usbd_desc.c ****   * @param  speed : Current device speed
 245:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 246:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 247:Src/usbd_desc.c ****   */
 248:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 249:Src/usbd_desc.c **** {
 250:Src/usbd_desc.c ****   if(speed == 0)
 251:Src/usbd_desc.c ****   {
 252:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 253:Src/usbd_desc.c ****   }
 254:Src/usbd_desc.c ****   else
 255:Src/usbd_desc.c ****   {
ARM GAS  /tmp/ccOav7lU.s 			page 7


 256:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 257:Src/usbd_desc.c ****   }
 258:Src/usbd_desc.c ****   return USBD_StrDesc;
 259:Src/usbd_desc.c **** }
 260:Src/usbd_desc.c **** 
 261:Src/usbd_desc.c **** /**
 262:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 263:Src/usbd_desc.c ****   * @param  speed : Current device speed
 264:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 265:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 266:Src/usbd_desc.c ****   */
 267:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 268:Src/usbd_desc.c **** {
 269:Src/usbd_desc.c ****   UNUSED(speed);
 270:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 271:Src/usbd_desc.c ****   return USBD_StrDesc;
 272:Src/usbd_desc.c **** }
 273:Src/usbd_desc.c **** 
 274:Src/usbd_desc.c **** /**
 275:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 276:Src/usbd_desc.c ****   * @param  speed : Current device speed
 277:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 278:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 279:Src/usbd_desc.c ****   */
 280:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 281:Src/usbd_desc.c **** {
 282:Src/usbd_desc.c ****   UNUSED(speed);
 283:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 284:Src/usbd_desc.c **** 
 285:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 286:Src/usbd_desc.c ****    * ID */
 287:Src/usbd_desc.c ****   Get_SerialNum();
 288:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 289:Src/usbd_desc.c **** 
 290:Src/usbd_desc.c ****   /* USER CODE END USBD_FS_SerialStrDescriptor */
 291:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 292:Src/usbd_desc.c **** }
 293:Src/usbd_desc.c **** 
 294:Src/usbd_desc.c **** /**
 295:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 296:Src/usbd_desc.c ****   * @param  speed : Current device speed
 297:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 298:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 299:Src/usbd_desc.c ****   */
 300:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 301:Src/usbd_desc.c **** {
 302:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 303:Src/usbd_desc.c ****   {
 304:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 305:Src/usbd_desc.c ****   }
 306:Src/usbd_desc.c ****   else
 307:Src/usbd_desc.c ****   {
 308:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 309:Src/usbd_desc.c ****   }
 310:Src/usbd_desc.c ****   return USBD_StrDesc;
 311:Src/usbd_desc.c **** }
 312:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccOav7lU.s 			page 8


 313:Src/usbd_desc.c **** /**
 314:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 315:Src/usbd_desc.c ****   * @param  speed : Current device speed
 316:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 317:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 318:Src/usbd_desc.c ****   */
 319:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 320:Src/usbd_desc.c **** {
 321:Src/usbd_desc.c ****   if(speed == 0)
 322:Src/usbd_desc.c ****   {
 323:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 324:Src/usbd_desc.c ****   }
 325:Src/usbd_desc.c ****   else
 326:Src/usbd_desc.c ****   {
 327:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 328:Src/usbd_desc.c ****   }
 329:Src/usbd_desc.c ****   return USBD_StrDesc;
 330:Src/usbd_desc.c **** }
 331:Src/usbd_desc.c **** 
 332:Src/usbd_desc.c **** /**
 333:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor
 334:Src/usbd_desc.c ****   * @param  None
 335:Src/usbd_desc.c ****   * @retval None
 336:Src/usbd_desc.c ****   */
 337:Src/usbd_desc.c **** static void Get_SerialNum(void)
 338:Src/usbd_desc.c **** {
 339:Src/usbd_desc.c ****   uint32_t deviceserial0;
 340:Src/usbd_desc.c ****   uint32_t deviceserial1;
 341:Src/usbd_desc.c ****   uint32_t deviceserial2;
 342:Src/usbd_desc.c **** 
 343:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 344:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 345:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 346:Src/usbd_desc.c **** 
 347:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 348:Src/usbd_desc.c **** 
 349:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 350:Src/usbd_desc.c ****   {
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 352:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 353:Src/usbd_desc.c ****   }
 354:Src/usbd_desc.c **** }
 355:Src/usbd_desc.c **** 
 356:Src/usbd_desc.c **** /**
 357:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char
 358:Src/usbd_desc.c ****   * @param  value: value to convert
 359:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer
 360:Src/usbd_desc.c ****   * @param  len: buffer length
 361:Src/usbd_desc.c ****   * @retval None
 362:Src/usbd_desc.c ****   */
 363:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 364:Src/usbd_desc.c **** {
  93              		.loc 1 364 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
 365:Src/usbd_desc.c ****   uint8_t idx = 0;
ARM GAS  /tmp/ccOav7lU.s 			page 9


  97              		.loc 1 365 3 view .LVU15
 366:Src/usbd_desc.c **** 
 367:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
  98              		.loc 1 367 3 view .LVU16
  99              		.loc 1 367 12 is_stmt 0 view .LVU17
 100 0000 0023     		movs	r3, #0
 101              	.LVL5:
 102              		.loc 1 367 21 is_stmt 1 discriminator 1 view .LVU18
 103 0002 9342     		cmp	r3, r2
 104 0004 1ED2     		bcs	.L15
 364:Src/usbd_desc.c ****   uint8_t idx = 0;
 105              		.loc 1 364 1 is_stmt 0 view .LVU19
 106 0006 00B5     		push	{lr}
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109 0008 10E0     		b	.L11
 110              	.L9:
 368:Src/usbd_desc.c ****   {
 369:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 370:Src/usbd_desc.c ****     {
 371:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 372:Src/usbd_desc.c ****     }
 373:Src/usbd_desc.c ****     else
 374:Src/usbd_desc.c ****     {
 375:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 111              		.loc 1 375 7 is_stmt 1 view .LVU20
 112              		.loc 1 375 43 is_stmt 0 view .LVU21
 113 000a 0CF1370C 		add	ip, ip, #55
 114              		.loc 1 375 21 view .LVU22
 115 000e 01F813C0 		strb	ip, [r1, r3, lsl #1]
 116              	.L10:
 376:Src/usbd_desc.c ****     }
 377:Src/usbd_desc.c **** 
 378:Src/usbd_desc.c ****     value = value << 4;
 117              		.loc 1 378 5 is_stmt 1 view .LVU23
 118              		.loc 1 378 11 is_stmt 0 view .LVU24
 119 0012 0001     		lsls	r0, r0, #4
 120              	.LVL6:
 379:Src/usbd_desc.c **** 
 380:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 121              		.loc 1 380 5 is_stmt 1 view .LVU25
 122              		.loc 1 380 12 is_stmt 0 view .LVU26
 123 0014 4FEA430C 		lsl	ip, r3, #1
 124              		.loc 1 380 9 view .LVU27
 125 0018 0CF1010C 		add	ip, ip, #1
 126              		.loc 1 380 23 view .LVU28
 127 001c 4FF0000E 		mov	lr, #0
 128 0020 01F80CE0 		strb	lr, [r1, ip]
 367:Src/usbd_desc.c ****   {
 129              		.loc 1 367 31 is_stmt 1 discriminator 2 view .LVU29
 130 0024 0133     		adds	r3, r3, #1
 131              	.LVL7:
 367:Src/usbd_desc.c ****   {
 132              		.loc 1 367 31 is_stmt 0 discriminator 2 view .LVU30
 133 0026 DBB2     		uxtb	r3, r3
 134              	.LVL8:
 367:Src/usbd_desc.c ****   {
ARM GAS  /tmp/ccOav7lU.s 			page 10


 135              		.loc 1 367 21 is_stmt 1 discriminator 1 view .LVU31
 136 0028 9342     		cmp	r3, r2
 137 002a 09D2     		bcs	.L16
 138              	.L11:
 369:Src/usbd_desc.c ****     {
 139              		.loc 1 369 5 view .LVU32
 369:Src/usbd_desc.c ****     {
 140              		.loc 1 369 17 is_stmt 0 view .LVU33
 141 002c 4FEA107C 		lsr	ip, r0, #28
 369:Src/usbd_desc.c ****     {
 142              		.loc 1 369 8 view .LVU34
 143 0030 B0F1204F 		cmp	r0, #-1610612736
 144 0034 E9D2     		bcs	.L9
 371:Src/usbd_desc.c ****     }
 145              		.loc 1 371 7 is_stmt 1 view .LVU35
 371:Src/usbd_desc.c ****     }
 146              		.loc 1 371 37 is_stmt 0 view .LVU36
 147 0036 0CF1300C 		add	ip, ip, #48
 371:Src/usbd_desc.c ****     }
 148              		.loc 1 371 21 view .LVU37
 149 003a 01F813C0 		strb	ip, [r1, r3, lsl #1]
 150 003e E8E7     		b	.L10
 151              	.L16:
 381:Src/usbd_desc.c ****   }
 382:Src/usbd_desc.c **** }
 152              		.loc 1 382 1 view .LVU38
 153 0040 5DF804FB 		ldr	pc, [sp], #4
 154              	.L15:
 155              		.cfi_def_cfa_offset 0
 156              		.cfi_restore 14
 157              		.loc 1 382 1 view .LVU39
 158 0044 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE76:
 162              		.section	.text.Get_SerialNum,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	Get_SerialNum:
 169              	.LFB75:
 338:Src/usbd_desc.c ****   uint32_t deviceserial0;
 170              		.loc 1 338 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 38B5     		push	{r3, r4, r5, lr}
 175              		.cfi_def_cfa_offset 16
 176              		.cfi_offset 3, -16
 177              		.cfi_offset 4, -12
 178              		.cfi_offset 5, -8
 179              		.cfi_offset 14, -4
 339:Src/usbd_desc.c ****   uint32_t deviceserial1;
 180              		.loc 1 339 3 view .LVU41
 340:Src/usbd_desc.c ****   uint32_t deviceserial2;
 181              		.loc 1 340 3 view .LVU42
 341:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccOav7lU.s 			page 11


 182              		.loc 1 341 3 view .LVU43
 343:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 183              		.loc 1 343 3 view .LVU44
 343:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 184              		.loc 1 343 17 is_stmt 0 view .LVU45
 185 0002 0B4B     		ldr	r3, .L21
 186 0004 D3F8E807 		ldr	r0, [r3, #2024]
 187              	.LVL9:
 344:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 188              		.loc 1 344 3 is_stmt 1 view .LVU46
 344:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 189              		.loc 1 344 17 is_stmt 0 view .LVU47
 190 0008 D3F8EC47 		ldr	r4, [r3, #2028]
 191              	.LVL10:
 345:Src/usbd_desc.c **** 
 192              		.loc 1 345 3 is_stmt 1 view .LVU48
 345:Src/usbd_desc.c **** 
 193              		.loc 1 345 17 is_stmt 0 view .LVU49
 194 000c D3F8F037 		ldr	r3, [r3, #2032]
 195              	.LVL11:
 347:Src/usbd_desc.c **** 
 196              		.loc 1 347 3 is_stmt 1 view .LVU50
 349:Src/usbd_desc.c ****   {
 197              		.loc 1 349 3 view .LVU51
 349:Src/usbd_desc.c ****   {
 198              		.loc 1 349 6 is_stmt 0 view .LVU52
 199 0010 C018     		adds	r0, r0, r3
 200              	.LVL12:
 349:Src/usbd_desc.c ****   {
 201              		.loc 1 349 6 view .LVU53
 202 0012 00D1     		bne	.L20
 203              	.LVL13:
 204              	.L17:
 354:Src/usbd_desc.c **** 
 205              		.loc 1 354 1 view .LVU54
 206 0014 38BD     		pop	{r3, r4, r5, pc}
 207              	.LVL14:
 208              	.L20:
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 209              		.loc 1 351 5 is_stmt 1 view .LVU55
 210 0016 074D     		ldr	r5, .L21+4
 211 0018 0822     		movs	r2, #8
 212 001a 2946     		mov	r1, r5
 213 001c FFF7FEFF 		bl	IntToUnicode
 214              	.LVL15:
 352:Src/usbd_desc.c ****   }
 215              		.loc 1 352 5 view .LVU56
 216 0020 0422     		movs	r2, #4
 217 0022 05F11001 		add	r1, r5, #16
 218 0026 2046     		mov	r0, r4
 219 0028 FFF7FEFF 		bl	IntToUnicode
 220              	.LVL16:
 354:Src/usbd_desc.c **** 
 221              		.loc 1 354 1 is_stmt 0 view .LVU57
 222 002c F2E7     		b	.L17
 223              	.L22:
 224 002e 00BF     		.align	2
ARM GAS  /tmp/ccOav7lU.s 			page 12


 225              	.L21:
 226 0030 00F0FF1F 		.word	536866816
 227 0034 02000000 		.word	USBD_StringSerial+2
 228              		.cfi_endproc
 229              	.LFE75:
 231              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 232              		.align	1
 233              		.global	USBD_FS_SerialStrDescriptor
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	USBD_FS_SerialStrDescriptor:
 239              	.LVL17:
 240              	.LFB72:
 281:Src/usbd_desc.c ****   UNUSED(speed);
 241              		.loc 1 281 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 281:Src/usbd_desc.c ****   UNUSED(speed);
 245              		.loc 1 281 1 is_stmt 0 view .LVU59
 246 0000 08B5     		push	{r3, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
 249              		.cfi_offset 14, -4
 282:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 250              		.loc 1 282 3 is_stmt 1 view .LVU60
 283:Src/usbd_desc.c **** 
 251              		.loc 1 283 3 view .LVU61
 283:Src/usbd_desc.c **** 
 252              		.loc 1 283 11 is_stmt 0 view .LVU62
 253 0002 1A23     		movs	r3, #26
 254 0004 0B80     		strh	r3, [r1]	@ movhi
 287:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 255              		.loc 1 287 3 is_stmt 1 view .LVU63
 256 0006 FFF7FEFF 		bl	Get_SerialNum
 257              	.LVL18:
 291:Src/usbd_desc.c **** }
 258              		.loc 1 291 3 view .LVU64
 292:Src/usbd_desc.c **** 
 259              		.loc 1 292 1 is_stmt 0 view .LVU65
 260 000a 0148     		ldr	r0, .L25
 261 000c 08BD     		pop	{r3, pc}
 262              	.L26:
 263 000e 00BF     		.align	2
 264              	.L25:
 265 0010 00000000 		.word	USBD_StringSerial
 266              		.cfi_endproc
 267              	.LFE72:
 269              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 270              		.align	2
 271              	.LC0:
 272 0000 4D6F746F 		.ascii	"Motor Surucu\000"
 272      72205375 
 272      72756375 
 272      00
 273              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
ARM GAS  /tmp/ccOav7lU.s 			page 13


 274              		.align	1
 275              		.global	USBD_FS_ProductStrDescriptor
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	USBD_FS_ProductStrDescriptor:
 281              	.LVL19:
 282              	.LFB70:
 249:Src/usbd_desc.c ****   if(speed == 0)
 283              		.loc 1 249 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 249:Src/usbd_desc.c ****   if(speed == 0)
 287              		.loc 1 249 1 is_stmt 0 view .LVU67
 288 0000 08B5     		push	{r3, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 292 0002 0A46     		mov	r2, r1
 250:Src/usbd_desc.c ****   {
 293              		.loc 1 250 3 is_stmt 1 view .LVU68
 250:Src/usbd_desc.c ****   {
 294              		.loc 1 250 5 is_stmt 0 view .LVU69
 295 0004 28B9     		cbnz	r0, .L28
 252:Src/usbd_desc.c ****   }
 296              		.loc 1 252 5 is_stmt 1 view .LVU70
 297 0006 0549     		ldr	r1, .L31
 298              	.LVL20:
 252:Src/usbd_desc.c ****   }
 299              		.loc 1 252 5 is_stmt 0 view .LVU71
 300 0008 0548     		ldr	r0, .L31+4
 301              	.LVL21:
 252:Src/usbd_desc.c ****   }
 302              		.loc 1 252 5 view .LVU72
 303 000a FFF7FEFF 		bl	USBD_GetString
 304              	.LVL22:
 305              	.L29:
 258:Src/usbd_desc.c **** }
 306              		.loc 1 258 3 is_stmt 1 view .LVU73
 259:Src/usbd_desc.c **** 
 307              		.loc 1 259 1 is_stmt 0 view .LVU74
 308 000e 0348     		ldr	r0, .L31
 309 0010 08BD     		pop	{r3, pc}
 310              	.LVL23:
 311              	.L28:
 256:Src/usbd_desc.c ****   }
 312              		.loc 1 256 5 is_stmt 1 view .LVU75
 313 0012 0249     		ldr	r1, .L31
 314              	.LVL24:
 256:Src/usbd_desc.c ****   }
 315              		.loc 1 256 5 is_stmt 0 view .LVU76
 316 0014 0248     		ldr	r0, .L31+4
 317              	.LVL25:
 256:Src/usbd_desc.c ****   }
 318              		.loc 1 256 5 view .LVU77
 319 0016 FFF7FEFF 		bl	USBD_GetString
ARM GAS  /tmp/ccOav7lU.s 			page 14


 320              	.LVL26:
 256:Src/usbd_desc.c ****   }
 321              		.loc 1 256 5 view .LVU78
 322 001a F8E7     		b	.L29
 323              	.L32:
 324              		.align	2
 325              	.L31:
 326 001c 00000000 		.word	USBD_StrDesc
 327 0020 00000000 		.word	.LC0
 328              		.cfi_endproc
 329              	.LFE70:
 331              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 332              		.align	2
 333              	.LC1:
 334 0000 5A657567 		.ascii	"Zeugma\000"
 334      6D6100
 335              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 336              		.align	1
 337              		.global	USBD_FS_ManufacturerStrDescriptor
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	USBD_FS_ManufacturerStrDescriptor:
 343              	.LVL27:
 344              	.LFB71:
 268:Src/usbd_desc.c ****   UNUSED(speed);
 345              		.loc 1 268 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 268:Src/usbd_desc.c ****   UNUSED(speed);
 349              		.loc 1 268 1 is_stmt 0 view .LVU80
 350 0000 10B5     		push	{r4, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 4, -8
 353              		.cfi_offset 14, -4
 354 0002 0A46     		mov	r2, r1
 269:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 355              		.loc 1 269 3 is_stmt 1 view .LVU81
 270:Src/usbd_desc.c ****   return USBD_StrDesc;
 356              		.loc 1 270 3 view .LVU82
 357 0004 034C     		ldr	r4, .L35
 358 0006 2146     		mov	r1, r4
 359              	.LVL28:
 270:Src/usbd_desc.c ****   return USBD_StrDesc;
 360              		.loc 1 270 3 is_stmt 0 view .LVU83
 361 0008 0348     		ldr	r0, .L35+4
 362              	.LVL29:
 270:Src/usbd_desc.c ****   return USBD_StrDesc;
 363              		.loc 1 270 3 view .LVU84
 364 000a FFF7FEFF 		bl	USBD_GetString
 365              	.LVL30:
 271:Src/usbd_desc.c **** }
 366              		.loc 1 271 3 is_stmt 1 view .LVU85
 272:Src/usbd_desc.c **** 
 367              		.loc 1 272 1 is_stmt 0 view .LVU86
 368 000e 2046     		mov	r0, r4
ARM GAS  /tmp/ccOav7lU.s 			page 15


 369 0010 10BD     		pop	{r4, pc}
 370              	.L36:
 371 0012 00BF     		.align	2
 372              	.L35:
 373 0014 00000000 		.word	USBD_StrDesc
 374 0018 00000000 		.word	.LC1
 375              		.cfi_endproc
 376              	.LFE71:
 378              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 379              		.align	2
 380              	.LC2:
 381 0000 43444320 		.ascii	"CDC Config\000"
 381      436F6E66 
 381      696700
 382              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 383              		.align	1
 384              		.global	USBD_FS_ConfigStrDescriptor
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	USBD_FS_ConfigStrDescriptor:
 390              	.LVL31:
 391              	.LFB73:
 301:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 392              		.loc 1 301 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 301:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 396              		.loc 1 301 1 is_stmt 0 view .LVU88
 397 0000 08B5     		push	{r3, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 3, -8
 400              		.cfi_offset 14, -4
 401 0002 0A46     		mov	r2, r1
 302:Src/usbd_desc.c ****   {
 402              		.loc 1 302 3 is_stmt 1 view .LVU89
 302:Src/usbd_desc.c ****   {
 403              		.loc 1 302 5 is_stmt 0 view .LVU90
 404 0004 28B9     		cbnz	r0, .L38
 304:Src/usbd_desc.c ****   }
 405              		.loc 1 304 5 is_stmt 1 view .LVU91
 406 0006 0549     		ldr	r1, .L41
 407              	.LVL32:
 304:Src/usbd_desc.c ****   }
 408              		.loc 1 304 5 is_stmt 0 view .LVU92
 409 0008 0548     		ldr	r0, .L41+4
 410              	.LVL33:
 304:Src/usbd_desc.c ****   }
 411              		.loc 1 304 5 view .LVU93
 412 000a FFF7FEFF 		bl	USBD_GetString
 413              	.LVL34:
 414              	.L39:
 310:Src/usbd_desc.c **** }
 415              		.loc 1 310 3 is_stmt 1 view .LVU94
 311:Src/usbd_desc.c **** 
 416              		.loc 1 311 1 is_stmt 0 view .LVU95
ARM GAS  /tmp/ccOav7lU.s 			page 16


 417 000e 0348     		ldr	r0, .L41
 418 0010 08BD     		pop	{r3, pc}
 419              	.LVL35:
 420              	.L38:
 308:Src/usbd_desc.c ****   }
 421              		.loc 1 308 5 is_stmt 1 view .LVU96
 422 0012 0249     		ldr	r1, .L41
 423              	.LVL36:
 308:Src/usbd_desc.c ****   }
 424              		.loc 1 308 5 is_stmt 0 view .LVU97
 425 0014 0248     		ldr	r0, .L41+4
 426              	.LVL37:
 308:Src/usbd_desc.c ****   }
 427              		.loc 1 308 5 view .LVU98
 428 0016 FFF7FEFF 		bl	USBD_GetString
 429              	.LVL38:
 308:Src/usbd_desc.c ****   }
 430              		.loc 1 308 5 view .LVU99
 431 001a F8E7     		b	.L39
 432              	.L42:
 433              		.align	2
 434              	.L41:
 435 001c 00000000 		.word	USBD_StrDesc
 436 0020 00000000 		.word	.LC2
 437              		.cfi_endproc
 438              	.LFE73:
 440              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 441              		.align	2
 442              	.LC3:
 443 0000 43444320 		.ascii	"CDC Interface\000"
 443      496E7465 
 443      72666163 
 443      6500
 444              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 445              		.align	1
 446              		.global	USBD_FS_InterfaceStrDescriptor
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	USBD_FS_InterfaceStrDescriptor:
 452              	.LVL39:
 453              	.LFB74:
 320:Src/usbd_desc.c ****   if(speed == 0)
 454              		.loc 1 320 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 320:Src/usbd_desc.c ****   if(speed == 0)
 458              		.loc 1 320 1 is_stmt 0 view .LVU101
 459 0000 08B5     		push	{r3, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 463 0002 0A46     		mov	r2, r1
 321:Src/usbd_desc.c ****   {
 464              		.loc 1 321 3 is_stmt 1 view .LVU102
 321:Src/usbd_desc.c ****   {
ARM GAS  /tmp/ccOav7lU.s 			page 17


 465              		.loc 1 321 5 is_stmt 0 view .LVU103
 466 0004 28B9     		cbnz	r0, .L44
 323:Src/usbd_desc.c ****   }
 467              		.loc 1 323 5 is_stmt 1 view .LVU104
 468 0006 0549     		ldr	r1, .L47
 469              	.LVL40:
 323:Src/usbd_desc.c ****   }
 470              		.loc 1 323 5 is_stmt 0 view .LVU105
 471 0008 0548     		ldr	r0, .L47+4
 472              	.LVL41:
 323:Src/usbd_desc.c ****   }
 473              		.loc 1 323 5 view .LVU106
 474 000a FFF7FEFF 		bl	USBD_GetString
 475              	.LVL42:
 476              	.L45:
 329:Src/usbd_desc.c **** }
 477              		.loc 1 329 3 is_stmt 1 view .LVU107
 330:Src/usbd_desc.c **** 
 478              		.loc 1 330 1 is_stmt 0 view .LVU108
 479 000e 0348     		ldr	r0, .L47
 480 0010 08BD     		pop	{r3, pc}
 481              	.LVL43:
 482              	.L44:
 327:Src/usbd_desc.c ****   }
 483              		.loc 1 327 5 is_stmt 1 view .LVU109
 484 0012 0249     		ldr	r1, .L47
 485              	.LVL44:
 327:Src/usbd_desc.c ****   }
 486              		.loc 1 327 5 is_stmt 0 view .LVU110
 487 0014 0248     		ldr	r0, .L47+4
 488              	.LVL45:
 327:Src/usbd_desc.c ****   }
 489              		.loc 1 327 5 view .LVU111
 490 0016 FFF7FEFF 		bl	USBD_GetString
 491              	.LVL46:
 327:Src/usbd_desc.c ****   }
 492              		.loc 1 327 5 view .LVU112
 493 001a F8E7     		b	.L45
 494              	.L48:
 495              		.align	2
 496              	.L47:
 497 001c 00000000 		.word	USBD_StrDesc
 498 0020 00000000 		.word	.LC3
 499              		.cfi_endproc
 500              	.LFE74:
 502              		.global	USBD_StringSerial
 503              		.section	.data.USBD_StringSerial,"aw"
 504              		.align	2
 507              	USBD_StringSerial:
 508 0000 1A0300   		.ascii	"\032\003\000"
 509 0003 00000000 		.space	23
 509      00000000 
 509      00000000 
 509      00000000 
 509      00000000 
 510              		.global	USBD_StrDesc
 511              		.section	.bss.USBD_StrDesc,"aw",%nobits
ARM GAS  /tmp/ccOav7lU.s 			page 18


 512              		.align	2
 515              	USBD_StrDesc:
 516 0000 00000000 		.space	512
 516      00000000 
 516      00000000 
 516      00000000 
 516      00000000 
 517              		.global	USBD_LangIDDesc
 518              		.section	.data.USBD_LangIDDesc,"aw"
 519              		.align	2
 522              	USBD_LangIDDesc:
 523 0000 04030904 		.ascii	"\004\003\011\004"
 524              		.global	USBD_FS_DeviceDesc
 525              		.section	.data.USBD_FS_DeviceDesc,"aw"
 526              		.align	2
 529              	USBD_FS_DeviceDesc:
 530 0000 12010002 		.ascii	"\022\001\000\002\002\002\000@\203\004@W\000\002\001"
 530      02020040 
 530      83044057 
 530      000201
 531 000f 020301   		.ascii	"\002\003\001"
 532              		.global	FS_Desc
 533              		.section	.data.FS_Desc,"aw"
 534              		.align	2
 537              	FS_Desc:
 538 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 539 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 540 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 541 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 542 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 543 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 544 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 545              		.text
 546              	.Letext0:
 547              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 548              		.file 3 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 549              		.file 4 "Inc/usbd_desc.h"
 550              		.file 5 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccOav7lU.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_desc.c
     /tmp/ccOav7lU.s:19     .text.USBD_FS_DeviceDescriptor:00000000 $t
     /tmp/ccOav7lU.s:25     .text.USBD_FS_DeviceDescriptor:00000000 USBD_FS_DeviceDescriptor
     /tmp/ccOav7lU.s:47     .text.USBD_FS_DeviceDescriptor:00000008 $d
     /tmp/ccOav7lU.s:529    .data.USBD_FS_DeviceDesc:00000000 USBD_FS_DeviceDesc
     /tmp/ccOav7lU.s:52     .text.USBD_FS_LangIDStrDescriptor:00000000 $t
     /tmp/ccOav7lU.s:58     .text.USBD_FS_LangIDStrDescriptor:00000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccOav7lU.s:80     .text.USBD_FS_LangIDStrDescriptor:00000008 $d
     /tmp/ccOav7lU.s:522    .data.USBD_LangIDDesc:00000000 USBD_LangIDDesc
     /tmp/ccOav7lU.s:85     .text.IntToUnicode:00000000 $t
     /tmp/ccOav7lU.s:90     .text.IntToUnicode:00000000 IntToUnicode
     /tmp/ccOav7lU.s:163    .text.Get_SerialNum:00000000 $t
     /tmp/ccOav7lU.s:168    .text.Get_SerialNum:00000000 Get_SerialNum
     /tmp/ccOav7lU.s:226    .text.Get_SerialNum:00000030 $d
     /tmp/ccOav7lU.s:507    .data.USBD_StringSerial:00000000 USBD_StringSerial
     /tmp/ccOav7lU.s:232    .text.USBD_FS_SerialStrDescriptor:00000000 $t
     /tmp/ccOav7lU.s:238    .text.USBD_FS_SerialStrDescriptor:00000000 USBD_FS_SerialStrDescriptor
     /tmp/ccOav7lU.s:265    .text.USBD_FS_SerialStrDescriptor:00000010 $d
     /tmp/ccOav7lU.s:270    .rodata.USBD_FS_ProductStrDescriptor.str1.4:00000000 $d
     /tmp/ccOav7lU.s:274    .text.USBD_FS_ProductStrDescriptor:00000000 $t
     /tmp/ccOav7lU.s:280    .text.USBD_FS_ProductStrDescriptor:00000000 USBD_FS_ProductStrDescriptor
     /tmp/ccOav7lU.s:326    .text.USBD_FS_ProductStrDescriptor:0000001c $d
     /tmp/ccOav7lU.s:515    .bss.USBD_StrDesc:00000000 USBD_StrDesc
     /tmp/ccOav7lU.s:332    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:00000000 $d
     /tmp/ccOav7lU.s:336    .text.USBD_FS_ManufacturerStrDescriptor:00000000 $t
     /tmp/ccOav7lU.s:342    .text.USBD_FS_ManufacturerStrDescriptor:00000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccOav7lU.s:373    .text.USBD_FS_ManufacturerStrDescriptor:00000014 $d
     /tmp/ccOav7lU.s:379    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:00000000 $d
     /tmp/ccOav7lU.s:383    .text.USBD_FS_ConfigStrDescriptor:00000000 $t
     /tmp/ccOav7lU.s:389    .text.USBD_FS_ConfigStrDescriptor:00000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccOav7lU.s:435    .text.USBD_FS_ConfigStrDescriptor:0000001c $d
     /tmp/ccOav7lU.s:441    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:00000000 $d
     /tmp/ccOav7lU.s:445    .text.USBD_FS_InterfaceStrDescriptor:00000000 $t
     /tmp/ccOav7lU.s:451    .text.USBD_FS_InterfaceStrDescriptor:00000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccOav7lU.s:497    .text.USBD_FS_InterfaceStrDescriptor:0000001c $d
     /tmp/ccOav7lU.s:504    .data.USBD_StringSerial:00000000 $d
     /tmp/ccOav7lU.s:512    .bss.USBD_StrDesc:00000000 $d
     /tmp/ccOav7lU.s:519    .data.USBD_LangIDDesc:00000000 $d
     /tmp/ccOav7lU.s:526    .data.USBD_FS_DeviceDesc:00000000 $d
     /tmp/ccOav7lU.s:537    .data.FS_Desc:00000000 FS_Desc
     /tmp/ccOav7lU.s:534    .data.FS_Desc:00000000 $d

UNDEFINED SYMBOLS
USBD_GetString
