ARM GAS  /tmp/ccXVsCtc.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.map,"ax",%progbits
  19              		.align	1
  20              		.global	map
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	map:
  26              	.LVL0:
  27              	.LFB68:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  **************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  **************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****  * in the root directory of this software component.
  14:Src/main.c    ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  **************************
  17:Src/main.c    ****  */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "adc.h"
  22:Src/main.c    **** #include "dma.h"
  23:Src/main.c    **** #include "tim.h"
  24:Src/main.c    **** #include "usb_device.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** #include "stdbool.h"
  30:Src/main.c    **** #include "debug_monitor.h"
  31:Src/main.c    **** #include "first_step.h"
ARM GAS  /tmp/ccXVsCtc.s 			page 2


  32:Src/main.c    **** #include "rpm.h"
  33:Src/main.c    **** #include "steps.h"
  34:Src/main.c    **** #include "old_value_hall.h"
  35:Src/main.c    **** #include "bemf.h"
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END Includes */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PTD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PD */
  46:Src/main.c    **** #define voltageConversion_value 0.0396593777777778
  47:Src/main.c    **** #define currentConversionValue 0.00083008
  48:Src/main.c    **** 
  49:Src/main.c    **** #define ALPHA_SHIFT 4            // α = 1 / 2^ALPHA_SHIFT (örn: 3 → α = 1/8)
  50:Src/main.c    **** #define ALPHA (1 << ALPHA_SHIFT) // 2^ALPHA_SHIFT
  51:Src/main.c    **** /* USER CODE END PD */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  54:Src/main.c    **** /* USER CODE BEGIN PM */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PM */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PV */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** void SystemClock_Config(void);
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** volatile bool oldValue[3] = {0, 0, 0};
  74:Src/main.c    **** bool mode = 1;
  75:Src/main.c    **** volatile bool first_step_flag = 1;
  76:Src/main.c    **** volatile bool flagg = 1;
  77:Src/main.c    **** uint32_t adcBuffer[7] = {0};
  78:Src/main.c    **** volatile uint16_t speedInAdc = 0;
  79:Src/main.c    **** volatile uint16_t currentValue = 0;
  80:Src/main.c    **** volatile uint16_t filtered_current = 0;
  81:Src/main.c    **** bool run_status = false;
  82:Src/main.c    **** volatile bool hall_A = 0, hall_B = 0, hall_C = 0;
  83:Src/main.c    **** bool geri_vites = true;
  84:Src/main.c    **** volatile uint32_t step = 0;
  85:Src/main.c    **** volatile uint32_t pwm_value = 0;
  86:Src/main.c    **** volatile uint32_t pwm_value2 = 0;
  87:Src/main.c    **** 
  88:Src/main.c    **** uint32_t pedal_value_mapped = 0;
ARM GAS  /tmp/ccXVsCtc.s 			page 3


  89:Src/main.c    **** uint16_t min_pwm_limit = 130;
  90:Src/main.c    **** volatile uint16_t firstStepDelay = 200;
  91:Src/main.c    **** volatile uint32_t previousTime2 = 0;
  92:Src/main.c    **** volatile uint8_t oncekiDegerler[3];
  93:Src/main.c    **** uint32_t timeForRotorStopStatusMs = 0;
  94:Src/main.c    **** uint32_t timeForRotorStopStatusMsFlag = 0;
  95:Src/main.c    **** 
  96:Src/main.c    **** volatile uint32_t rpm_counter = 0;
  97:Src/main.c    **** volatile uint32_t rpm;
  98:Src/main.c    **** volatile uint16_t difference_two_coummutation_time = 1;
  99:Src/main.c    **** volatile uint16_t difference_two_coummutation_time_filtered = 1;
 100:Src/main.c    **** 
 101:Src/main.c    **** uint32_t previousTime3 = 0;
 102:Src/main.c    **** 
 103:Src/main.c    **** uint16_t minCurrent = 5000;
 104:Src/main.c    **** uint16_t maxCurrent = 0;
 105:Src/main.c    **** uint16_t temporary_current_value = 0;
 106:Src/main.c    **** uint16_t average = 0;
 107:Src/main.c    **** uint32_t tim3sayi = 0;
 108:Src/main.c    **** uint32_t new_ARR = 0;
 109:Src/main.c    **** uint8_t isStoppedTimers = 0;
 110:Src/main.c    **** volatile uint16_t saved_pwm_rpm[30] = {0};
 111:Src/main.c    **** 
 112:Src/main.c    **** uint32_t interval_of_runstatus = 0;
 113:Src/main.c    **** 
 114:Src/main.c    **** volatile uint32_t phase_A;
 115:Src/main.c    **** volatile uint32_t phase_B;
 116:Src/main.c    **** volatile uint32_t phase_C;
 117:Src/main.c    **** 
 118:Src/main.c    **** uint16_t target_rpm = 0;
 119:Src/main.c    **** uint16_t max_rpm_limit = 2000;
 120:Src/main.c    **** uint16_t max_current_limit = 2100;
 121:Src/main.c    **** uint16_t max_pwm_limit = 800; // Max value: 1168!!!
 122:Src/main.c    **** 
 123:Src/main.c    **** uint8_t flag12 = 0;
 124:Src/main.c    **** uint16_t battery_voltage = 0;
 125:Src/main.c    **** volatile uint16_t motor_voltage = 0;
 126:Src/main.c    **** 
 127:Src/main.c    **** uint32_t previousTime4 = 0;
 128:Src/main.c    **** 
 129:Src/main.c    **** uint16_t analyze_data_1[480] = {0};
 130:Src/main.c    **** uint16_t array_counter;
 131:Src/main.c    **** 
 132:Src/main.c    **** uint16_t rpm_analysis[1024] = {0};
 133:Src/main.c    **** 
 134:Src/main.c    **** uint16_t interval_of_steps[1024] = {0};
 135:Src/main.c    **** 
 136:Src/main.c    **** uint8_t step_atlandi = 0; // unused
 137:Src/main.c    **** uint16_t rpm_max_limit_flag = 1;
 138:Src/main.c    **** uint8_t backEMF_mode = 0;
 139:Src/main.c    **** 
 140:Src/main.c    **** uint8_t polarity_A = 0;
 141:Src/main.c    **** uint8_t polarity_B = 0;
 142:Src/main.c    **** uint8_t polarity_C = 0;
 143:Src/main.c    **** 
 144:Src/main.c    **** uint8_t polarity_A_old = 0;
 145:Src/main.c    **** uint8_t polarity_B_old = 0;
ARM GAS  /tmp/ccXVsCtc.s 			page 4


 146:Src/main.c    **** uint8_t polarity_C_old = 0;
 147:Src/main.c    **** 
 148:Src/main.c    **** uint16_t intersection_interval = 0;
 149:Src/main.c    **** 
 150:Src/main.c    **** uint16_t notr = 0;
 151:Src/main.c    **** uint8_t bemf_execute_flag = 1;
 152:Src/main.c    **** 
 153:Src/main.c    **** // VARIABLE END
 154:Src/main.c    **** 
 155:Src/main.c    **** long map(long x, long in_min, long in_max, long out_min, long out_max)
 156:Src/main.c    **** {
  28              		.loc 1 156 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 157:Src/main.c    ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  33              		.loc 1 157 3 view .LVU1
  34              		.loc 1 157 13 is_stmt 0 view .LVU2
  35 0000 A0EB010C 		sub	ip, r0, r1
  36              		.loc 1 157 34 view .LVU3
  37 0004 0098     		ldr	r0, [sp]
  38              	.LVL1:
  39              		.loc 1 157 34 view .LVU4
  40 0006 C01A     		subs	r0, r0, r3
  41              		.loc 1 157 23 view .LVU5
  42 0008 00FB0CFC 		mul	ip, r0, ip
  43              		.loc 1 157 55 view .LVU6
  44 000c 521A     		subs	r2, r2, r1
  45              	.LVL2:
  46              		.loc 1 157 45 view .LVU7
  47 000e 9CFBF2FC 		sdiv	ip, ip, r2
 158:Src/main.c    **** }
  48              		.loc 1 158 1 view .LVU8
  49 0012 0CEB0300 		add	r0, ip, r3
  50 0016 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.ema_filter0,"ax",%progbits
  55              		.align	1
  56              		.global	ema_filter0
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	ema_filter0:
  62              	.LVL3:
  63              	.LFB69:
 159:Src/main.c    **** 
 160:Src/main.c    **** // void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 161:Src/main.c    **** // {
 162:Src/main.c    **** //   rpm = rpm_counter * 25;
 163:Src/main.c    **** //   rpm_counter = 0;
 164:Src/main.c    **** // }
 165:Src/main.c    **** 
 166:Src/main.c    **** // GPIO INTERRUPT HAS BEEN REMOVED FROM HERE
 167:Src/main.c    **** 
 168:Src/main.c    **** uint16_t ema_filter0(uint16_t new_value)
ARM GAS  /tmp/ccXVsCtc.s 			page 5


 169:Src/main.c    **** {
  64              		.loc 1 169 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 170:Src/main.c    ****   static uint16_t filtered_value0 = 0;
  69              		.loc 1 170 3 view .LVU10
 171:Src/main.c    **** 
 172:Src/main.c    ****   if (filtered_value0 == 0)
  70              		.loc 1 172 3 view .LVU11
  71              		.loc 1 172 23 is_stmt 0 view .LVU12
  72 0000 064B     		ldr	r3, .L4
  73 0002 1B88     		ldrh	r3, [r3]
  74              		.loc 1 172 6 view .LVU13
  75 0004 0BB9     		cbnz	r3, .L3
 173:Src/main.c    ****     filtered_value0 = new_value;
  76              		.loc 1 173 5 is_stmt 1 view .LVU14
  77              		.loc 1 173 21 is_stmt 0 view .LVU15
  78 0006 054B     		ldr	r3, .L4
  79 0008 1880     		strh	r0, [r3]	@ movhi
  80              	.L3:
 174:Src/main.c    **** 
 175:Src/main.c    ****   filtered_value0 = filtered_value0 + ((new_value - filtered_value0) >> ALPHA_SHIFT);
  81              		.loc 1 175 3 is_stmt 1 view .LVU16
  82              		.loc 1 175 51 is_stmt 0 view .LVU17
  83 000a 044A     		ldr	r2, .L4
  84 000c 1388     		ldrh	r3, [r2]
  85 000e C01A     		subs	r0, r0, r3
  86              	.LVL4:
  87              		.loc 1 175 37 view .LVU18
  88 0010 03EB2010 		add	r0, r3, r0, asr #4
  89 0014 80B2     		uxth	r0, r0
  90              		.loc 1 175 19 view .LVU19
  91 0016 1080     		strh	r0, [r2]	@ movhi
 176:Src/main.c    **** 
 177:Src/main.c    ****   return filtered_value0;
  92              		.loc 1 177 3 is_stmt 1 view .LVU20
 178:Src/main.c    **** }
  93              		.loc 1 178 1 is_stmt 0 view .LVU21
  94 0018 7047     		bx	lr
  95              	.L5:
  96 001a 00BF     		.align	2
  97              	.L4:
  98 001c 00000000 		.word	filtered_value0.3
  99              		.cfi_endproc
 100              	.LFE69:
 102              		.section	.text.ema_filter1,"ax",%progbits
 103              		.align	1
 104              		.global	ema_filter1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	ema_filter1:
 110              	.LVL5:
 111              	.LFB70:
 179:Src/main.c    **** 
ARM GAS  /tmp/ccXVsCtc.s 			page 6


 180:Src/main.c    **** uint16_t ema_filter1(uint16_t new_value)
 181:Src/main.c    **** {
 112              		.loc 1 181 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 182:Src/main.c    ****   static uint16_t filtered_value1 = 0;
 117              		.loc 1 182 3 view .LVU23
 183:Src/main.c    **** 
 184:Src/main.c    ****   if (filtered_value1 == 0)
 118              		.loc 1 184 3 view .LVU24
 119              		.loc 1 184 23 is_stmt 0 view .LVU25
 120 0000 064B     		ldr	r3, .L8
 121 0002 1B88     		ldrh	r3, [r3]
 122              		.loc 1 184 6 view .LVU26
 123 0004 0BB9     		cbnz	r3, .L7
 185:Src/main.c    ****     filtered_value1 = new_value;
 124              		.loc 1 185 5 is_stmt 1 view .LVU27
 125              		.loc 1 185 21 is_stmt 0 view .LVU28
 126 0006 054B     		ldr	r3, .L8
 127 0008 1880     		strh	r0, [r3]	@ movhi
 128              	.L7:
 186:Src/main.c    **** 
 187:Src/main.c    ****   filtered_value1 = filtered_value1 + ((new_value - filtered_value1) >> ALPHA_SHIFT);
 129              		.loc 1 187 3 is_stmt 1 view .LVU29
 130              		.loc 1 187 51 is_stmt 0 view .LVU30
 131 000a 044A     		ldr	r2, .L8
 132 000c 1388     		ldrh	r3, [r2]
 133 000e C01A     		subs	r0, r0, r3
 134              	.LVL6:
 135              		.loc 1 187 37 view .LVU31
 136 0010 03EB2010 		add	r0, r3, r0, asr #4
 137 0014 80B2     		uxth	r0, r0
 138              		.loc 1 187 19 view .LVU32
 139 0016 1080     		strh	r0, [r2]	@ movhi
 188:Src/main.c    **** 
 189:Src/main.c    ****   return filtered_value1;
 140              		.loc 1 189 3 is_stmt 1 view .LVU33
 190:Src/main.c    **** }
 141              		.loc 1 190 1 is_stmt 0 view .LVU34
 142 0018 7047     		bx	lr
 143              	.L9:
 144 001a 00BF     		.align	2
 145              	.L8:
 146 001c 00000000 		.word	filtered_value1.2
 147              		.cfi_endproc
 148              	.LFE70:
 150              		.section	.text.ema_filter2,"ax",%progbits
 151              		.align	1
 152              		.global	ema_filter2
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	ema_filter2:
 158              	.LVL7:
 159              	.LFB71:
ARM GAS  /tmp/ccXVsCtc.s 			page 7


 191:Src/main.c    **** 
 192:Src/main.c    **** uint16_t ema_filter2(uint16_t new_value)
 193:Src/main.c    **** {
 160              		.loc 1 193 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 194:Src/main.c    ****   static uint16_t filtered_value2 = 0;
 165              		.loc 1 194 3 view .LVU36
 195:Src/main.c    **** 
 196:Src/main.c    ****   if (filtered_value2 == 0)
 166              		.loc 1 196 3 view .LVU37
 167              		.loc 1 196 23 is_stmt 0 view .LVU38
 168 0000 064B     		ldr	r3, .L12
 169 0002 1B88     		ldrh	r3, [r3]
 170              		.loc 1 196 6 view .LVU39
 171 0004 0BB9     		cbnz	r3, .L11
 197:Src/main.c    ****     filtered_value2 = new_value;
 172              		.loc 1 197 5 is_stmt 1 view .LVU40
 173              		.loc 1 197 21 is_stmt 0 view .LVU41
 174 0006 054B     		ldr	r3, .L12
 175 0008 1880     		strh	r0, [r3]	@ movhi
 176              	.L11:
 198:Src/main.c    **** 
 199:Src/main.c    ****   filtered_value2 = filtered_value2 + ((new_value - filtered_value2) >> ALPHA_SHIFT);
 177              		.loc 1 199 3 is_stmt 1 view .LVU42
 178              		.loc 1 199 51 is_stmt 0 view .LVU43
 179 000a 044A     		ldr	r2, .L12
 180 000c 1388     		ldrh	r3, [r2]
 181 000e C01A     		subs	r0, r0, r3
 182              	.LVL8:
 183              		.loc 1 199 37 view .LVU44
 184 0010 03EB2010 		add	r0, r3, r0, asr #4
 185 0014 80B2     		uxth	r0, r0
 186              		.loc 1 199 19 view .LVU45
 187 0016 1080     		strh	r0, [r2]	@ movhi
 200:Src/main.c    **** 
 201:Src/main.c    ****   return filtered_value2;
 188              		.loc 1 201 3 is_stmt 1 view .LVU46
 202:Src/main.c    **** }
 189              		.loc 1 202 1 is_stmt 0 view .LVU47
 190 0018 7047     		bx	lr
 191              	.L13:
 192 001a 00BF     		.align	2
 193              	.L12:
 194 001c 00000000 		.word	filtered_value2.1
 195              		.cfi_endproc
 196              	.LFE71:
 198              		.section	.text.ema_filter3,"ax",%progbits
 199              		.align	1
 200              		.global	ema_filter3
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	ema_filter3:
 206              	.LVL9:
ARM GAS  /tmp/ccXVsCtc.s 			page 8


 207              	.LFB72:
 203:Src/main.c    **** 
 204:Src/main.c    **** uint16_t ema_filter3(uint16_t new_value)
 205:Src/main.c    **** {
 208              		.loc 1 205 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 206:Src/main.c    ****   static uint16_t filtered_value3 = 0;
 213              		.loc 1 206 3 view .LVU49
 207:Src/main.c    **** 
 208:Src/main.c    ****   if (filtered_value3 == 0)
 214              		.loc 1 208 3 view .LVU50
 215              		.loc 1 208 23 is_stmt 0 view .LVU51
 216 0000 064B     		ldr	r3, .L16
 217 0002 1B88     		ldrh	r3, [r3]
 218              		.loc 1 208 6 view .LVU52
 219 0004 0BB9     		cbnz	r3, .L15
 209:Src/main.c    ****     filtered_value3 = new_value;
 220              		.loc 1 209 5 is_stmt 1 view .LVU53
 221              		.loc 1 209 21 is_stmt 0 view .LVU54
 222 0006 054B     		ldr	r3, .L16
 223 0008 1880     		strh	r0, [r3]	@ movhi
 224              	.L15:
 210:Src/main.c    **** 
 211:Src/main.c    ****   filtered_value3 = filtered_value3 + ((new_value - filtered_value3) >> ALPHA_SHIFT);
 225              		.loc 1 211 3 is_stmt 1 view .LVU55
 226              		.loc 1 211 51 is_stmt 0 view .LVU56
 227 000a 044A     		ldr	r2, .L16
 228 000c 1388     		ldrh	r3, [r2]
 229 000e C01A     		subs	r0, r0, r3
 230              	.LVL10:
 231              		.loc 1 211 37 view .LVU57
 232 0010 03EB2010 		add	r0, r3, r0, asr #4
 233 0014 80B2     		uxth	r0, r0
 234              		.loc 1 211 19 view .LVU58
 235 0016 1080     		strh	r0, [r2]	@ movhi
 212:Src/main.c    **** 
 213:Src/main.c    ****   return filtered_value3;
 236              		.loc 1 213 3 is_stmt 1 view .LVU59
 214:Src/main.c    **** }
 237              		.loc 1 214 1 is_stmt 0 view .LVU60
 238 0018 7047     		bx	lr
 239              	.L17:
 240 001a 00BF     		.align	2
 241              	.L16:
 242 001c 00000000 		.word	filtered_value3.0
 243              		.cfi_endproc
 244              	.LFE72:
 246              		.section	.text.filtreye_koy,"ax",%progbits
 247              		.align	1
 248              		.global	filtreye_koy
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	filtreye_koy:
ARM GAS  /tmp/ccXVsCtc.s 			page 9


 254              	.LVL11:
 255              	.LFB73:
 215:Src/main.c    **** 
 216:Src/main.c    **** 
 217:Src/main.c    **** 
 218:Src/main.c    **** uint16_t dizi[120] = {0};
 219:Src/main.c    **** uint16_t dizi_index = 0;
 220:Src/main.c    **** // Gecici olarak devre dışı
 221:Src/main.c    **** uint16_t filtreye_koy(uint16_t num)
 222:Src/main.c    **** {
 256              		.loc 1 222 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 223:Src/main.c    ****   uint16_t toplam = 0;
 261              		.loc 1 223 3 view .LVU62
 224:Src/main.c    ****   uint16_t average = 0;
 262              		.loc 1 224 3 view .LVU63
 225:Src/main.c    **** 
 226:Src/main.c    ****   dizi[dizi_index++] = num;
 263              		.loc 1 226 3 view .LVU64
 264              		.loc 1 226 18 is_stmt 0 view .LVU65
 265 0000 1149     		ldr	r1, .L25
 266 0002 0A88     		ldrh	r2, [r1]
 267 0004 531C     		adds	r3, r2, #1
 268 0006 9BB2     		uxth	r3, r3
 269 0008 0B80     		strh	r3, [r1]	@ movhi
 270              		.loc 1 226 22 view .LVU66
 271 000a 1049     		ldr	r1, .L25+4
 272 000c 21F81200 		strh	r0, [r1, r2, lsl #1]	@ movhi
 227:Src/main.c    **** 
 228:Src/main.c    ****   if (dizi_index == 120)
 273              		.loc 1 228 3 is_stmt 1 view .LVU67
 274              		.loc 1 228 6 is_stmt 0 view .LVU68
 275 0010 782B     		cmp	r3, #120
 276 0012 02D0     		beq	.L24
 277              	.L19:
 229:Src/main.c    ****     dizi_index = 0;
 230:Src/main.c    **** 
 231:Src/main.c    ****   for (uint8_t i = 0; i < 120; i++)
 278              		.loc 1 231 3 is_stmt 1 view .LVU69
 279              	.LBB4:
 280              		.loc 1 231 8 view .LVU70
 281              	.LVL12:
 282              		.loc 1 231 16 is_stmt 0 view .LVU71
 283 0014 0023     		movs	r3, #0
 284              	.LBE4:
 223:Src/main.c    ****   uint16_t average = 0;
 285              		.loc 1 223 12 view .LVU72
 286 0016 1A46     		mov	r2, r3
 287              	.LBB5:
 288              		.loc 1 231 3 view .LVU73
 289 0018 0AE0     		b	.L20
 290              	.LVL13:
 291              	.L24:
 292              		.loc 1 231 3 view .LVU74
ARM GAS  /tmp/ccXVsCtc.s 			page 10


 293              	.LBE5:
 229:Src/main.c    ****     dizi_index = 0;
 294              		.loc 1 229 5 is_stmt 1 view .LVU75
 229:Src/main.c    ****     dizi_index = 0;
 295              		.loc 1 229 16 is_stmt 0 view .LVU76
 296 001a 0B4B     		ldr	r3, .L25
 297 001c 0022     		movs	r2, #0
 298 001e 1A80     		strh	r2, [r3]	@ movhi
 299 0020 F8E7     		b	.L19
 300              	.LVL14:
 301              	.L21:
 302              	.LBB6:
 232:Src/main.c    ****   {
 233:Src/main.c    ****     toplam += dizi[i];
 303              		.loc 1 233 5 is_stmt 1 view .LVU77
 304              		.loc 1 233 19 is_stmt 0 view .LVU78
 305 0022 0A49     		ldr	r1, .L25+4
 306 0024 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 307              		.loc 1 233 12 view .LVU79
 308 0028 0A44     		add	r2, r2, r1
 309              	.LVL15:
 310              		.loc 1 233 12 view .LVU80
 311 002a 92B2     		uxth	r2, r2
 312              	.LVL16:
 231:Src/main.c    ****   {
 313              		.loc 1 231 33 is_stmt 1 discriminator 3 view .LVU81
 314 002c 0133     		adds	r3, r3, #1
 315              	.LVL17:
 231:Src/main.c    ****   {
 316              		.loc 1 231 33 is_stmt 0 discriminator 3 view .LVU82
 317 002e DBB2     		uxtb	r3, r3
 318              	.LVL18:
 319              	.L20:
 231:Src/main.c    ****   {
 320              		.loc 1 231 25 is_stmt 1 discriminator 1 view .LVU83
 321 0030 772B     		cmp	r3, #119
 322 0032 F6D9     		bls	.L21
 323              	.LBE6:
 234:Src/main.c    ****   }
 235:Src/main.c    **** 
 236:Src/main.c    ****   if (toplam > 120)
 324              		.loc 1 236 3 view .LVU84
 325              		.loc 1 236 6 is_stmt 0 view .LVU85
 326 0034 782A     		cmp	r2, #120
 327 0036 05D9     		bls	.L23
 237:Src/main.c    ****     average = toplam / 120;
 328              		.loc 1 237 5 is_stmt 1 view .LVU86
 329              		.loc 1 237 13 is_stmt 0 view .LVU87
 330 0038 054B     		ldr	r3, .L25+8
 331              	.LVL19:
 332              		.loc 1 237 13 view .LVU88
 333 003a A3FB0232 		umull	r3, r2, r3, r2
 334              	.LVL20:
 335              		.loc 1 237 13 view .LVU89
 336 003e C2F38F10 		ubfx	r0, r2, #6, #16
 337              	.LVL21:
 238:Src/main.c    ****   else
ARM GAS  /tmp/ccXVsCtc.s 			page 11


 239:Src/main.c    ****     return 0;
 240:Src/main.c    **** 
 241:Src/main.c    ****   return average;
 338              		.loc 1 241 3 is_stmt 1 view .LVU90
 339              		.loc 1 241 10 is_stmt 0 view .LVU91
 340 0042 7047     		bx	lr
 341              	.LVL22:
 342              	.L23:
 239:Src/main.c    **** 
 343              		.loc 1 239 12 view .LVU92
 344 0044 0020     		movs	r0, #0
 345              	.LVL23:
 242:Src/main.c    **** }
 346              		.loc 1 242 1 view .LVU93
 347 0046 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0048 00000000 		.word	dizi_index
 352 004c 00000000 		.word	dizi
 353 0050 89888888 		.word	-2004318071
 354              		.cfi_endproc
 355              	.LFE73:
 357              		.global	__aeabi_ui2d
 358              		.global	__aeabi_dmul
 359              		.global	__aeabi_d2uiz
 360              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 361              		.align	1
 362              		.global	HAL_ADC_ConvCpltCallback
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	HAL_ADC_ConvCpltCallback:
 368              	.LVL24:
 369              	.LFB74:
 243:Src/main.c    **** 
 244:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 245:Src/main.c    **** { // ADC DMA LEMLERİ
 370              		.loc 1 245 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 246:Src/main.c    ****   if (hadc->Instance == ADC1)
 374              		.loc 1 246 3 view .LVU95
 375              		.loc 1 246 11 is_stmt 0 view .LVU96
 376 0000 0268     		ldr	r2, [r0]
 377              		.loc 1 246 6 view .LVU97
 378 0002 674B     		ldr	r3, .L46+8
 379 0004 9A42     		cmp	r2, r3
 380 0006 00D0     		beq	.L45
 381 0008 7047     		bx	lr
 382              	.L45:
 245:Src/main.c    ****   if (hadc->Instance == ADC1)
 383              		.loc 1 245 1 view .LVU98
 384 000a 30B5     		push	{r4, r5, lr}
 385              		.cfi_def_cfa_offset 12
 386              		.cfi_offset 4, -12
ARM GAS  /tmp/ccXVsCtc.s 			page 12


 387              		.cfi_offset 5, -8
 388              		.cfi_offset 14, -4
 389 000c 83B0     		sub	sp, sp, #12
 390              		.cfi_def_cfa_offset 24
 391              	.LBB7:
 247:Src/main.c    ****   {
 248:Src/main.c    **** 
 249:Src/main.c    ****     battery_voltage = adcBuffer[5] * 0.03843902;
 392              		.loc 1 249 5 is_stmt 1 view .LVU99
 393              		.loc 1 249 32 is_stmt 0 view .LVU100
 394 000e 654C     		ldr	r4, .L46+12
 395              		.loc 1 249 36 view .LVU101
 396 0010 6069     		ldr	r0, [r4, #20]
 397              	.LVL25:
 398              		.loc 1 249 36 view .LVU102
 399 0012 FFF7FEFF 		bl	__aeabi_ui2d
 400              	.LVL26:
 401 0016 60A3     		adr	r3, .L46
 402 0018 D3E90023 		ldrd	r2, [r3]
 403 001c FFF7FEFF 		bl	__aeabi_dmul
 404              	.LVL27:
 405              		.loc 1 249 21 view .LVU103
 406 0020 FFF7FEFF 		bl	__aeabi_d2uiz
 407              	.LVL28:
 408 0024 604B     		ldr	r3, .L46+16
 409 0026 1880     		strh	r0, [r3]	@ movhi
 250:Src/main.c    ****     if ((GPIOA->IDR & GPIO_PIN_8) + (GPIOA->IDR & GPIO_PIN_9) + (GPIOA->IDR & GPIO_PIN_10) == 0)
 410              		.loc 1 250 5 is_stmt 1 view .LVU104
 411              		.loc 1 250 15 is_stmt 0 view .LVU105
 412 0028 604B     		ldr	r3, .L46+20
 413 002a 9A68     		ldr	r2, [r3, #8]
 414              		.loc 1 250 43 view .LVU106
 415 002c 9A68     		ldr	r2, [r3, #8]
 416              		.loc 1 250 71 view .LVU107
 417 002e 9B68     		ldr	r3, [r3, #8]
 251:Src/main.c    ****     {
 252:Src/main.c    ****       // if ((GPIOB->IDR & GPIO_PIN_13) == 0 && (step == 3 || step == 6))
 253:Src/main.c    ****       // {
 254:Src/main.c    ****       //   phase_A = adcBuffer[3];
 255:Src/main.c    ****       //   notr = adcBuffer[6];
 256:Src/main.c    ****       //   if (phase_A > notr)
 257:Src/main.c    ****       //     polarity_A = 1;
 258:Src/main.c    **** 
 259:Src/main.c    ****       //   else
 260:Src/main.c    ****       //     polarity_A = 0;
 261:Src/main.c    ****       // }
 262:Src/main.c    ****       // if ((GPIOB->IDR & GPIO_PIN_14) == 0 && (step == 2 || step == 5))
 263:Src/main.c    ****       // {
 264:Src/main.c    ****       //   phase_B = adcBuffer[4];
 265:Src/main.c    ****       //   notr = adcBuffer[6];
 266:Src/main.c    ****       //   if (phase_B > notr)
 267:Src/main.c    ****       //     polarity_B = 1;
 268:Src/main.c    **** 
 269:Src/main.c    ****       //   else
 270:Src/main.c    ****       //     polarity_B = 0;
 271:Src/main.c    ****       // }
 272:Src/main.c    ****       // if ((GPIOB->IDR & GPIO_PIN_15) == 0 && (step == 1 || step == 4))
ARM GAS  /tmp/ccXVsCtc.s 			page 13


 273:Src/main.c    ****       // {
 274:Src/main.c    ****       //   phase_C = adcBuffer[2];
 275:Src/main.c    ****       //   notr = adcBuffer[6];
 276:Src/main.c    ****       //   if (phase_C > notr)
 277:Src/main.c    ****       //     polarity_C = 1;
 278:Src/main.c    **** 
 279:Src/main.c    ****       //   else
 280:Src/main.c    ****       //     polarity_C = 0;
 281:Src/main.c    ****       // }
 282:Src/main.c    ****     }
 418              		.loc 1 282 5 is_stmt 1 view .LVU108
 283:Src/main.c    **** 
 284:Src/main.c    ****     // A
 285:Src/main.c    ****     phase_A = ema_filter1(adcBuffer[3]);
 419              		.loc 1 285 5 view .LVU109
 420              		.loc 1 285 15 is_stmt 0 view .LVU110
 421 0030 A089     		ldrh	r0, [r4, #12]
 422 0032 FFF7FEFF 		bl	ema_filter1
 423              	.LVL29:
 424              		.loc 1 285 13 discriminator 1 view .LVU111
 425 0036 5E4D     		ldr	r5, .L46+24
 426 0038 2860     		str	r0, [r5]
 286:Src/main.c    ****     notr = ema_filter0(adcBuffer[6]);
 427              		.loc 1 286 5 is_stmt 1 view .LVU112
 428              		.loc 1 286 12 is_stmt 0 view .LVU113
 429 003a 208B     		ldrh	r0, [r4, #24]
 430 003c FFF7FEFF 		bl	ema_filter0
 431              	.LVL30:
 432              		.loc 1 286 10 discriminator 1 view .LVU114
 433 0040 5C4B     		ldr	r3, .L46+28
 434 0042 1880     		strh	r0, [r3]	@ movhi
 287:Src/main.c    ****     if (phase_A > notr)
 435              		.loc 1 287 5 is_stmt 1 view .LVU115
 436              		.loc 1 287 17 is_stmt 0 view .LVU116
 437 0044 2B68     		ldr	r3, [r5]
 438              		.loc 1 287 8 view .LVU117
 439 0046 9842     		cmp	r0, r3
 440 0048 5ED2     		bcs	.L29
 288:Src/main.c    ****       polarity_A = 1;
 441              		.loc 1 288 7 is_stmt 1 view .LVU118
 442              		.loc 1 288 18 is_stmt 0 view .LVU119
 443 004a 5B4B     		ldr	r3, .L46+32
 444 004c 0122     		movs	r2, #1
 445 004e 1A70     		strb	r2, [r3]
 446              	.L30:
 289:Src/main.c    ****     else
 290:Src/main.c    ****       polarity_A = 0;
 291:Src/main.c    **** 
 292:Src/main.c    ****     // B
 293:Src/main.c    ****     phase_B = ema_filter2(adcBuffer[4]);
 447              		.loc 1 293 5 is_stmt 1 view .LVU120
 448              		.loc 1 293 36 is_stmt 0 view .LVU121
 449 0050 544D     		ldr	r5, .L46+12
 450              		.loc 1 293 15 view .LVU122
 451 0052 288A     		ldrh	r0, [r5, #16]
 452 0054 FFF7FEFF 		bl	ema_filter2
 453              	.LVL31:
ARM GAS  /tmp/ccXVsCtc.s 			page 14


 454              		.loc 1 293 13 discriminator 1 view .LVU123
 455 0058 584C     		ldr	r4, .L46+36
 456 005a 2060     		str	r0, [r4]
 294:Src/main.c    ****     notr = ema_filter0(adcBuffer[6]);
 457              		.loc 1 294 5 is_stmt 1 view .LVU124
 458              		.loc 1 294 12 is_stmt 0 view .LVU125
 459 005c 288B     		ldrh	r0, [r5, #24]
 460 005e FFF7FEFF 		bl	ema_filter0
 461              	.LVL32:
 462              		.loc 1 294 10 discriminator 1 view .LVU126
 463 0062 544B     		ldr	r3, .L46+28
 464 0064 1880     		strh	r0, [r3]	@ movhi
 295:Src/main.c    ****     if (phase_B > notr)
 465              		.loc 1 295 5 is_stmt 1 view .LVU127
 466              		.loc 1 295 17 is_stmt 0 view .LVU128
 467 0066 2368     		ldr	r3, [r4]
 468              		.loc 1 295 8 view .LVU129
 469 0068 9842     		cmp	r0, r3
 470 006a 51D2     		bcs	.L31
 296:Src/main.c    ****       polarity_B = 1;
 471              		.loc 1 296 7 is_stmt 1 view .LVU130
 472              		.loc 1 296 18 is_stmt 0 view .LVU131
 473 006c 544B     		ldr	r3, .L46+40
 474 006e 0122     		movs	r2, #1
 475 0070 1A70     		strb	r2, [r3]
 476              	.L32:
 297:Src/main.c    ****     else
 298:Src/main.c    ****       polarity_B = 0;
 299:Src/main.c    **** 
 300:Src/main.c    ****     // C
 301:Src/main.c    ****     phase_C = ema_filter3(adcBuffer[2]);
 477              		.loc 1 301 5 is_stmt 1 view .LVU132
 478              		.loc 1 301 36 is_stmt 0 view .LVU133
 479 0072 4C4D     		ldr	r5, .L46+12
 480              		.loc 1 301 15 view .LVU134
 481 0074 2889     		ldrh	r0, [r5, #8]
 482 0076 FFF7FEFF 		bl	ema_filter3
 483              	.LVL33:
 484              		.loc 1 301 13 discriminator 1 view .LVU135
 485 007a 524C     		ldr	r4, .L46+44
 486 007c 2060     		str	r0, [r4]
 302:Src/main.c    ****     notr = ema_filter0(adcBuffer[6]);
 487              		.loc 1 302 5 is_stmt 1 view .LVU136
 488              		.loc 1 302 12 is_stmt 0 view .LVU137
 489 007e 288B     		ldrh	r0, [r5, #24]
 490 0080 FFF7FEFF 		bl	ema_filter0
 491              	.LVL34:
 492              		.loc 1 302 10 discriminator 1 view .LVU138
 493 0084 4B4B     		ldr	r3, .L46+28
 494 0086 1880     		strh	r0, [r3]	@ movhi
 303:Src/main.c    ****     if (phase_C > notr)
 495              		.loc 1 303 5 is_stmt 1 view .LVU139
 496              		.loc 1 303 17 is_stmt 0 view .LVU140
 497 0088 2368     		ldr	r3, [r4]
 498              		.loc 1 303 8 view .LVU141
 499 008a 9842     		cmp	r0, r3
 500 008c 44D2     		bcs	.L33
ARM GAS  /tmp/ccXVsCtc.s 			page 15


 304:Src/main.c    ****       polarity_C = 1;
 501              		.loc 1 304 7 is_stmt 1 view .LVU142
 502              		.loc 1 304 18 is_stmt 0 view .LVU143
 503 008e 4E4B     		ldr	r3, .L46+48
 504 0090 0122     		movs	r2, #1
 505 0092 1A70     		strb	r2, [r3]
 506              	.L34:
 305:Src/main.c    ****     else
 306:Src/main.c    ****       polarity_C = 0;
 307:Src/main.c    **** 
 308:Src/main.c    ****     uint16_t average_phase = (uint16_t)((phase_A + phase_B + phase_C) / 3);
 507              		.loc 1 308 5 is_stmt 1 view .LVU144
 508              		.loc 1 308 50 is_stmt 0 view .LVU145
 509 0094 464B     		ldr	r3, .L46+24
 510 0096 1B68     		ldr	r3, [r3]
 511 0098 484A     		ldr	r2, .L46+36
 512 009a 1268     		ldr	r2, [r2]
 513 009c 1344     		add	r3, r3, r2
 514              		.loc 1 308 60 view .LVU146
 515 009e 494A     		ldr	r2, .L46+44
 516 00a0 1268     		ldr	r2, [r2]
 517 00a2 1344     		add	r3, r3, r2
 518              		.loc 1 308 71 view .LVU147
 519 00a4 494A     		ldr	r2, .L46+52
 520 00a6 A2FB0323 		umull	r2, r3, r2, r3
 521              		.loc 1 308 14 view .LVU148
 522 00aa C3F34F03 		ubfx	r3, r3, #1, #16
 523              	.LVL35:
 309:Src/main.c    ****     // motor_voltage = filtreye_koy(average_phase);
 310:Src/main.c    ****     // motor_voltage = ema_filter(average_phase);
 311:Src/main.c    ****     motor_voltage = average_phase * 10;
 524              		.loc 1 311 5 is_stmt 1 view .LVU149
 525              		.loc 1 311 19 is_stmt 0 view .LVU150
 526 00ae 03EB8303 		add	r3, r3, r3, lsl #2
 527              	.LVL36:
 528              		.loc 1 311 19 view .LVU151
 529 00b2 5B00     		lsls	r3, r3, #1
 530 00b4 9BB2     		uxth	r3, r3
 531 00b6 464A     		ldr	r2, .L46+56
 532 00b8 1380     		strh	r3, [r2]	@ movhi
 312:Src/main.c    **** 
 313:Src/main.c    ****     currentValue = adcBuffer[1];
 533              		.loc 1 313 5 is_stmt 1 view .LVU152
 534              		.loc 1 313 18 is_stmt 0 view .LVU153
 535 00ba 3A4B     		ldr	r3, .L46+12
 536 00bc 9A88     		ldrh	r2, [r3, #4]
 537 00be 454B     		ldr	r3, .L46+60
 538 00c0 1A80     		strh	r2, [r3]	@ movhi
 314:Src/main.c    ****     filtered_current = 4500 - currentValue;
 539              		.loc 1 314 5 is_stmt 1 view .LVU154
 540              		.loc 1 314 29 is_stmt 0 view .LVU155
 541 00c2 1B88     		ldrh	r3, [r3]
 542 00c4 9BB2     		uxth	r3, r3
 543 00c6 C3F58C53 		rsb	r3, r3, #4480
 544 00ca 1433     		adds	r3, r3, #20
 545 00cc 9BB2     		uxth	r3, r3
 546              		.loc 1 314 22 view .LVU156
ARM GAS  /tmp/ccXVsCtc.s 			page 16


 547 00ce 424A     		ldr	r2, .L46+64
 548 00d0 1380     		strh	r3, [r2]	@ movhi
 315:Src/main.c    **** 
 316:Src/main.c    ****     // TEMPORARY DEVELOPING LINES
 317:Src/main.c    ****     if (filtered_current <= 1600 && filtered_current >= 1300)
 549              		.loc 1 317 5 is_stmt 1 view .LVU157
 550              		.loc 1 317 26 is_stmt 0 view .LVU158
 551 00d2 1388     		ldrh	r3, [r2]
 552 00d4 9BB2     		uxth	r3, r3
 553              		.loc 1 317 8 view .LVU159
 554 00d6 B3F5C86F 		cmp	r3, #1600
 555 00da 21D8     		bhi	.L35
 556              		.loc 1 317 54 discriminator 1 view .LVU160
 557 00dc 1388     		ldrh	r3, [r2]
 558 00de 9BB2     		uxth	r3, r3
 559              		.loc 1 317 34 discriminator 1 view .LVU161
 560 00e0 40F21352 		movw	r2, #1299
 561 00e4 9342     		cmp	r3, r2
 562 00e6 1BD9     		bls	.L35
 318:Src/main.c    ****       temporary_current_value = map(filtered_current, 1300, 1600, 0, 4430);
 563              		.loc 1 318 7 is_stmt 1 view .LVU162
 564              		.loc 1 318 33 is_stmt 0 view .LVU163
 565 00e8 3B4B     		ldr	r3, .L46+64
 566 00ea 1888     		ldrh	r0, [r3]
 567 00ec 41F24E13 		movw	r3, #4430
 568 00f0 0093     		str	r3, [sp]
 569 00f2 0023     		movs	r3, #0
 570 00f4 4FF4C862 		mov	r2, #1600
 571 00f8 40F21451 		movw	r1, #1300
 572 00fc 80B2     		uxth	r0, r0
 573 00fe FFF7FEFF 		bl	map
 574              	.LVL37:
 575              		.loc 1 318 31 discriminator 1 view .LVU164
 576 0102 364B     		ldr	r3, .L46+68
 577 0104 1880     		strh	r0, [r3]	@ movhi
 578              		.loc 1 318 31 view .LVU165
 579 0106 15E0     		b	.L36
 580              	.LVL38:
 581              	.L29:
 290:Src/main.c    **** 
 582              		.loc 1 290 7 is_stmt 1 view .LVU166
 290:Src/main.c    **** 
 583              		.loc 1 290 18 is_stmt 0 view .LVU167
 584 0108 2B4B     		ldr	r3, .L46+32
 585 010a 0022     		movs	r2, #0
 586 010c 1A70     		strb	r2, [r3]
 587 010e 9FE7     		b	.L30
 588              	.L31:
 298:Src/main.c    **** 
 589              		.loc 1 298 7 is_stmt 1 view .LVU168
 298:Src/main.c    **** 
 590              		.loc 1 298 18 is_stmt 0 view .LVU169
 591 0110 2B4B     		ldr	r3, .L46+40
 592 0112 0022     		movs	r2, #0
 593 0114 1A70     		strb	r2, [r3]
 594 0116 ACE7     		b	.L32
 595              	.L33:
ARM GAS  /tmp/ccXVsCtc.s 			page 17


 306:Src/main.c    **** 
 596              		.loc 1 306 7 is_stmt 1 view .LVU170
 306:Src/main.c    **** 
 597              		.loc 1 306 18 is_stmt 0 view .LVU171
 598 0118 2B4B     		ldr	r3, .L46+48
 599 011a 0022     		movs	r2, #0
 600 011c 1A70     		strb	r2, [r3]
 601 011e B9E7     		b	.L34
 602              	.LVL39:
 603              	.L35:
 319:Src/main.c    ****     else if (filtered_current > 1600)
 604              		.loc 1 319 10 is_stmt 1 view .LVU172
 605              		.loc 1 319 31 is_stmt 0 view .LVU173
 606 0120 2D4B     		ldr	r3, .L46+64
 607 0122 1B88     		ldrh	r3, [r3]
 608 0124 9BB2     		uxth	r3, r3
 609              		.loc 1 319 13 view .LVU174
 610 0126 B3F5C86F 		cmp	r3, #1600
 611 012a 30D9     		bls	.L37
 320:Src/main.c    ****       temporary_current_value = 4430;
 612              		.loc 1 320 7 is_stmt 1 view .LVU175
 613              		.loc 1 320 31 is_stmt 0 view .LVU176
 614 012c 2B4B     		ldr	r3, .L46+68
 615 012e 41F24E12 		movw	r2, #4430
 616 0132 1A80     		strh	r2, [r3]	@ movhi
 617              	.L36:
 321:Src/main.c    ****     else
 322:Src/main.c    ****       temporary_current_value = 1300;
 323:Src/main.c    ****     // END
 324:Src/main.c    **** 
 325:Src/main.c    ****     speedInAdc = adcBuffer[0];
 618              		.loc 1 325 5 is_stmt 1 view .LVU177
 619              		.loc 1 325 16 is_stmt 0 view .LVU178
 620 0134 1B4B     		ldr	r3, .L46+12
 621 0136 1A88     		ldrh	r2, [r3]
 622 0138 294B     		ldr	r3, .L46+72
 623 013a 1A80     		strh	r2, [r3]	@ movhi
 326:Src/main.c    **** 
 327:Src/main.c    ****     // target_rpm
 328:Src/main.c    **** 
 329:Src/main.c    ****     if ((currentValue <= 1500) && (pwm_value > 100))
 624              		.loc 1 329 5 is_stmt 1 view .LVU179
 625              		.loc 1 329 23 is_stmt 0 view .LVU180
 626 013c 254B     		ldr	r3, .L46+60
 627 013e 1B88     		ldrh	r3, [r3]
 628 0140 9BB2     		uxth	r3, r3
 629              		.loc 1 329 8 view .LVU181
 630 0142 40F2DC52 		movw	r2, #1500
 631 0146 9342     		cmp	r3, r2
 632 0148 07D8     		bhi	.L38
 633              		.loc 1 329 46 discriminator 1 view .LVU182
 634 014a 264B     		ldr	r3, .L46+76
 635 014c 1B68     		ldr	r3, [r3]
 636              		.loc 1 329 32 discriminator 1 view .LVU183
 637 014e 642B     		cmp	r3, #100
 638 0150 03D9     		bls	.L38
 330:Src/main.c    ****     {
ARM GAS  /tmp/ccXVsCtc.s 			page 18


 331:Src/main.c    ****       pwm_value = pwm_value - 1;
 639              		.loc 1 331 7 is_stmt 1 view .LVU184
 640              		.loc 1 331 29 is_stmt 0 view .LVU185
 641 0152 244A     		ldr	r2, .L46+76
 642 0154 1368     		ldr	r3, [r2]
 643 0156 013B     		subs	r3, r3, #1
 644              		.loc 1 331 17 view .LVU186
 645 0158 1360     		str	r3, [r2]
 646              	.L38:
 332:Src/main.c    ****       // LOG_VAR(pwm_value);
 333:Src/main.c    ****     }
 334:Src/main.c    **** 
 335:Src/main.c    ****     if (minCurrent > filtered_current)
 647              		.loc 1 335 5 is_stmt 1 view .LVU187
 648              		.loc 1 335 20 is_stmt 0 view .LVU188
 649 015a 234B     		ldr	r3, .L46+80
 650 015c 1A88     		ldrh	r2, [r3]
 651 015e 1E4B     		ldr	r3, .L46+64
 652 0160 1B88     		ldrh	r3, [r3]
 653 0162 9BB2     		uxth	r3, r3
 654              		.loc 1 335 8 view .LVU189
 655 0164 9A42     		cmp	r2, r3
 656 0166 03D9     		bls	.L39
 336:Src/main.c    ****       minCurrent = filtered_current;
 657              		.loc 1 336 7 is_stmt 1 view .LVU190
 658              		.loc 1 336 18 is_stmt 0 view .LVU191
 659 0168 1B4B     		ldr	r3, .L46+64
 660 016a 1A88     		ldrh	r2, [r3]
 661 016c 1E4B     		ldr	r3, .L46+80
 662 016e 1A80     		strh	r2, [r3]	@ movhi
 663              	.L39:
 337:Src/main.c    ****     if (maxCurrent < filtered_current)
 664              		.loc 1 337 5 is_stmt 1 view .LVU192
 665              		.loc 1 337 20 is_stmt 0 view .LVU193
 666 0170 1E4B     		ldr	r3, .L46+84
 667 0172 1A88     		ldrh	r2, [r3]
 668 0174 184B     		ldr	r3, .L46+64
 669 0176 1B88     		ldrh	r3, [r3]
 670 0178 9BB2     		uxth	r3, r3
 671              		.loc 1 337 8 view .LVU194
 672 017a 9A42     		cmp	r2, r3
 673 017c 03D2     		bcs	.L40
 338:Src/main.c    ****       maxCurrent = filtered_current;
 674              		.loc 1 338 7 is_stmt 1 view .LVU195
 675              		.loc 1 338 18 is_stmt 0 view .LVU196
 676 017e 164B     		ldr	r3, .L46+64
 677 0180 1A88     		ldrh	r2, [r3]
 678 0182 1A4B     		ldr	r3, .L46+84
 679 0184 1A80     		strh	r2, [r3]	@ movhi
 680              	.L40:
 339:Src/main.c    ****     phaseControlBemf();
 681              		.loc 1 339 5 is_stmt 1 view .LVU197
 682 0186 FFF7FEFF 		bl	phaseControlBemf
 683              	.LVL40:
 684              	.LBE7:
 340:Src/main.c    ****   }
 341:Src/main.c    **** }
ARM GAS  /tmp/ccXVsCtc.s 			page 19


 685              		.loc 1 341 1 is_stmt 0 view .LVU198
 686 018a 03B0     		add	sp, sp, #12
 687              		.cfi_remember_state
 688              		.cfi_def_cfa_offset 12
 689              		@ sp needed
 690 018c 30BD     		pop	{r4, r5, pc}
 691              	.L37:
 692              		.cfi_restore_state
 693              	.LBB8:
 322:Src/main.c    ****     // END
 694              		.loc 1 322 7 is_stmt 1 view .LVU199
 322:Src/main.c    ****     // END
 695              		.loc 1 322 31 is_stmt 0 view .LVU200
 696 018e 134B     		ldr	r3, .L46+68
 697 0190 40F21452 		movw	r2, #1300
 698 0194 1A80     		strh	r2, [r3]	@ movhi
 699 0196 CDE7     		b	.L36
 700              	.L47:
 701              		.align	3
 702              	.L46:
 703 0198 E1A0947B 		.word	2073338081
 704 019c 47AEA33F 		.word	1067691591
 705 01a0 00240140 		.word	1073816576
 706 01a4 00000000 		.word	adcBuffer
 707 01a8 00000000 		.word	battery_voltage
 708 01ac 00080140 		.word	1073809408
 709 01b0 00000000 		.word	phase_A
 710 01b4 00000000 		.word	notr
 711 01b8 00000000 		.word	polarity_A
 712 01bc 00000000 		.word	phase_B
 713 01c0 00000000 		.word	polarity_B
 714 01c4 00000000 		.word	phase_C
 715 01c8 00000000 		.word	polarity_C
 716 01cc ABAAAAAA 		.word	-1431655765
 717 01d0 00000000 		.word	motor_voltage
 718 01d4 00000000 		.word	currentValue
 719 01d8 00000000 		.word	filtered_current
 720 01dc 00000000 		.word	temporary_current_value
 721 01e0 00000000 		.word	speedInAdc
 722 01e4 00000000 		.word	pwm_value
 723 01e8 00000000 		.word	minCurrent
 724 01ec 00000000 		.word	maxCurrent
 725              	.LBE8:
 726              		.cfi_endproc
 727              	.LFE74:
 729              		.section	.text.Error_Handler,"ax",%progbits
 730              		.align	1
 731              		.global	Error_Handler
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	Error_Handler:
 737              	.LFB77:
 342:Src/main.c    **** 
 343:Src/main.c    **** /* USER CODE END 0 */
 344:Src/main.c    **** 
 345:Src/main.c    **** /**
ARM GAS  /tmp/ccXVsCtc.s 			page 20


 346:Src/main.c    ****  * @brief  The application entry point.
 347:Src/main.c    ****  * @retval int
 348:Src/main.c    ****  */
 349:Src/main.c    **** int main(void)
 350:Src/main.c    **** {
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* USER CODE BEGIN 1 */
 353:Src/main.c    ****   oldValue[0] = 1;
 354:Src/main.c    ****   oldValue[1] = 0;
 355:Src/main.c    ****   oldValue[2] = 1;
 356:Src/main.c    ****   /* USER CODE END 1 */
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 359:Src/main.c    **** 
 360:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 361:Src/main.c    ****   HAL_Init();
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE BEGIN Init */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE END Init */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* Configure the system clock */
 368:Src/main.c    ****   SystemClock_Config();
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END SysInit */
 373:Src/main.c    **** 
 374:Src/main.c    ****   /* Initialize all configured peripherals */
 375:Src/main.c    ****   MX_GPIO_Init();
 376:Src/main.c    ****   MX_DMA_Init();
 377:Src/main.c    ****   MX_ADC1_Init();
 378:Src/main.c    ****   MX_TIM1_Init();
 379:Src/main.c    ****   MX_USB_DEVICE_Init();
 380:Src/main.c    ****   MX_TIM2_Init();
 381:Src/main.c    ****   MX_TIM3_Init();
 382:Src/main.c    ****   MX_TIM4_Init();
 383:Src/main.c    ****   /* USER CODE BEGIN 2 */
 384:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, adcBuffer, 7);
 385:Src/main.c    **** 
 386:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 387:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 388:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 389:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 390:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 391:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 392:Src/main.c    **** 
 393:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 394:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim2, 0);
 395:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 396:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim3, 0);
 397:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim4);
 398:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim4, 0);
 399:Src/main.c    **** 
 400:Src/main.c    ****   HAL_Delay(100);
 401:Src/main.c    ****   TIM1->CCER = 0x0000;
 402:Src/main.c    ****   previousTime2 = HAL_GetTick();
ARM GAS  /tmp/ccXVsCtc.s 			page 21


 403:Src/main.c    ****   previousTime3 = HAL_GetTick();
 404:Src/main.c    **** 
 405:Src/main.c    ****   /* USER CODE END 2 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* Infinite loop */
 408:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 409:Src/main.c    ****   while (1)
 410:Src/main.c    ****   {
 411:Src/main.c    **** 
 412:Src/main.c    ****     hall_A = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 413:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 414:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 415:Src/main.c    ****     if (!run_status)
 416:Src/main.c    ****     {
 417:Src/main.c    ****       pwm_value = 10.50 * motor_voltage / battery_voltage;
 418:Src/main.c    ****     }
 419:Src/main.c    **** 
 420:Src/main.c    ****     // uint32_t filtreli_akim = filtreye_koy(filtered_current);
 421:Src/main.c    ****     average = 0;
 422:Src/main.c    **** 
 423:Src/main.c    ****     /* USER CODE END WHILE */
 424:Src/main.c    **** 
 425:Src/main.c    ****     /* USER CODE BEGIN 3 */
 426:Src/main.c    ****     if (HAL_GetTick() - previousTime3 > 20) // && rpm_max_limit_flag)
 427:Src/main.c    ****     {
 428:Src/main.c    **** 
 429:Src/main.c    ****       // LOG_VAR(phase_A);
 430:Src/main.c    ****       // LOG_VAR(phase_B);
 431:Src/main.c    ****       // LOG_VAR(phase_C);
 432:Src/main.c    ****       // LOG_VAR(motor_voltage);
 433:Src/main.c    ****       // LOG_VAR(rpm);
 434:Src/main.c    ****       // LOG_POST();
 435:Src/main.c    ****       // LOG_VAR(adcBuffer[6]);
 436:Src/main.c    **** 
 437:Src/main.c    ****       // // LOG_VAR(step);
 438:Src/main.c    ****       uint16_t k = difference_two_coummutation_time;
 439:Src/main.c    ****       uint16_t t = difference_two_coummutation_time_filtered;
 440:Src/main.c    ****       LOG_VAR(rpm);
 441:Src/main.c    ****       LOG_VAR(k);
 442:Src/main.c    ****       LOG_VAR(t);
 443:Src/main.c    ****       LOG_POST();
 444:Src/main.c    ****       previousTime3 = HAL_GetTick();
 445:Src/main.c    ****     }
 446:Src/main.c    **** 
 447:Src/main.c    ****     // LOG_VAR(rpm);
 448:Src/main.c    **** 
 449:Src/main.c    ****     // LOG_VAR(filtered_current);
 450:Src/main.c    ****     // LOG_VAR(pwm_value);
 451:Src/main.c    **** 
 452:Src/main.c    ****     // LOG_VAR(pedal_value_mapped);
 453:Src/main.c    ****     // LOG_VAR(temporary_current_value);
 454:Src/main.c    **** 
 455:Src/main.c    ****     // LOG_POST();
 456:Src/main.c    ****     if (HAL_GetTick() - previousTime2 > 1500 && run_status)
 457:Src/main.c    ****     {
 458:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 459:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
ARM GAS  /tmp/ccXVsCtc.s 			page 22


 460:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
 461:Src/main.c    ****       TIM1->CCER = 0x0000;
 462:Src/main.c    ****       // rpm = get_rpm(-1);
 463:Src/main.c    ****       previousTime2 = HAL_GetTick();
 464:Src/main.c    ****     }
 465:Src/main.c    **** 
 466:Src/main.c    ****     // if (HAL_GetTick() - timeForRotorStopStatusMs > 500 && run_status)
 467:Src/main.c    ****     // {
 468:Src/main.c    ****     //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 469:Src/main.c    ****     //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 470:Src/main.c    ****     //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 471:Src/main.c    ****     //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 472:Src/main.c    ****     //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 473:Src/main.c    ****     //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 474:Src/main.c    ****     // }
 475:Src/main.c    **** 
 476:Src/main.c    ****     if (speedInAdc >= 900) // Checked
 477:Src/main.c    ****     {
 478:Src/main.c    ****       // if (isStoppedTimers && 0)
 479:Src/main.c    ****       // {
 480:Src/main.c    ****       //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 481:Src/main.c    ****       //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 482:Src/main.c    ****       //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 483:Src/main.c    ****       //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 484:Src/main.c    ****       //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 485:Src/main.c    ****       //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 486:Src/main.c    ****       //   isStoppedTimers = 0;
 487:Src/main.c    ****       // }
 488:Src/main.c    **** 
 489:Src/main.c    ****       timeForRotorStopStatusMsFlag = 1;
 490:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 491:Src/main.c    **** 
 492:Src/main.c    ****       if (mode == 0)
 493:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 494:Src/main.c    ****       else
 495:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 496:Src/main.c    **** 
 497:Src/main.c    ****       HAL_Delay(1); // Kaldırılabilir
 498:Src/main.c    **** 
 499:Src/main.c    ****       if (rpm > target_rpm) // if (filtered_current > pedal_value_mapped)
 500:Src/main.c    ****       {
 501:Src/main.c    ****         if (pwm_value > min_pwm_limit)
 502:Src/main.c    ****         {
 503:Src/main.c    ****           pwm_value -= 1;
 504:Src/main.c    ****         }
 505:Src/main.c    ****         else
 506:Src/main.c    ****         {
 507:Src/main.c    ****           pwm_value = min_pwm_limit;
 508:Src/main.c    ****         }
 509:Src/main.c    ****       }
 510:Src/main.c    **** 
 511:Src/main.c    ****       else
 512:Src/main.c    ****       {
 513:Src/main.c    ****         if (pwm_value < min_pwm_limit)
 514:Src/main.c    ****         {
 515:Src/main.c    ****           pwm_value = min_pwm_limit;
 516:Src/main.c    ****         }
ARM GAS  /tmp/ccXVsCtc.s 			page 23


 517:Src/main.c    ****         else if (pwm_value < max_pwm_limit)
 518:Src/main.c    ****         {
 519:Src/main.c    ****           pwm_value += 1;
 520:Src/main.c    ****         }
 521:Src/main.c    ****       }
 522:Src/main.c    **** 
 523:Src/main.c    ****       if (!run_status)
 524:Src/main.c    ****       {
 525:Src/main.c    ****         run_status = true;
 526:Src/main.c    ****         // geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 527:Src/main.c    ****         hall_A = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 528:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 529:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 530:Src/main.c    ****         if (motor_voltage < 150)
 531:Src/main.c    ****         {
 532:Src/main.c    ****           pwm_value = min_pwm_limit;
 533:Src/main.c    ****           HAL_GPIO_EXTI_Callback(GPIO_PIN_2);
 534:Src/main.c    ****           // first_step(hall_A, hall_B, hall_C);
 535:Src/main.c    ****         }
 536:Src/main.c    ****       }
 537:Src/main.c    ****     }
 538:Src/main.c    **** 
 539:Src/main.c    ****     else if ((run_status) && (speedInAdc < 800))
 540:Src/main.c    ****     {
 541:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
 542:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, 0);
 543:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 0);
 544:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0); // Mosfetleri kapatıyoruz
 545:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 546:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 547:Src/main.c    ****       TIM1->CCER = 0x0000;
 548:Src/main.c    ****       flagg = 1;
 549:Src/main.c    ****       // step = 0;
 550:Src/main.c    ****       first_step_flag = 1;
 551:Src/main.c    **** 
 552:Src/main.c    ****       // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 553:Src/main.c    ****       // HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_1);
 554:Src/main.c    ****       // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 555:Src/main.c    ****       // HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_2);
 556:Src/main.c    ****       // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 557:Src/main.c    ****       // HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_3);
 558:Src/main.c    ****       // isStoppedTimers = 1;
 559:Src/main.c    ****       if (timeForRotorStopStatusMsFlag)
 560:Src/main.c    ****       {
 561:Src/main.c    ****         timeForRotorStopStatusMs = HAL_GetTick();
 562:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 563:Src/main.c    ****       }
 564:Src/main.c    ****       run_status = false;
 565:Src/main.c    ****     }
 566:Src/main.c    ****   }
 567:Src/main.c    **** 
 568:Src/main.c    ****   hall_A = HAL_GPIO_ReadPin(GPIOA, HALL_1_Pin);
 569:Src/main.c    ****   hall_B = HAL_GPIO_ReadPin(GPIOA, HALL_2_Pin);
 570:Src/main.c    ****   hall_C = HAL_GPIO_ReadPin(GPIOA, HALL_3_Pin);
 571:Src/main.c    ****   /* USER CODE END 3 */
 572:Src/main.c    **** }
 573:Src/main.c    **** 
ARM GAS  /tmp/ccXVsCtc.s 			page 24


 574:Src/main.c    **** /**
 575:Src/main.c    ****  * @brief System Clock Configuration
 576:Src/main.c    ****  * @retval None
 577:Src/main.c    ****  */
 578:Src/main.c    **** void SystemClock_Config(void)
 579:Src/main.c    **** {
 580:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 581:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 582:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 583:Src/main.c    **** 
 584:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 585:Src/main.c    ****    * in the RCC_OscInitTypeDef structure.
 586:Src/main.c    ****    */
 587:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 588:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 589:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 590:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 591:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 592:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 593:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 594:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 595:Src/main.c    ****   {
 596:Src/main.c    ****     Error_Handler();
 597:Src/main.c    ****   }
 598:Src/main.c    **** 
 599:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 600:Src/main.c    ****    */
 601:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 602:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 603:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 604:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 605:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 606:Src/main.c    **** 
 607:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 608:Src/main.c    ****   {
 609:Src/main.c    ****     Error_Handler();
 610:Src/main.c    ****   }
 611:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC | RCC_PERIPHCLK_USB;
 612:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 613:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 614:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 615:Src/main.c    ****   {
 616:Src/main.c    ****     Error_Handler();
 617:Src/main.c    ****   }
 618:Src/main.c    **** }
 619:Src/main.c    **** 
 620:Src/main.c    **** /* USER CODE BEGIN 4 */
 621:Src/main.c    **** 
 622:Src/main.c    **** /* USER CODE END 4 */
 623:Src/main.c    **** 
 624:Src/main.c    **** /**
 625:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 626:Src/main.c    ****  * @retval None
 627:Src/main.c    ****  */
 628:Src/main.c    **** void Error_Handler(void)
 629:Src/main.c    **** {
 738              		.loc 1 629 1 is_stmt 1 view -0
ARM GAS  /tmp/ccXVsCtc.s 			page 25


 739              		.cfi_startproc
 740              		@ Volatile: function does not return.
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 630:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 631:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 632:Src/main.c    ****   __disable_irq();
 744              		.loc 1 632 3 view .LVU202
 745              	.LBB9:
 746              	.LBI9:
 747              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccXVsCtc.s 			page 26


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccXVsCtc.s 			page 27


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 748              		.loc 2 140 27 view .LVU203
 749              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 750              		.loc 2 142 3 view .LVU204
 751              		.syntax unified
 752              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 753 0000 72B6     		cpsid i
 754              	@ 0 "" 2
 755              		.thumb
 756              		.syntax unified
 757              	.L49:
 758              	.LBE10:
 759              	.LBE9:
 633:Src/main.c    ****   while (1)
 760              		.loc 1 633 3 view .LVU205
 634:Src/main.c    ****   {
 635:Src/main.c    ****   }
 761              		.loc 1 635 3 view .LVU206
ARM GAS  /tmp/ccXVsCtc.s 			page 28


 633:Src/main.c    ****   while (1)
 762              		.loc 1 633 9 view .LVU207
 763 0002 FEE7     		b	.L49
 764              		.cfi_endproc
 765              	.LFE77:
 767              		.section	.text.SystemClock_Config,"ax",%progbits
 768              		.align	1
 769              		.global	SystemClock_Config
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	SystemClock_Config:
 775              	.LFB76:
 579:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 776              		.loc 1 579 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 80
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 00B5     		push	{lr}
 781              		.cfi_def_cfa_offset 4
 782              		.cfi_offset 14, -4
 783 0002 95B0     		sub	sp, sp, #84
 784              		.cfi_def_cfa_offset 88
 580:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 785              		.loc 1 580 3 view .LVU209
 580:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 786              		.loc 1 580 22 is_stmt 0 view .LVU210
 787 0004 2822     		movs	r2, #40
 788 0006 0021     		movs	r1, #0
 789 0008 0DEB0200 		add	r0, sp, r2
 790 000c FFF7FEFF 		bl	memset
 791              	.LVL41:
 581:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 792              		.loc 1 581 3 is_stmt 1 view .LVU211
 581:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 793              		.loc 1 581 22 is_stmt 0 view .LVU212
 794 0010 0023     		movs	r3, #0
 795 0012 0593     		str	r3, [sp, #20]
 796 0014 0693     		str	r3, [sp, #24]
 797 0016 0793     		str	r3, [sp, #28]
 798 0018 0893     		str	r3, [sp, #32]
 799 001a 0993     		str	r3, [sp, #36]
 582:Src/main.c    **** 
 800              		.loc 1 582 3 is_stmt 1 view .LVU213
 582:Src/main.c    **** 
 801              		.loc 1 582 28 is_stmt 0 view .LVU214
 802 001c 0193     		str	r3, [sp, #4]
 803 001e 0293     		str	r3, [sp, #8]
 804 0020 0393     		str	r3, [sp, #12]
 805 0022 0493     		str	r3, [sp, #16]
 587:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 806              		.loc 1 587 3 is_stmt 1 view .LVU215
 587:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 807              		.loc 1 587 36 is_stmt 0 view .LVU216
 808 0024 0122     		movs	r2, #1
 809 0026 0A92     		str	r2, [sp, #40]
 588:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /tmp/ccXVsCtc.s 			page 29


 810              		.loc 1 588 3 is_stmt 1 view .LVU217
 588:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 811              		.loc 1 588 30 is_stmt 0 view .LVU218
 812 0028 4FF48033 		mov	r3, #65536
 813 002c 0B93     		str	r3, [sp, #44]
 589:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 814              		.loc 1 589 3 is_stmt 1 view .LVU219
 590:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 815              		.loc 1 590 3 view .LVU220
 590:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 816              		.loc 1 590 30 is_stmt 0 view .LVU221
 817 002e 0E92     		str	r2, [sp, #56]
 591:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 818              		.loc 1 591 3 is_stmt 1 view .LVU222
 591:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 819              		.loc 1 591 34 is_stmt 0 view .LVU223
 820 0030 0222     		movs	r2, #2
 821 0032 1192     		str	r2, [sp, #68]
 592:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 822              		.loc 1 592 3 is_stmt 1 view .LVU224
 592:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 823              		.loc 1 592 35 is_stmt 0 view .LVU225
 824 0034 1293     		str	r3, [sp, #72]
 593:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 825              		.loc 1 593 3 is_stmt 1 view .LVU226
 593:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 826              		.loc 1 593 32 is_stmt 0 view .LVU227
 827 0036 4FF4E013 		mov	r3, #1835008
 828 003a 1393     		str	r3, [sp, #76]
 594:Src/main.c    ****   {
 829              		.loc 1 594 3 is_stmt 1 view .LVU228
 594:Src/main.c    ****   {
 830              		.loc 1 594 7 is_stmt 0 view .LVU229
 831 003c 0AA8     		add	r0, sp, #40
 832 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 833              	.LVL42:
 594:Src/main.c    ****   {
 834              		.loc 1 594 6 discriminator 1 view .LVU230
 835 0042 D8B9     		cbnz	r0, .L55
 601:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 836              		.loc 1 601 3 is_stmt 1 view .LVU231
 601:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 837              		.loc 1 601 31 is_stmt 0 view .LVU232
 838 0044 0F23     		movs	r3, #15
 839 0046 0593     		str	r3, [sp, #20]
 602:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 840              		.loc 1 602 3 is_stmt 1 view .LVU233
 602:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 841              		.loc 1 602 34 is_stmt 0 view .LVU234
 842 0048 0221     		movs	r1, #2
 843 004a 0691     		str	r1, [sp, #24]
 603:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 844              		.loc 1 603 3 is_stmt 1 view .LVU235
 603:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 845              		.loc 1 603 35 is_stmt 0 view .LVU236
 846 004c 0023     		movs	r3, #0
 847 004e 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccXVsCtc.s 			page 30


 604:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 848              		.loc 1 604 3 is_stmt 1 view .LVU237
 604:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 849              		.loc 1 604 36 is_stmt 0 view .LVU238
 850 0050 4FF48062 		mov	r2, #1024
 851 0054 0892     		str	r2, [sp, #32]
 605:Src/main.c    **** 
 852              		.loc 1 605 3 is_stmt 1 view .LVU239
 605:Src/main.c    **** 
 853              		.loc 1 605 36 is_stmt 0 view .LVU240
 854 0056 0993     		str	r3, [sp, #36]
 607:Src/main.c    ****   {
 855              		.loc 1 607 3 is_stmt 1 view .LVU241
 607:Src/main.c    ****   {
 856              		.loc 1 607 7 is_stmt 0 view .LVU242
 857 0058 05A8     		add	r0, sp, #20
 858 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 859              	.LVL43:
 607:Src/main.c    ****   {
 860              		.loc 1 607 6 discriminator 1 view .LVU243
 861 005e 78B9     		cbnz	r0, .L56
 611:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 862              		.loc 1 611 3 is_stmt 1 view .LVU244
 611:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 863              		.loc 1 611 38 is_stmt 0 view .LVU245
 864 0060 1223     		movs	r3, #18
 865 0062 0193     		str	r3, [sp, #4]
 612:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 866              		.loc 1 612 3 is_stmt 1 view .LVU246
 612:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 867              		.loc 1 612 35 is_stmt 0 view .LVU247
 868 0064 4FF40043 		mov	r3, #32768
 869 0068 0393     		str	r3, [sp, #12]
 613:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 870              		.loc 1 613 3 is_stmt 1 view .LVU248
 613:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 871              		.loc 1 613 35 is_stmt 0 view .LVU249
 872 006a 0023     		movs	r3, #0
 873 006c 0493     		str	r3, [sp, #16]
 614:Src/main.c    ****   {
 874              		.loc 1 614 3 is_stmt 1 view .LVU250
 614:Src/main.c    ****   {
 875              		.loc 1 614 7 is_stmt 0 view .LVU251
 876 006e 01A8     		add	r0, sp, #4
 877 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 878              	.LVL44:
 614:Src/main.c    ****   {
 879              		.loc 1 614 6 discriminator 1 view .LVU252
 880 0074 30B9     		cbnz	r0, .L57
 618:Src/main.c    **** 
 881              		.loc 1 618 1 view .LVU253
 882 0076 15B0     		add	sp, sp, #84
 883              		.cfi_remember_state
 884              		.cfi_def_cfa_offset 4
 885              		@ sp needed
 886 0078 5DF804FB 		ldr	pc, [sp], #4
 887              	.L55:
ARM GAS  /tmp/ccXVsCtc.s 			page 31


 888              		.cfi_restore_state
 596:Src/main.c    ****   }
 889              		.loc 1 596 5 is_stmt 1 view .LVU254
 890 007c FFF7FEFF 		bl	Error_Handler
 891              	.LVL45:
 892              	.L56:
 609:Src/main.c    ****   }
 893              		.loc 1 609 5 view .LVU255
 894 0080 FFF7FEFF 		bl	Error_Handler
 895              	.LVL46:
 896              	.L57:
 616:Src/main.c    ****   }
 897              		.loc 1 616 5 view .LVU256
 898 0084 FFF7FEFF 		bl	Error_Handler
 899              	.LVL47:
 900              		.cfi_endproc
 901              	.LFE76:
 903              		.global	__aeabi_i2d
 904              		.global	__aeabi_ddiv
 905              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 906              		.align	2
 907              	.LC0:
 908 0000 72706D00 		.ascii	"rpm\000"
 909              		.align	2
 910              	.LC1:
 911 0004 6B00     		.ascii	"k\000"
 912 0006 0000     		.align	2
 913              	.LC2:
 914 0008 7400     		.ascii	"t\000"
 915              		.section	.text.main,"ax",%progbits
 916              		.align	1
 917              		.global	main
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 922              	main:
 923              	.LFB75:
 350:Src/main.c    **** 
 924              		.loc 1 350 1 view -0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928 0000 30B5     		push	{r4, r5, lr}
 929              		.cfi_def_cfa_offset 12
 930              		.cfi_offset 4, -12
 931              		.cfi_offset 5, -8
 932              		.cfi_offset 14, -4
 933 0002 83B0     		sub	sp, sp, #12
 934              		.cfi_def_cfa_offset 24
 353:Src/main.c    ****   oldValue[1] = 0;
 935              		.loc 1 353 3 view .LVU258
 353:Src/main.c    ****   oldValue[1] = 0;
 936              		.loc 1 353 15 is_stmt 0 view .LVU259
 937 0004 534B     		ldr	r3, .L76
 938 0006 0122     		movs	r2, #1
 939 0008 1A70     		strb	r2, [r3]
 354:Src/main.c    ****   oldValue[2] = 1;
ARM GAS  /tmp/ccXVsCtc.s 			page 32


 940              		.loc 1 354 3 is_stmt 1 view .LVU260
 354:Src/main.c    ****   oldValue[2] = 1;
 941              		.loc 1 354 15 is_stmt 0 view .LVU261
 942 000a 0024     		movs	r4, #0
 943 000c 5C70     		strb	r4, [r3, #1]
 355:Src/main.c    ****   /* USER CODE END 1 */
 944              		.loc 1 355 3 is_stmt 1 view .LVU262
 355:Src/main.c    ****   /* USER CODE END 1 */
 945              		.loc 1 355 15 is_stmt 0 view .LVU263
 946 000e 9A70     		strb	r2, [r3, #2]
 361:Src/main.c    **** 
 947              		.loc 1 361 3 is_stmt 1 view .LVU264
 948 0010 FFF7FEFF 		bl	HAL_Init
 949              	.LVL48:
 368:Src/main.c    **** 
 950              		.loc 1 368 3 view .LVU265
 951 0014 FFF7FEFF 		bl	SystemClock_Config
 952              	.LVL49:
 375:Src/main.c    ****   MX_DMA_Init();
 953              		.loc 1 375 3 view .LVU266
 954 0018 FFF7FEFF 		bl	MX_GPIO_Init
 955              	.LVL50:
 376:Src/main.c    ****   MX_ADC1_Init();
 956              		.loc 1 376 3 view .LVU267
 957 001c FFF7FEFF 		bl	MX_DMA_Init
 958              	.LVL51:
 377:Src/main.c    ****   MX_TIM1_Init();
 959              		.loc 1 377 3 view .LVU268
 960 0020 FFF7FEFF 		bl	MX_ADC1_Init
 961              	.LVL52:
 378:Src/main.c    ****   MX_USB_DEVICE_Init();
 962              		.loc 1 378 3 view .LVU269
 963 0024 FFF7FEFF 		bl	MX_TIM1_Init
 964              	.LVL53:
 379:Src/main.c    ****   MX_TIM2_Init();
 965              		.loc 1 379 3 view .LVU270
 966 0028 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 967              	.LVL54:
 380:Src/main.c    ****   MX_TIM3_Init();
 968              		.loc 1 380 3 view .LVU271
 969 002c FFF7FEFF 		bl	MX_TIM2_Init
 970              	.LVL55:
 381:Src/main.c    ****   MX_TIM4_Init();
 971              		.loc 1 381 3 view .LVU272
 972 0030 FFF7FEFF 		bl	MX_TIM3_Init
 973              	.LVL56:
 382:Src/main.c    ****   /* USER CODE BEGIN 2 */
 974              		.loc 1 382 3 view .LVU273
 975 0034 FFF7FEFF 		bl	MX_TIM4_Init
 976              	.LVL57:
 384:Src/main.c    **** 
 977              		.loc 1 384 3 view .LVU274
 978 0038 0722     		movs	r2, #7
 979 003a 4749     		ldr	r1, .L76+4
 980 003c 4748     		ldr	r0, .L76+8
 981 003e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 982              	.LVL58:
ARM GAS  /tmp/ccXVsCtc.s 			page 33


 386:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 983              		.loc 1 386 3 view .LVU275
 984 0042 474D     		ldr	r5, .L76+12
 985 0044 2146     		mov	r1, r4
 986 0046 2846     		mov	r0, r5
 987 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 988              	.LVL59:
 387:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 989              		.loc 1 387 3 view .LVU276
 990 004c 2146     		mov	r1, r4
 991 004e 2846     		mov	r0, r5
 992 0050 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 993              	.LVL60:
 388:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 994              		.loc 1 388 3 view .LVU277
 995 0054 0421     		movs	r1, #4
 996 0056 2846     		mov	r0, r5
 997 0058 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 998              	.LVL61:
 389:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 999              		.loc 1 389 3 view .LVU278
 1000 005c 0421     		movs	r1, #4
 1001 005e 2846     		mov	r0, r5
 1002 0060 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1003              	.LVL62:
 390:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 1004              		.loc 1 390 3 view .LVU279
 1005 0064 0821     		movs	r1, #8
 1006 0066 2846     		mov	r0, r5
 1007 0068 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1008              	.LVL63:
 391:Src/main.c    **** 
 1009              		.loc 1 391 3 view .LVU280
 1010 006c 0821     		movs	r1, #8
 1011 006e 2846     		mov	r0, r5
 1012 0070 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1013              	.LVL64:
 393:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim2, 0);
 1014              		.loc 1 393 3 view .LVU281
 1015 0074 3B4D     		ldr	r5, .L76+16
 1016 0076 2846     		mov	r0, r5
 1017 0078 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1018              	.LVL65:
 394:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 1019              		.loc 1 394 3 view .LVU282
 1020 007c 2B68     		ldr	r3, [r5]
 1021 007e 5C62     		str	r4, [r3, #36]
 395:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim3, 0);
 1022              		.loc 1 395 3 view .LVU283
 1023 0080 394D     		ldr	r5, .L76+20
 1024 0082 2846     		mov	r0, r5
 1025 0084 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1026              	.LVL66:
 396:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim4);
 1027              		.loc 1 396 3 view .LVU284
 1028 0088 2B68     		ldr	r3, [r5]
 1029 008a 5C62     		str	r4, [r3, #36]
ARM GAS  /tmp/ccXVsCtc.s 			page 34


 397:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim4, 0);
 1030              		.loc 1 397 3 view .LVU285
 1031 008c 374D     		ldr	r5, .L76+24
 1032 008e 2846     		mov	r0, r5
 1033 0090 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1034              	.LVL67:
 398:Src/main.c    **** 
 1035              		.loc 1 398 3 view .LVU286
 1036 0094 2B68     		ldr	r3, [r5]
 1037 0096 5C62     		str	r4, [r3, #36]
 400:Src/main.c    ****   TIM1->CCER = 0x0000;
 1038              		.loc 1 400 3 view .LVU287
 1039 0098 6420     		movs	r0, #100
 1040 009a FFF7FEFF 		bl	HAL_Delay
 1041              	.LVL68:
 401:Src/main.c    ****   previousTime2 = HAL_GetTick();
 1042              		.loc 1 401 3 view .LVU288
 401:Src/main.c    ****   previousTime2 = HAL_GetTick();
 1043              		.loc 1 401 14 is_stmt 0 view .LVU289
 1044 009e 344B     		ldr	r3, .L76+28
 1045 00a0 1C62     		str	r4, [r3, #32]
 402:Src/main.c    ****   previousTime3 = HAL_GetTick();
 1046              		.loc 1 402 3 is_stmt 1 view .LVU290
 402:Src/main.c    ****   previousTime3 = HAL_GetTick();
 1047              		.loc 1 402 19 is_stmt 0 view .LVU291
 1048 00a2 FFF7FEFF 		bl	HAL_GetTick
 1049              	.LVL69:
 402:Src/main.c    ****   previousTime3 = HAL_GetTick();
 1050              		.loc 1 402 17 discriminator 1 view .LVU292
 1051 00a6 334B     		ldr	r3, .L76+32
 1052 00a8 1860     		str	r0, [r3]
 403:Src/main.c    **** 
 1053              		.loc 1 403 3 is_stmt 1 view .LVU293
 403:Src/main.c    **** 
 1054              		.loc 1 403 19 is_stmt 0 view .LVU294
 1055 00aa FFF7FEFF 		bl	HAL_GetTick
 1056              	.LVL70:
 403:Src/main.c    **** 
 1057              		.loc 1 403 17 discriminator 1 view .LVU295
 1058 00ae 324B     		ldr	r3, .L76+36
 1059 00b0 1860     		str	r0, [r3]
 1060 00b2 99E0     		b	.L59
 1061              	.L74:
 1062              	.LBB11:
 438:Src/main.c    ****       uint16_t t = difference_two_coummutation_time_filtered;
 1063              		.loc 1 438 7 is_stmt 1 view .LVU296
 438:Src/main.c    ****       uint16_t t = difference_two_coummutation_time_filtered;
 1064              		.loc 1 438 16 is_stmt 0 view .LVU297
 1065 00b4 314B     		ldr	r3, .L76+40
 1066 00b6 1D88     		ldrh	r5, [r3]
 1067 00b8 ADB2     		uxth	r5, r5
 1068              	.LVL71:
 439:Src/main.c    ****       LOG_VAR(rpm);
 1069              		.loc 1 439 7 is_stmt 1 view .LVU298
 439:Src/main.c    ****       LOG_VAR(rpm);
 1070              		.loc 1 439 16 is_stmt 0 view .LVU299
 1071 00ba 314B     		ldr	r3, .L76+44
ARM GAS  /tmp/ccXVsCtc.s 			page 35


 1072 00bc 1C88     		ldrh	r4, [r3]
 1073 00be A4B2     		uxth	r4, r4
 1074              	.LVL72:
 440:Src/main.c    ****       LOG_VAR(k);
 1075              		.loc 1 440 7 is_stmt 1 view .LVU300
 1076 00c0 304B     		ldr	r3, .L76+48
 1077 00c2 1968     		ldr	r1, [r3]
 1078 00c4 3048     		ldr	r0, .L76+52
 1079 00c6 FFF7FEFF 		bl	log_variable
 1080              	.LVL73:
 441:Src/main.c    ****       LOG_VAR(t);
 1081              		.loc 1 441 7 view .LVU301
 1082 00ca 2946     		mov	r1, r5
 1083 00cc 2F48     		ldr	r0, .L76+56
 1084 00ce FFF7FEFF 		bl	log_variable
 1085              	.LVL74:
 442:Src/main.c    ****       LOG_POST();
 1086              		.loc 1 442 7 view .LVU302
 1087 00d2 2146     		mov	r1, r4
 1088 00d4 2E48     		ldr	r0, .L76+60
 1089 00d6 FFF7FEFF 		bl	log_variable
 1090              	.LVL75:
 443:Src/main.c    ****       previousTime3 = HAL_GetTick();
 1091              		.loc 1 443 7 view .LVU303
 1092 00da FFF7FEFF 		bl	LOG_POST
 1093              	.LVL76:
 444:Src/main.c    ****     }
 1094              		.loc 1 444 7 view .LVU304
 444:Src/main.c    ****     }
 1095              		.loc 1 444 23 is_stmt 0 view .LVU305
 1096 00de FFF7FEFF 		bl	HAL_GetTick
 1097              	.LVL77:
 444:Src/main.c    ****     }
 1098              		.loc 1 444 21 discriminator 1 view .LVU306
 1099 00e2 254B     		ldr	r3, .L76+36
 1100 00e4 1860     		str	r0, [r3]
 1101 00e6 C2E0     		b	.L61
 1102              	.LVL78:
 1103              	.L75:
 444:Src/main.c    ****     }
 1104              		.loc 1 444 21 discriminator 1 view .LVU307
 1105              	.LBE11:
 458:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 1106              		.loc 1 458 7 is_stmt 1 view .LVU308
 1107 00e8 1D4B     		ldr	r3, .L76+12
 1108 00ea 1A68     		ldr	r2, [r3]
 1109 00ec 0023     		movs	r3, #0
 1110 00ee D363     		str	r3, [r2, #60]
 459:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
 1111              		.loc 1 459 7 view .LVU309
 1112 00f0 9363     		str	r3, [r2, #56]
 460:Src/main.c    ****       TIM1->CCER = 0x0000;
 1113              		.loc 1 460 7 view .LVU310
 1114 00f2 5363     		str	r3, [r2, #52]
 461:Src/main.c    ****       // rpm = get_rpm(-1);
 1115              		.loc 1 461 7 view .LVU311
 461:Src/main.c    ****       // rpm = get_rpm(-1);
ARM GAS  /tmp/ccXVsCtc.s 			page 36


 1116              		.loc 1 461 18 is_stmt 0 view .LVU312
 1117 00f4 1E4A     		ldr	r2, .L76+28
 1118 00f6 1362     		str	r3, [r2, #32]
 463:Src/main.c    ****     }
 1119              		.loc 1 463 7 is_stmt 1 view .LVU313
 463:Src/main.c    ****     }
 1120              		.loc 1 463 23 is_stmt 0 view .LVU314
 1121 00f8 FFF7FEFF 		bl	HAL_GetTick
 1122              	.LVL79:
 463:Src/main.c    ****     }
 1123              		.loc 1 463 21 discriminator 1 view .LVU315
 1124 00fc 1D4B     		ldr	r3, .L76+32
 1125 00fe 1860     		str	r0, [r3]
 1126 0100 C3E0     		b	.L62
 1127              	.L64:
 495:Src/main.c    **** 
 1128              		.loc 1 495 9 is_stmt 1 view .LVU316
 495:Src/main.c    **** 
 1129              		.loc 1 495 22 is_stmt 0 view .LVU317
 1130 0102 244B     		ldr	r3, .L76+64
 1131 0104 1888     		ldrh	r0, [r3]
 1132 0106 244B     		ldr	r3, .L76+68
 1133 0108 1B88     		ldrh	r3, [r3]
 1134 010a 0093     		str	r3, [sp]
 1135 010c 0023     		movs	r3, #0
 1136 010e 4FF46162 		mov	r2, #3600
 1137 0112 4FF42F71 		mov	r1, #700
 1138 0116 80B2     		uxth	r0, r0
 1139 0118 FFF7FEFF 		bl	map
 1140              	.LVL80:
 495:Src/main.c    **** 
 1141              		.loc 1 495 20 discriminator 1 view .LVU318
 1142 011c 1F4B     		ldr	r3, .L76+72
 1143 011e 1880     		strh	r0, [r3]	@ movhi
 1144 0120 D7E0     		b	.L65
 1145              	.L67:
 507:Src/main.c    ****         }
 1146              		.loc 1 507 11 is_stmt 1 view .LVU319
 507:Src/main.c    ****         }
 1147              		.loc 1 507 21 is_stmt 0 view .LVU320
 1148 0122 1F4A     		ldr	r2, .L76+76
 1149 0124 1360     		str	r3, [r2]
 1150 0126 E9E0     		b	.L68
 1151              	.L66:
 513:Src/main.c    ****         {
 1152              		.loc 1 513 9 is_stmt 1 view .LVU321
 513:Src/main.c    ****         {
 1153              		.loc 1 513 23 is_stmt 0 view .LVU322
 1154 0128 1E4B     		ldr	r3, .L76+80
 1155 012a 1B88     		ldrh	r3, [r3]
 1156 012c 1C4A     		ldr	r2, .L76+76
 1157 012e 1268     		ldr	r2, [r2]
 513:Src/main.c    ****         {
 1158              		.loc 1 513 12 view .LVU323
 1159 0130 9342     		cmp	r3, r2
 1160 0132 02D9     		bls	.L69
 515:Src/main.c    ****         }
ARM GAS  /tmp/ccXVsCtc.s 			page 37


 1161              		.loc 1 515 11 is_stmt 1 view .LVU324
 515:Src/main.c    ****         }
 1162              		.loc 1 515 21 is_stmt 0 view .LVU325
 1163 0134 1A4A     		ldr	r2, .L76+76
 1164 0136 1360     		str	r3, [r2]
 1165 0138 E0E0     		b	.L68
 1166              	.L69:
 517:Src/main.c    ****         {
 1167              		.loc 1 517 14 is_stmt 1 view .LVU326
 517:Src/main.c    ****         {
 1168              		.loc 1 517 28 is_stmt 0 view .LVU327
 1169 013a 1B4B     		ldr	r3, .L76+84
 1170 013c 1A88     		ldrh	r2, [r3]
 1171 013e 184B     		ldr	r3, .L76+76
 1172 0140 1B68     		ldr	r3, [r3]
 517:Src/main.c    ****         {
 1173              		.loc 1 517 17 view .LVU328
 1174 0142 9A42     		cmp	r2, r3
 1175 0144 40F2DA80 		bls	.L68
 519:Src/main.c    ****         }
 1176              		.loc 1 519 11 is_stmt 1 view .LVU329
 519:Src/main.c    ****         }
 1177              		.loc 1 519 21 is_stmt 0 view .LVU330
 1178 0148 154A     		ldr	r2, .L76+76
 1179 014a 1368     		ldr	r3, [r2]
 1180 014c 0133     		adds	r3, r3, #1
 1181 014e 1360     		str	r3, [r2]
 1182 0150 D4E0     		b	.L68
 1183              	.L77:
 1184 0152 00BF     		.align	2
 1185              	.L76:
 1186 0154 00000000 		.word	oldValue
 1187 0158 00000000 		.word	adcBuffer
 1188 015c 00000000 		.word	hadc1
 1189 0160 00000000 		.word	htim1
 1190 0164 00000000 		.word	htim2
 1191 0168 00000000 		.word	htim3
 1192 016c 00000000 		.word	htim4
 1193 0170 002C0140 		.word	1073818624
 1194 0174 00000000 		.word	previousTime2
 1195 0178 00000000 		.word	previousTime3
 1196 017c 00000000 		.word	difference_two_coummutation_time
 1197 0180 00000000 		.word	difference_two_coummutation_time_filtered
 1198 0184 00000000 		.word	rpm
 1199 0188 00000000 		.word	.LC0
 1200 018c 04000000 		.word	.LC1
 1201 0190 08000000 		.word	.LC2
 1202 0194 00000000 		.word	speedInAdc
 1203 0198 00000000 		.word	max_rpm_limit
 1204 019c 00000000 		.word	target_rpm
 1205 01a0 00000000 		.word	pwm_value
 1206 01a4 00000000 		.word	min_pwm_limit
 1207 01a8 00000000 		.word	max_pwm_limit
 1208              	.L63:
 539:Src/main.c    ****     {
 1209              		.loc 1 539 10 is_stmt 1 view .LVU331
 539:Src/main.c    ****     {
ARM GAS  /tmp/ccXVsCtc.s 			page 38


 1210              		.loc 1 539 14 is_stmt 0 view .LVU332
 1211 01ac 704B     		ldr	r3, .L78
 1212 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539:Src/main.c    ****     {
 1213              		.loc 1 539 13 view .LVU333
 1214 01b0 D3B1     		cbz	r3, .L59
 539:Src/main.c    ****     {
 1215              		.loc 1 539 42 discriminator 1 view .LVU334
 1216 01b2 704B     		ldr	r3, .L78+4
 1217 01b4 1B88     		ldrh	r3, [r3]
 1218 01b6 9BB2     		uxth	r3, r3
 539:Src/main.c    ****     {
 1219              		.loc 1 539 27 discriminator 1 view .LVU335
 1220 01b8 B3F5487F 		cmp	r3, #800
 1221 01bc 14D2     		bcs	.L59
 544:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 1222              		.loc 1 544 7 is_stmt 1 view .LVU336
 1223 01be 6E4B     		ldr	r3, .L78+8
 1224 01c0 1A68     		ldr	r2, [r3]
 1225 01c2 0023     		movs	r3, #0
 1226 01c4 5363     		str	r3, [r2, #52]
 545:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 1227              		.loc 1 545 7 view .LVU337
 1228 01c6 9363     		str	r3, [r2, #56]
 546:Src/main.c    ****       TIM1->CCER = 0x0000;
 1229              		.loc 1 546 7 view .LVU338
 1230 01c8 D363     		str	r3, [r2, #60]
 547:Src/main.c    ****       flagg = 1;
 1231              		.loc 1 547 7 view .LVU339
 547:Src/main.c    ****       flagg = 1;
 1232              		.loc 1 547 18 is_stmt 0 view .LVU340
 1233 01ca 6C4A     		ldr	r2, .L78+12
 1234 01cc 1362     		str	r3, [r2, #32]
 548:Src/main.c    ****       // step = 0;
 1235              		.loc 1 548 7 is_stmt 1 view .LVU341
 548:Src/main.c    ****       // step = 0;
 1236              		.loc 1 548 13 is_stmt 0 view .LVU342
 1237 01ce 0123     		movs	r3, #1
 1238 01d0 6B4A     		ldr	r2, .L78+16
 1239 01d2 1370     		strb	r3, [r2]
 550:Src/main.c    **** 
 1240              		.loc 1 550 7 is_stmt 1 view .LVU343
 550:Src/main.c    **** 
 1241              		.loc 1 550 23 is_stmt 0 view .LVU344
 1242 01d4 6B4A     		ldr	r2, .L78+20
 1243 01d6 1370     		strb	r3, [r2]
 559:Src/main.c    ****       {
 1244              		.loc 1 559 7 is_stmt 1 view .LVU345
 559:Src/main.c    ****       {
 1245              		.loc 1 559 11 is_stmt 0 view .LVU346
 1246 01d8 6B4B     		ldr	r3, .L78+24
 1247 01da 1B68     		ldr	r3, [r3]
 559:Src/main.c    ****       {
 1248              		.loc 1 559 10 view .LVU347
 1249 01dc 002B     		cmp	r3, #0
 1250 01de 40F0BE80 		bne	.L73
 1251              	.L71:
ARM GAS  /tmp/ccXVsCtc.s 			page 39


 564:Src/main.c    ****     }
 1252              		.loc 1 564 7 is_stmt 1 view .LVU348
 564:Src/main.c    ****     }
 1253              		.loc 1 564 18 is_stmt 0 view .LVU349
 1254 01e2 634B     		ldr	r3, .L78
 1255 01e4 0022     		movs	r2, #0
 1256 01e6 1A70     		strb	r2, [r3]
 1257              	.L59:
 409:Src/main.c    ****   {
 1258              		.loc 1 409 3 is_stmt 1 view .LVU350
 412:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1259              		.loc 1 412 5 view .LVU351
 412:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1260              		.loc 1 412 14 is_stmt 0 view .LVU352
 1261 01e8 684C     		ldr	r4, .L78+28
 1262 01ea 0121     		movs	r1, #1
 1263 01ec 2046     		mov	r0, r4
 1264 01ee FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1265              	.LVL81:
 412:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1266              		.loc 1 412 14 discriminator 1 view .LVU353
 1267 01f2 0038     		subs	r0, r0, #0
 1268 01f4 18BF     		it	ne
 1269 01f6 0120     		movne	r0, #1
 412:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1270              		.loc 1 412 12 discriminator 1 view .LVU354
 1271 01f8 654B     		ldr	r3, .L78+32
 1272 01fa 1870     		strb	r0, [r3]
 413:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1273              		.loc 1 413 5 is_stmt 1 view .LVU355
 413:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1274              		.loc 1 413 14 is_stmt 0 view .LVU356
 1275 01fc 0221     		movs	r1, #2
 1276 01fe 2046     		mov	r0, r4
 1277 0200 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1278              	.LVL82:
 413:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1279              		.loc 1 413 14 discriminator 1 view .LVU357
 1280 0204 0038     		subs	r0, r0, #0
 1281 0206 18BF     		it	ne
 1282 0208 0120     		movne	r0, #1
 413:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1283              		.loc 1 413 12 discriminator 1 view .LVU358
 1284 020a 624B     		ldr	r3, .L78+36
 1285 020c 1870     		strb	r0, [r3]
 414:Src/main.c    ****     if (!run_status)
 1286              		.loc 1 414 5 is_stmt 1 view .LVU359
 414:Src/main.c    ****     if (!run_status)
 1287              		.loc 1 414 14 is_stmt 0 view .LVU360
 1288 020e 0421     		movs	r1, #4
 1289 0210 2046     		mov	r0, r4
 1290 0212 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1291              	.LVL83:
 414:Src/main.c    ****     if (!run_status)
 1292              		.loc 1 414 14 discriminator 1 view .LVU361
 1293 0216 0038     		subs	r0, r0, #0
 1294 0218 18BF     		it	ne
ARM GAS  /tmp/ccXVsCtc.s 			page 40


 1295 021a 0120     		movne	r0, #1
 414:Src/main.c    ****     if (!run_status)
 1296              		.loc 1 414 12 discriminator 1 view .LVU362
 1297 021c 5E4B     		ldr	r3, .L78+40
 1298 021e 1870     		strb	r0, [r3]
 415:Src/main.c    ****     {
 1299              		.loc 1 415 5 is_stmt 1 view .LVU363
 415:Src/main.c    ****     {
 1300              		.loc 1 415 9 is_stmt 0 view .LVU364
 1301 0220 534B     		ldr	r3, .L78
 1302 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 415:Src/main.c    ****     {
 1303              		.loc 1 415 8 view .LVU365
 1304 0224 C3B9     		cbnz	r3, .L60
 417:Src/main.c    ****     }
 1305              		.loc 1 417 7 is_stmt 1 view .LVU366
 417:Src/main.c    ****     }
 1306              		.loc 1 417 25 is_stmt 0 view .LVU367
 1307 0226 5D4B     		ldr	r3, .L78+44
 1308 0228 1888     		ldrh	r0, [r3]
 1309 022a 80B2     		uxth	r0, r0
 1310 022c FFF7FEFF 		bl	__aeabi_i2d
 1311              	.LVL84:
 1312 0230 0022     		movs	r2, #0
 1313 0232 5B4B     		ldr	r3, .L78+48
 1314 0234 FFF7FEFF 		bl	__aeabi_dmul
 1315              	.LVL85:
 1316 0238 0446     		mov	r4, r0
 1317 023a 0D46     		mov	r5, r1
 417:Src/main.c    ****     }
 1318              		.loc 1 417 41 view .LVU368
 1319 023c 594B     		ldr	r3, .L78+52
 1320 023e 1888     		ldrh	r0, [r3]
 1321 0240 FFF7FEFF 		bl	__aeabi_i2d
 1322              	.LVL86:
 1323 0244 0246     		mov	r2, r0
 1324 0246 0B46     		mov	r3, r1
 1325 0248 2046     		mov	r0, r4
 1326 024a 2946     		mov	r1, r5
 1327 024c FFF7FEFF 		bl	__aeabi_ddiv
 1328              	.LVL87:
 417:Src/main.c    ****     }
 1329              		.loc 1 417 17 view .LVU369
 1330 0250 FFF7FEFF 		bl	__aeabi_d2uiz
 1331              	.LVL88:
 1332 0254 544B     		ldr	r3, .L78+56
 1333 0256 1860     		str	r0, [r3]
 1334              	.L60:
 421:Src/main.c    **** 
 1335              		.loc 1 421 5 is_stmt 1 view .LVU370
 421:Src/main.c    **** 
 1336              		.loc 1 421 13 is_stmt 0 view .LVU371
 1337 0258 544B     		ldr	r3, .L78+60
 1338 025a 0022     		movs	r2, #0
 1339 025c 1A80     		strh	r2, [r3]	@ movhi
 426:Src/main.c    ****     {
 1340              		.loc 1 426 5 is_stmt 1 view .LVU372
ARM GAS  /tmp/ccXVsCtc.s 			page 41


 426:Src/main.c    ****     {
 1341              		.loc 1 426 9 is_stmt 0 view .LVU373
 1342 025e FFF7FEFF 		bl	HAL_GetTick
 1343              	.LVL89:
 426:Src/main.c    ****     {
 1344              		.loc 1 426 23 discriminator 1 view .LVU374
 1345 0262 534B     		ldr	r3, .L78+64
 1346 0264 1B68     		ldr	r3, [r3]
 1347 0266 C01A     		subs	r0, r0, r3
 426:Src/main.c    ****     {
 1348              		.loc 1 426 8 discriminator 1 view .LVU375
 1349 0268 1428     		cmp	r0, #20
 1350 026a 3FF623AF 		bhi	.L74
 1351              	.L61:
 456:Src/main.c    ****     {
 1352              		.loc 1 456 5 is_stmt 1 view .LVU376
 456:Src/main.c    ****     {
 1353              		.loc 1 456 9 is_stmt 0 view .LVU377
 1354 026e FFF7FEFF 		bl	HAL_GetTick
 1355              	.LVL90:
 456:Src/main.c    ****     {
 1356              		.loc 1 456 23 discriminator 1 view .LVU378
 1357 0272 504B     		ldr	r3, .L78+68
 1358 0274 1B68     		ldr	r3, [r3]
 1359 0276 C01A     		subs	r0, r0, r3
 456:Src/main.c    ****     {
 1360              		.loc 1 456 8 discriminator 1 view .LVU379
 1361 0278 40F2DC53 		movw	r3, #1500
 1362 027c 9842     		cmp	r0, r3
 1363 027e 04D9     		bls	.L62
 456:Src/main.c    ****     {
 1364              		.loc 1 456 46 discriminator 1 view .LVU380
 1365 0280 3B4B     		ldr	r3, .L78
 1366 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0284 002B     		cmp	r3, #0
 1368 0286 7FF42FAF 		bne	.L75
 1369              	.L62:
 476:Src/main.c    ****     {
 1370              		.loc 1 476 5 is_stmt 1 view .LVU381
 476:Src/main.c    ****     {
 1371              		.loc 1 476 20 is_stmt 0 view .LVU382
 1372 028a 3A4B     		ldr	r3, .L78+4
 1373 028c 1B88     		ldrh	r3, [r3]
 1374 028e 9BB2     		uxth	r3, r3
 476:Src/main.c    ****     {
 1375              		.loc 1 476 8 view .LVU383
 1376 0290 B3F5617F 		cmp	r3, #900
 1377 0294 8AD3     		bcc	.L63
 489:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 1378              		.loc 1 489 7 is_stmt 1 view .LVU384
 489:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 1379              		.loc 1 489 36 is_stmt 0 view .LVU385
 1380 0296 3C4B     		ldr	r3, .L78+24
 1381 0298 0122     		movs	r2, #1
 1382 029a 1A60     		str	r2, [r3]
 490:Src/main.c    **** 
 1383              		.loc 1 490 7 is_stmt 1 view .LVU386
ARM GAS  /tmp/ccXVsCtc.s 			page 42


 490:Src/main.c    **** 
 1384              		.loc 1 490 14 is_stmt 0 view .LVU387
 1385 029c 2021     		movs	r1, #32
 1386 029e 4648     		ldr	r0, .L78+72
 1387 02a0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1388              	.LVL91:
 490:Src/main.c    **** 
 1389              		.loc 1 490 14 discriminator 1 view .LVU388
 1390 02a4 0028     		cmp	r0, #0
 1391 02a6 14BF     		ite	ne
 1392 02a8 0122     		movne	r2, #1
 1393 02aa 0022     		moveq	r2, #0
 490:Src/main.c    **** 
 1394              		.loc 1 490 12 discriminator 1 view .LVU389
 1395 02ac 434B     		ldr	r3, .L78+76
 1396 02ae 1A70     		strb	r2, [r3]
 492:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 1397              		.loc 1 492 7 is_stmt 1 view .LVU390
 492:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 1398              		.loc 1 492 10 is_stmt 0 view .LVU391
 1399 02b0 7FF427AF 		bne	.L64
 493:Src/main.c    ****       else
 1400              		.loc 1 493 9 is_stmt 1 view .LVU392
 493:Src/main.c    ****       else
 1401              		.loc 1 493 22 is_stmt 0 view .LVU393
 1402 02b4 2F4B     		ldr	r3, .L78+4
 1403 02b6 1888     		ldrh	r0, [r3]
 1404 02b8 414B     		ldr	r3, .L78+80
 1405 02ba 1B88     		ldrh	r3, [r3]
 1406 02bc 0093     		str	r3, [sp]
 1407 02be 0023     		movs	r3, #0
 1408 02c0 4FF46162 		mov	r2, #3600
 1409 02c4 4FF42F71 		mov	r1, #700
 1410 02c8 80B2     		uxth	r0, r0
 1411 02ca FFF7FEFF 		bl	map
 1412              	.LVL92:
 493:Src/main.c    ****       else
 1413              		.loc 1 493 20 discriminator 1 view .LVU394
 1414 02ce 3D4B     		ldr	r3, .L78+84
 1415 02d0 1880     		strh	r0, [r3]	@ movhi
 1416              	.L65:
 497:Src/main.c    **** 
 1417              		.loc 1 497 7 is_stmt 1 view .LVU395
 1418 02d2 0120     		movs	r0, #1
 1419 02d4 FFF7FEFF 		bl	HAL_Delay
 1420              	.LVL93:
 499:Src/main.c    ****       {
 1421              		.loc 1 499 7 view .LVU396
 499:Src/main.c    ****       {
 1422              		.loc 1 499 15 is_stmt 0 view .LVU397
 1423 02d8 3A4B     		ldr	r3, .L78+84
 1424 02da 1A88     		ldrh	r2, [r3]
 1425 02dc 3A4B     		ldr	r3, .L78+88
 1426 02de 1B68     		ldr	r3, [r3]
 499:Src/main.c    ****       {
 1427              		.loc 1 499 10 view .LVU398
 1428 02e0 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccXVsCtc.s 			page 43


 1429 02e2 BFF421AF 		bcs	.L66
 501:Src/main.c    ****         {
 1430              		.loc 1 501 9 is_stmt 1 view .LVU399
 501:Src/main.c    ****         {
 1431              		.loc 1 501 23 is_stmt 0 view .LVU400
 1432 02e6 394B     		ldr	r3, .L78+92
 1433 02e8 1B88     		ldrh	r3, [r3]
 1434 02ea 2F4A     		ldr	r2, .L78+56
 1435 02ec 1268     		ldr	r2, [r2]
 501:Src/main.c    ****         {
 1436              		.loc 1 501 12 view .LVU401
 1437 02ee 9342     		cmp	r3, r2
 1438 02f0 BFF417AF 		bcs	.L67
 503:Src/main.c    ****         }
 1439              		.loc 1 503 11 is_stmt 1 view .LVU402
 503:Src/main.c    ****         }
 1440              		.loc 1 503 21 is_stmt 0 view .LVU403
 1441 02f4 2C4A     		ldr	r2, .L78+56
 1442 02f6 1368     		ldr	r3, [r2]
 1443 02f8 013B     		subs	r3, r3, #1
 1444 02fa 1360     		str	r3, [r2]
 1445              	.L68:
 523:Src/main.c    ****       {
 1446              		.loc 1 523 7 is_stmt 1 view .LVU404
 523:Src/main.c    ****       {
 1447              		.loc 1 523 11 is_stmt 0 view .LVU405
 1448 02fc 1C4B     		ldr	r3, .L78
 1449 02fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523:Src/main.c    ****       {
 1450              		.loc 1 523 10 view .LVU406
 1451 0300 002B     		cmp	r3, #0
 1452 0302 7FF471AF 		bne	.L59
 525:Src/main.c    ****         // geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 1453              		.loc 1 525 9 is_stmt 1 view .LVU407
 525:Src/main.c    ****         // geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 1454              		.loc 1 525 20 is_stmt 0 view .LVU408
 1455 0306 0121     		movs	r1, #1
 1456 0308 194B     		ldr	r3, .L78
 1457 030a 1970     		strb	r1, [r3]
 527:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1458              		.loc 1 527 9 is_stmt 1 view .LVU409
 527:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1459              		.loc 1 527 18 is_stmt 0 view .LVU410
 1460 030c 1F4C     		ldr	r4, .L78+28
 1461 030e 2046     		mov	r0, r4
 1462 0310 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1463              	.LVL94:
 527:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1464              		.loc 1 527 18 discriminator 1 view .LVU411
 1465 0314 0038     		subs	r0, r0, #0
 1466 0316 18BF     		it	ne
 1467 0318 0120     		movne	r0, #1
 527:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1468              		.loc 1 527 16 discriminator 1 view .LVU412
 1469 031a 1D4B     		ldr	r3, .L78+32
 1470 031c 1870     		strb	r0, [r3]
 528:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
ARM GAS  /tmp/ccXVsCtc.s 			page 44


 1471              		.loc 1 528 9 is_stmt 1 view .LVU413
 528:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1472              		.loc 1 528 18 is_stmt 0 view .LVU414
 1473 031e 0221     		movs	r1, #2
 1474 0320 2046     		mov	r0, r4
 1475 0322 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1476              	.LVL95:
 528:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1477              		.loc 1 528 18 discriminator 1 view .LVU415
 1478 0326 0038     		subs	r0, r0, #0
 1479 0328 18BF     		it	ne
 1480 032a 0120     		movne	r0, #1
 528:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1481              		.loc 1 528 16 discriminator 1 view .LVU416
 1482 032c 194B     		ldr	r3, .L78+36
 1483 032e 1870     		strb	r0, [r3]
 529:Src/main.c    ****         if (motor_voltage < 150)
 1484              		.loc 1 529 9 is_stmt 1 view .LVU417
 529:Src/main.c    ****         if (motor_voltage < 150)
 1485              		.loc 1 529 18 is_stmt 0 view .LVU418
 1486 0330 0421     		movs	r1, #4
 1487 0332 2046     		mov	r0, r4
 1488 0334 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1489              	.LVL96:
 529:Src/main.c    ****         if (motor_voltage < 150)
 1490              		.loc 1 529 18 discriminator 1 view .LVU419
 1491 0338 0038     		subs	r0, r0, #0
 1492 033a 18BF     		it	ne
 1493 033c 0120     		movne	r0, #1
 529:Src/main.c    ****         if (motor_voltage < 150)
 1494              		.loc 1 529 16 discriminator 1 view .LVU420
 1495 033e 164B     		ldr	r3, .L78+40
 1496 0340 1870     		strb	r0, [r3]
 530:Src/main.c    ****         {
 1497              		.loc 1 530 9 is_stmt 1 view .LVU421
 530:Src/main.c    ****         {
 1498              		.loc 1 530 27 is_stmt 0 view .LVU422
 1499 0342 164B     		ldr	r3, .L78+44
 1500 0344 1B88     		ldrh	r3, [r3]
 1501 0346 9BB2     		uxth	r3, r3
 530:Src/main.c    ****         {
 1502              		.loc 1 530 12 view .LVU423
 1503 0348 952B     		cmp	r3, #149
 1504 034a 3FF64DAF 		bhi	.L59
 532:Src/main.c    ****           HAL_GPIO_EXTI_Callback(GPIO_PIN_2);
 1505              		.loc 1 532 11 is_stmt 1 view .LVU424
 532:Src/main.c    ****           HAL_GPIO_EXTI_Callback(GPIO_PIN_2);
 1506              		.loc 1 532 21 is_stmt 0 view .LVU425
 1507 034e 1F4B     		ldr	r3, .L78+92
 1508 0350 1A88     		ldrh	r2, [r3]
 1509 0352 154B     		ldr	r3, .L78+56
 1510 0354 1A60     		str	r2, [r3]
 533:Src/main.c    ****           // first_step(hall_A, hall_B, hall_C);
 1511              		.loc 1 533 11 is_stmt 1 view .LVU426
 1512 0356 0420     		movs	r0, #4
 1513 0358 FFF7FEFF 		bl	HAL_GPIO_EXTI_Callback
 1514              	.LVL97:
ARM GAS  /tmp/ccXVsCtc.s 			page 45


 1515 035c 44E7     		b	.L59
 1516              	.L73:
 561:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1517              		.loc 1 561 9 view .LVU427
 561:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1518              		.loc 1 561 36 is_stmt 0 view .LVU428
 1519 035e FFF7FEFF 		bl	HAL_GetTick
 1520              	.LVL98:
 561:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1521              		.loc 1 561 34 discriminator 1 view .LVU429
 1522 0362 1B4B     		ldr	r3, .L78+96
 1523 0364 1860     		str	r0, [r3]
 562:Src/main.c    ****       }
 1524              		.loc 1 562 9 is_stmt 1 view .LVU430
 562:Src/main.c    ****       }
 1525              		.loc 1 562 38 is_stmt 0 view .LVU431
 1526 0366 084B     		ldr	r3, .L78+24
 1527 0368 0022     		movs	r2, #0
 1528 036a 1A60     		str	r2, [r3]
 1529 036c 39E7     		b	.L71
 1530              	.L79:
 1531 036e 00BF     		.align	2
 1532              	.L78:
 1533 0370 00000000 		.word	run_status
 1534 0374 00000000 		.word	speedInAdc
 1535 0378 00000000 		.word	htim1
 1536 037c 002C0140 		.word	1073818624
 1537 0380 00000000 		.word	flagg
 1538 0384 00000000 		.word	first_step_flag
 1539 0388 00000000 		.word	timeForRotorStopStatusMsFlag
 1540 038c 00080140 		.word	1073809408
 1541 0390 00000000 		.word	hall_A
 1542 0394 00000000 		.word	hall_B
 1543 0398 00000000 		.word	hall_C
 1544 039c 00000000 		.word	motor_voltage
 1545 03a0 00002540 		.word	1076166656
 1546 03a4 00000000 		.word	battery_voltage
 1547 03a8 00000000 		.word	pwm_value
 1548 03ac 00000000 		.word	average
 1549 03b0 00000000 		.word	previousTime3
 1550 03b4 00000000 		.word	previousTime2
 1551 03b8 000C0140 		.word	1073810432
 1552 03bc 00000000 		.word	mode
 1553 03c0 00000000 		.word	max_rpm_limit
 1554 03c4 00000000 		.word	target_rpm
 1555 03c8 00000000 		.word	rpm
 1556 03cc 00000000 		.word	min_pwm_limit
 1557 03d0 00000000 		.word	timeForRotorStopStatusMs
 1558              		.cfi_endproc
 1559              	.LFE75:
 1561              		.section	.bss.filtered_value3.0,"aw",%nobits
 1562              		.align	1
 1565              	filtered_value3.0:
 1566 0000 0000     		.space	2
 1567              		.section	.bss.filtered_value2.1,"aw",%nobits
 1568              		.align	1
 1571              	filtered_value2.1:
ARM GAS  /tmp/ccXVsCtc.s 			page 46


 1572 0000 0000     		.space	2
 1573              		.section	.bss.filtered_value1.2,"aw",%nobits
 1574              		.align	1
 1577              	filtered_value1.2:
 1578 0000 0000     		.space	2
 1579              		.section	.bss.filtered_value0.3,"aw",%nobits
 1580              		.align	1
 1583              	filtered_value0.3:
 1584 0000 0000     		.space	2
 1585              		.global	dizi_index
 1586              		.section	.bss.dizi_index,"aw",%nobits
 1587              		.align	1
 1590              	dizi_index:
 1591 0000 0000     		.space	2
 1592              		.global	dizi
 1593              		.section	.bss.dizi,"aw",%nobits
 1594              		.align	2
 1597              	dizi:
 1598 0000 00000000 		.space	240
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1599              		.global	bemf_execute_flag
 1600              		.section	.data.bemf_execute_flag,"aw"
 1603              	bemf_execute_flag:
 1604 0000 01       		.byte	1
 1605              		.global	notr
 1606              		.section	.bss.notr,"aw",%nobits
 1607              		.align	1
 1610              	notr:
 1611 0000 0000     		.space	2
 1612              		.global	intersection_interval
 1613              		.section	.bss.intersection_interval,"aw",%nobits
 1614              		.align	1
 1617              	intersection_interval:
 1618 0000 0000     		.space	2
 1619              		.global	polarity_C_old
 1620              		.section	.bss.polarity_C_old,"aw",%nobits
 1623              	polarity_C_old:
 1624 0000 00       		.space	1
 1625              		.global	polarity_B_old
 1626              		.section	.bss.polarity_B_old,"aw",%nobits
 1629              	polarity_B_old:
 1630 0000 00       		.space	1
 1631              		.global	polarity_A_old
 1632              		.section	.bss.polarity_A_old,"aw",%nobits
 1635              	polarity_A_old:
 1636 0000 00       		.space	1
 1637              		.global	polarity_C
 1638              		.section	.bss.polarity_C,"aw",%nobits
 1641              	polarity_C:
 1642 0000 00       		.space	1
 1643              		.global	polarity_B
 1644              		.section	.bss.polarity_B,"aw",%nobits
 1647              	polarity_B:
 1648 0000 00       		.space	1
ARM GAS  /tmp/ccXVsCtc.s 			page 47


 1649              		.global	polarity_A
 1650              		.section	.bss.polarity_A,"aw",%nobits
 1653              	polarity_A:
 1654 0000 00       		.space	1
 1655              		.global	backEMF_mode
 1656              		.section	.bss.backEMF_mode,"aw",%nobits
 1659              	backEMF_mode:
 1660 0000 00       		.space	1
 1661              		.global	rpm_max_limit_flag
 1662              		.section	.data.rpm_max_limit_flag,"aw"
 1663              		.align	1
 1666              	rpm_max_limit_flag:
 1667 0000 0100     		.short	1
 1668              		.global	step_atlandi
 1669              		.section	.bss.step_atlandi,"aw",%nobits
 1672              	step_atlandi:
 1673 0000 00       		.space	1
 1674              		.global	interval_of_steps
 1675              		.section	.bss.interval_of_steps,"aw",%nobits
 1676              		.align	2
 1679              	interval_of_steps:
 1680 0000 00000000 		.space	2048
 1680      00000000 
 1680      00000000 
 1680      00000000 
 1680      00000000 
 1681              		.global	rpm_analysis
 1682              		.section	.bss.rpm_analysis,"aw",%nobits
 1683              		.align	2
 1686              	rpm_analysis:
 1687 0000 00000000 		.space	2048
 1687      00000000 
 1687      00000000 
 1687      00000000 
 1687      00000000 
 1688              		.global	array_counter
 1689              		.section	.bss.array_counter,"aw",%nobits
 1690              		.align	1
 1693              	array_counter:
 1694 0000 0000     		.space	2
 1695              		.global	analyze_data_1
 1696              		.section	.bss.analyze_data_1,"aw",%nobits
 1697              		.align	2
 1700              	analyze_data_1:
 1701 0000 00000000 		.space	960
 1701      00000000 
 1701      00000000 
 1701      00000000 
 1701      00000000 
 1702              		.global	previousTime4
 1703              		.section	.bss.previousTime4,"aw",%nobits
 1704              		.align	2
 1707              	previousTime4:
 1708 0000 00000000 		.space	4
 1709              		.global	motor_voltage
 1710              		.section	.bss.motor_voltage,"aw",%nobits
 1711              		.align	1
ARM GAS  /tmp/ccXVsCtc.s 			page 48


 1714              	motor_voltage:
 1715 0000 0000     		.space	2
 1716              		.global	battery_voltage
 1717              		.section	.bss.battery_voltage,"aw",%nobits
 1718              		.align	1
 1721              	battery_voltage:
 1722 0000 0000     		.space	2
 1723              		.global	flag12
 1724              		.section	.bss.flag12,"aw",%nobits
 1727              	flag12:
 1728 0000 00       		.space	1
 1729              		.global	max_pwm_limit
 1730              		.section	.data.max_pwm_limit,"aw"
 1731              		.align	1
 1734              	max_pwm_limit:
 1735 0000 2003     		.short	800
 1736              		.global	max_current_limit
 1737              		.section	.data.max_current_limit,"aw"
 1738              		.align	1
 1741              	max_current_limit:
 1742 0000 3408     		.short	2100
 1743              		.global	max_rpm_limit
 1744              		.section	.data.max_rpm_limit,"aw"
 1745              		.align	1
 1748              	max_rpm_limit:
 1749 0000 D007     		.short	2000
 1750              		.global	target_rpm
 1751              		.section	.bss.target_rpm,"aw",%nobits
 1752              		.align	1
 1755              	target_rpm:
 1756 0000 0000     		.space	2
 1757              		.global	phase_C
 1758              		.section	.bss.phase_C,"aw",%nobits
 1759              		.align	2
 1762              	phase_C:
 1763 0000 00000000 		.space	4
 1764              		.global	phase_B
 1765              		.section	.bss.phase_B,"aw",%nobits
 1766              		.align	2
 1769              	phase_B:
 1770 0000 00000000 		.space	4
 1771              		.global	phase_A
 1772              		.section	.bss.phase_A,"aw",%nobits
 1773              		.align	2
 1776              	phase_A:
 1777 0000 00000000 		.space	4
 1778              		.global	interval_of_runstatus
 1779              		.section	.bss.interval_of_runstatus,"aw",%nobits
 1780              		.align	2
 1783              	interval_of_runstatus:
 1784 0000 00000000 		.space	4
 1785              		.global	saved_pwm_rpm
 1786              		.section	.bss.saved_pwm_rpm,"aw",%nobits
 1787              		.align	2
 1790              	saved_pwm_rpm:
 1791 0000 00000000 		.space	60
 1791      00000000 
ARM GAS  /tmp/ccXVsCtc.s 			page 49


 1791      00000000 
 1791      00000000 
 1791      00000000 
 1792              		.global	isStoppedTimers
 1793              		.section	.bss.isStoppedTimers,"aw",%nobits
 1796              	isStoppedTimers:
 1797 0000 00       		.space	1
 1798              		.global	new_ARR
 1799              		.section	.bss.new_ARR,"aw",%nobits
 1800              		.align	2
 1803              	new_ARR:
 1804 0000 00000000 		.space	4
 1805              		.global	tim3sayi
 1806              		.section	.bss.tim3sayi,"aw",%nobits
 1807              		.align	2
 1810              	tim3sayi:
 1811 0000 00000000 		.space	4
 1812              		.global	average
 1813              		.section	.bss.average,"aw",%nobits
 1814              		.align	1
 1817              	average:
 1818 0000 0000     		.space	2
 1819              		.global	temporary_current_value
 1820              		.section	.bss.temporary_current_value,"aw",%nobits
 1821              		.align	1
 1824              	temporary_current_value:
 1825 0000 0000     		.space	2
 1826              		.global	maxCurrent
 1827              		.section	.bss.maxCurrent,"aw",%nobits
 1828              		.align	1
 1831              	maxCurrent:
 1832 0000 0000     		.space	2
 1833              		.global	minCurrent
 1834              		.section	.data.minCurrent,"aw"
 1835              		.align	1
 1838              	minCurrent:
 1839 0000 8813     		.short	5000
 1840              		.global	previousTime3
 1841              		.section	.bss.previousTime3,"aw",%nobits
 1842              		.align	2
 1845              	previousTime3:
 1846 0000 00000000 		.space	4
 1847              		.global	difference_two_coummutation_time_filtered
 1848              		.section	.data.difference_two_coummutation_time_filtered,"aw"
 1849              		.align	1
 1852              	difference_two_coummutation_time_filtered:
 1853 0000 0100     		.short	1
 1854              		.global	difference_two_coummutation_time
 1855              		.section	.data.difference_two_coummutation_time,"aw"
 1856              		.align	1
 1859              	difference_two_coummutation_time:
 1860 0000 0100     		.short	1
 1861              		.global	rpm
 1862              		.section	.bss.rpm,"aw",%nobits
 1863              		.align	2
 1866              	rpm:
 1867 0000 00000000 		.space	4
ARM GAS  /tmp/ccXVsCtc.s 			page 50


 1868              		.global	rpm_counter
 1869              		.section	.bss.rpm_counter,"aw",%nobits
 1870              		.align	2
 1873              	rpm_counter:
 1874 0000 00000000 		.space	4
 1875              		.global	timeForRotorStopStatusMsFlag
 1876              		.section	.bss.timeForRotorStopStatusMsFlag,"aw",%nobits
 1877              		.align	2
 1880              	timeForRotorStopStatusMsFlag:
 1881 0000 00000000 		.space	4
 1882              		.global	timeForRotorStopStatusMs
 1883              		.section	.bss.timeForRotorStopStatusMs,"aw",%nobits
 1884              		.align	2
 1887              	timeForRotorStopStatusMs:
 1888 0000 00000000 		.space	4
 1889              		.global	oncekiDegerler
 1890              		.section	.bss.oncekiDegerler,"aw",%nobits
 1891              		.align	2
 1894              	oncekiDegerler:
 1895 0000 000000   		.space	3
 1896              		.global	previousTime2
 1897              		.section	.bss.previousTime2,"aw",%nobits
 1898              		.align	2
 1901              	previousTime2:
 1902 0000 00000000 		.space	4
 1903              		.global	firstStepDelay
 1904              		.section	.data.firstStepDelay,"aw"
 1905              		.align	1
 1908              	firstStepDelay:
 1909 0000 C800     		.short	200
 1910              		.global	min_pwm_limit
 1911              		.section	.data.min_pwm_limit,"aw"
 1912              		.align	1
 1915              	min_pwm_limit:
 1916 0000 8200     		.short	130
 1917              		.global	pedal_value_mapped
 1918              		.section	.bss.pedal_value_mapped,"aw",%nobits
 1919              		.align	2
 1922              	pedal_value_mapped:
 1923 0000 00000000 		.space	4
 1924              		.global	pwm_value2
 1925              		.section	.bss.pwm_value2,"aw",%nobits
 1926              		.align	2
 1929              	pwm_value2:
 1930 0000 00000000 		.space	4
 1931              		.global	pwm_value
 1932              		.section	.bss.pwm_value,"aw",%nobits
 1933              		.align	2
 1936              	pwm_value:
 1937 0000 00000000 		.space	4
 1938              		.global	step
 1939              		.section	.bss.step,"aw",%nobits
 1940              		.align	2
 1943              	step:
 1944 0000 00000000 		.space	4
 1945              		.global	geri_vites
 1946              		.section	.data.geri_vites,"aw"
ARM GAS  /tmp/ccXVsCtc.s 			page 51


 1949              	geri_vites:
 1950 0000 01       		.byte	1
 1951              		.global	hall_C
 1952              		.section	.bss.hall_C,"aw",%nobits
 1955              	hall_C:
 1956 0000 00       		.space	1
 1957              		.global	hall_B
 1958              		.section	.bss.hall_B,"aw",%nobits
 1961              	hall_B:
 1962 0000 00       		.space	1
 1963              		.global	hall_A
 1964              		.section	.bss.hall_A,"aw",%nobits
 1967              	hall_A:
 1968 0000 00       		.space	1
 1969              		.global	run_status
 1970              		.section	.bss.run_status,"aw",%nobits
 1973              	run_status:
 1974 0000 00       		.space	1
 1975              		.global	filtered_current
 1976              		.section	.bss.filtered_current,"aw",%nobits
 1977              		.align	1
 1980              	filtered_current:
 1981 0000 0000     		.space	2
 1982              		.global	currentValue
 1983              		.section	.bss.currentValue,"aw",%nobits
 1984              		.align	1
 1987              	currentValue:
 1988 0000 0000     		.space	2
 1989              		.global	speedInAdc
 1990              		.section	.bss.speedInAdc,"aw",%nobits
 1991              		.align	1
 1994              	speedInAdc:
 1995 0000 0000     		.space	2
 1996              		.global	adcBuffer
 1997              		.section	.bss.adcBuffer,"aw",%nobits
 1998              		.align	2
 2001              	adcBuffer:
 2002 0000 00000000 		.space	28
 2002      00000000 
 2002      00000000 
 2002      00000000 
 2002      00000000 
 2003              		.global	flagg
 2004              		.section	.data.flagg,"aw"
 2007              	flagg:
 2008 0000 01       		.byte	1
 2009              		.global	first_step_flag
 2010              		.section	.data.first_step_flag,"aw"
 2013              	first_step_flag:
 2014 0000 01       		.byte	1
 2015              		.global	mode
 2016              		.section	.data.mode,"aw"
 2019              	mode:
 2020 0000 01       		.byte	1
 2021              		.global	oldValue
 2022              		.section	.bss.oldValue,"aw",%nobits
 2023              		.align	2
ARM GAS  /tmp/ccXVsCtc.s 			page 52


 2026              	oldValue:
 2027 0000 000000   		.space	3
 2028              		.text
 2029              	.Letext0:
 2030              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 2031              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2032              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2033              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2034              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2035              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2036              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2037              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2038              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2039              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2040              		.file 13 "Inc/main.h"
 2041              		.file 14 "Inc/adc.h"
 2042              		.file 15 "Inc/tim.h"
 2043              		.file 16 "Inc/Zeugma_h/debug_monitor.h"
 2044              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2045              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2046              		.file 19 "Inc/usb_device.h"
 2047              		.file 20 "Inc/dma.h"
 2048              		.file 21 "Inc/gpio.h"
 2049              		.file 22 "Inc/Zeugma_h/bemf.h"
 2050              		.file 23 "<built-in>"
ARM GAS  /tmp/ccXVsCtc.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccXVsCtc.s:19     .text.map:00000000 $t
     /tmp/ccXVsCtc.s:25     .text.map:00000000 map
     /tmp/ccXVsCtc.s:55     .text.ema_filter0:00000000 $t
     /tmp/ccXVsCtc.s:61     .text.ema_filter0:00000000 ema_filter0
     /tmp/ccXVsCtc.s:98     .text.ema_filter0:0000001c $d
     /tmp/ccXVsCtc.s:1583   .bss.filtered_value0.3:00000000 filtered_value0.3
     /tmp/ccXVsCtc.s:103    .text.ema_filter1:00000000 $t
     /tmp/ccXVsCtc.s:109    .text.ema_filter1:00000000 ema_filter1
     /tmp/ccXVsCtc.s:146    .text.ema_filter1:0000001c $d
     /tmp/ccXVsCtc.s:1577   .bss.filtered_value1.2:00000000 filtered_value1.2
     /tmp/ccXVsCtc.s:151    .text.ema_filter2:00000000 $t
     /tmp/ccXVsCtc.s:157    .text.ema_filter2:00000000 ema_filter2
     /tmp/ccXVsCtc.s:194    .text.ema_filter2:0000001c $d
     /tmp/ccXVsCtc.s:1571   .bss.filtered_value2.1:00000000 filtered_value2.1
     /tmp/ccXVsCtc.s:199    .text.ema_filter3:00000000 $t
     /tmp/ccXVsCtc.s:205    .text.ema_filter3:00000000 ema_filter3
     /tmp/ccXVsCtc.s:242    .text.ema_filter3:0000001c $d
     /tmp/ccXVsCtc.s:1565   .bss.filtered_value3.0:00000000 filtered_value3.0
     /tmp/ccXVsCtc.s:247    .text.filtreye_koy:00000000 $t
     /tmp/ccXVsCtc.s:253    .text.filtreye_koy:00000000 filtreye_koy
     /tmp/ccXVsCtc.s:351    .text.filtreye_koy:00000048 $d
     /tmp/ccXVsCtc.s:1590   .bss.dizi_index:00000000 dizi_index
     /tmp/ccXVsCtc.s:1597   .bss.dizi:00000000 dizi
     /tmp/ccXVsCtc.s:361    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/ccXVsCtc.s:367    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/ccXVsCtc.s:703    .text.HAL_ADC_ConvCpltCallback:00000198 $d
     /tmp/ccXVsCtc.s:2001   .bss.adcBuffer:00000000 adcBuffer
     /tmp/ccXVsCtc.s:1721   .bss.battery_voltage:00000000 battery_voltage
     /tmp/ccXVsCtc.s:1776   .bss.phase_A:00000000 phase_A
     /tmp/ccXVsCtc.s:1610   .bss.notr:00000000 notr
     /tmp/ccXVsCtc.s:1653   .bss.polarity_A:00000000 polarity_A
     /tmp/ccXVsCtc.s:1769   .bss.phase_B:00000000 phase_B
     /tmp/ccXVsCtc.s:1647   .bss.polarity_B:00000000 polarity_B
     /tmp/ccXVsCtc.s:1762   .bss.phase_C:00000000 phase_C
     /tmp/ccXVsCtc.s:1641   .bss.polarity_C:00000000 polarity_C
     /tmp/ccXVsCtc.s:1714   .bss.motor_voltage:00000000 motor_voltage
     /tmp/ccXVsCtc.s:1987   .bss.currentValue:00000000 currentValue
     /tmp/ccXVsCtc.s:1980   .bss.filtered_current:00000000 filtered_current
     /tmp/ccXVsCtc.s:1824   .bss.temporary_current_value:00000000 temporary_current_value
     /tmp/ccXVsCtc.s:1994   .bss.speedInAdc:00000000 speedInAdc
     /tmp/ccXVsCtc.s:1936   .bss.pwm_value:00000000 pwm_value
     /tmp/ccXVsCtc.s:1838   .data.minCurrent:00000000 minCurrent
     /tmp/ccXVsCtc.s:1831   .bss.maxCurrent:00000000 maxCurrent
     /tmp/ccXVsCtc.s:730    .text.Error_Handler:00000000 $t
     /tmp/ccXVsCtc.s:736    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccXVsCtc.s:768    .text.SystemClock_Config:00000000 $t
     /tmp/ccXVsCtc.s:774    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccXVsCtc.s:906    .rodata.main.str1.4:00000000 $d
     /tmp/ccXVsCtc.s:916    .text.main:00000000 $t
     /tmp/ccXVsCtc.s:922    .text.main:00000000 main
     /tmp/ccXVsCtc.s:1186   .text.main:00000154 $d
     /tmp/ccXVsCtc.s:2026   .bss.oldValue:00000000 oldValue
     /tmp/ccXVsCtc.s:1901   .bss.previousTime2:00000000 previousTime2
     /tmp/ccXVsCtc.s:1845   .bss.previousTime3:00000000 previousTime3
     /tmp/ccXVsCtc.s:1859   .data.difference_two_coummutation_time:00000000 difference_two_coummutation_time
ARM GAS  /tmp/ccXVsCtc.s 			page 54


     /tmp/ccXVsCtc.s:1852   .data.difference_two_coummutation_time_filtered:00000000 difference_two_coummutation_time_filtered
     /tmp/ccXVsCtc.s:1866   .bss.rpm:00000000 rpm
     /tmp/ccXVsCtc.s:1748   .data.max_rpm_limit:00000000 max_rpm_limit
     /tmp/ccXVsCtc.s:1755   .bss.target_rpm:00000000 target_rpm
     /tmp/ccXVsCtc.s:1915   .data.min_pwm_limit:00000000 min_pwm_limit
     /tmp/ccXVsCtc.s:1734   .data.max_pwm_limit:00000000 max_pwm_limit
     /tmp/ccXVsCtc.s:1211   .text.main:000001ac $t
     /tmp/ccXVsCtc.s:1533   .text.main:00000370 $d
     /tmp/ccXVsCtc.s:1973   .bss.run_status:00000000 run_status
     /tmp/ccXVsCtc.s:2007   .data.flagg:00000000 flagg
     /tmp/ccXVsCtc.s:2013   .data.first_step_flag:00000000 first_step_flag
     /tmp/ccXVsCtc.s:1880   .bss.timeForRotorStopStatusMsFlag:00000000 timeForRotorStopStatusMsFlag
     /tmp/ccXVsCtc.s:1967   .bss.hall_A:00000000 hall_A
     /tmp/ccXVsCtc.s:1961   .bss.hall_B:00000000 hall_B
     /tmp/ccXVsCtc.s:1955   .bss.hall_C:00000000 hall_C
     /tmp/ccXVsCtc.s:1817   .bss.average:00000000 average
     /tmp/ccXVsCtc.s:2019   .data.mode:00000000 mode
     /tmp/ccXVsCtc.s:1887   .bss.timeForRotorStopStatusMs:00000000 timeForRotorStopStatusMs
     /tmp/ccXVsCtc.s:1562   .bss.filtered_value3.0:00000000 $d
     /tmp/ccXVsCtc.s:1568   .bss.filtered_value2.1:00000000 $d
     /tmp/ccXVsCtc.s:1574   .bss.filtered_value1.2:00000000 $d
     /tmp/ccXVsCtc.s:1580   .bss.filtered_value0.3:00000000 $d
     /tmp/ccXVsCtc.s:1587   .bss.dizi_index:00000000 $d
     /tmp/ccXVsCtc.s:1594   .bss.dizi:00000000 $d
     /tmp/ccXVsCtc.s:1603   .data.bemf_execute_flag:00000000 bemf_execute_flag
     /tmp/ccXVsCtc.s:1607   .bss.notr:00000000 $d
     /tmp/ccXVsCtc.s:1617   .bss.intersection_interval:00000000 intersection_interval
     /tmp/ccXVsCtc.s:1614   .bss.intersection_interval:00000000 $d
     /tmp/ccXVsCtc.s:1623   .bss.polarity_C_old:00000000 polarity_C_old
     /tmp/ccXVsCtc.s:1624   .bss.polarity_C_old:00000000 $d
     /tmp/ccXVsCtc.s:1629   .bss.polarity_B_old:00000000 polarity_B_old
     /tmp/ccXVsCtc.s:1630   .bss.polarity_B_old:00000000 $d
     /tmp/ccXVsCtc.s:1635   .bss.polarity_A_old:00000000 polarity_A_old
     /tmp/ccXVsCtc.s:1636   .bss.polarity_A_old:00000000 $d
     /tmp/ccXVsCtc.s:1642   .bss.polarity_C:00000000 $d
     /tmp/ccXVsCtc.s:1648   .bss.polarity_B:00000000 $d
     /tmp/ccXVsCtc.s:1654   .bss.polarity_A:00000000 $d
     /tmp/ccXVsCtc.s:1659   .bss.backEMF_mode:00000000 backEMF_mode
     /tmp/ccXVsCtc.s:1660   .bss.backEMF_mode:00000000 $d
     /tmp/ccXVsCtc.s:1666   .data.rpm_max_limit_flag:00000000 rpm_max_limit_flag
     /tmp/ccXVsCtc.s:1663   .data.rpm_max_limit_flag:00000000 $d
     /tmp/ccXVsCtc.s:1672   .bss.step_atlandi:00000000 step_atlandi
     /tmp/ccXVsCtc.s:1673   .bss.step_atlandi:00000000 $d
     /tmp/ccXVsCtc.s:1679   .bss.interval_of_steps:00000000 interval_of_steps
     /tmp/ccXVsCtc.s:1676   .bss.interval_of_steps:00000000 $d
     /tmp/ccXVsCtc.s:1686   .bss.rpm_analysis:00000000 rpm_analysis
     /tmp/ccXVsCtc.s:1683   .bss.rpm_analysis:00000000 $d
     /tmp/ccXVsCtc.s:1693   .bss.array_counter:00000000 array_counter
     /tmp/ccXVsCtc.s:1690   .bss.array_counter:00000000 $d
     /tmp/ccXVsCtc.s:1700   .bss.analyze_data_1:00000000 analyze_data_1
     /tmp/ccXVsCtc.s:1697   .bss.analyze_data_1:00000000 $d
     /tmp/ccXVsCtc.s:1707   .bss.previousTime4:00000000 previousTime4
     /tmp/ccXVsCtc.s:1704   .bss.previousTime4:00000000 $d
     /tmp/ccXVsCtc.s:1711   .bss.motor_voltage:00000000 $d
     /tmp/ccXVsCtc.s:1718   .bss.battery_voltage:00000000 $d
     /tmp/ccXVsCtc.s:1727   .bss.flag12:00000000 flag12
     /tmp/ccXVsCtc.s:1728   .bss.flag12:00000000 $d
ARM GAS  /tmp/ccXVsCtc.s 			page 55


     /tmp/ccXVsCtc.s:1731   .data.max_pwm_limit:00000000 $d
     /tmp/ccXVsCtc.s:1741   .data.max_current_limit:00000000 max_current_limit
     /tmp/ccXVsCtc.s:1738   .data.max_current_limit:00000000 $d
     /tmp/ccXVsCtc.s:1745   .data.max_rpm_limit:00000000 $d
     /tmp/ccXVsCtc.s:1752   .bss.target_rpm:00000000 $d
     /tmp/ccXVsCtc.s:1759   .bss.phase_C:00000000 $d
     /tmp/ccXVsCtc.s:1766   .bss.phase_B:00000000 $d
     /tmp/ccXVsCtc.s:1773   .bss.phase_A:00000000 $d
     /tmp/ccXVsCtc.s:1783   .bss.interval_of_runstatus:00000000 interval_of_runstatus
     /tmp/ccXVsCtc.s:1780   .bss.interval_of_runstatus:00000000 $d
     /tmp/ccXVsCtc.s:1790   .bss.saved_pwm_rpm:00000000 saved_pwm_rpm
     /tmp/ccXVsCtc.s:1787   .bss.saved_pwm_rpm:00000000 $d
     /tmp/ccXVsCtc.s:1796   .bss.isStoppedTimers:00000000 isStoppedTimers
     /tmp/ccXVsCtc.s:1797   .bss.isStoppedTimers:00000000 $d
     /tmp/ccXVsCtc.s:1803   .bss.new_ARR:00000000 new_ARR
     /tmp/ccXVsCtc.s:1800   .bss.new_ARR:00000000 $d
     /tmp/ccXVsCtc.s:1810   .bss.tim3sayi:00000000 tim3sayi
     /tmp/ccXVsCtc.s:1807   .bss.tim3sayi:00000000 $d
     /tmp/ccXVsCtc.s:1814   .bss.average:00000000 $d
     /tmp/ccXVsCtc.s:1821   .bss.temporary_current_value:00000000 $d
     /tmp/ccXVsCtc.s:1828   .bss.maxCurrent:00000000 $d
     /tmp/ccXVsCtc.s:1835   .data.minCurrent:00000000 $d
     /tmp/ccXVsCtc.s:1842   .bss.previousTime3:00000000 $d
     /tmp/ccXVsCtc.s:1849   .data.difference_two_coummutation_time_filtered:00000000 $d
     /tmp/ccXVsCtc.s:1856   .data.difference_two_coummutation_time:00000000 $d
     /tmp/ccXVsCtc.s:1863   .bss.rpm:00000000 $d
     /tmp/ccXVsCtc.s:1873   .bss.rpm_counter:00000000 rpm_counter
     /tmp/ccXVsCtc.s:1870   .bss.rpm_counter:00000000 $d
     /tmp/ccXVsCtc.s:1877   .bss.timeForRotorStopStatusMsFlag:00000000 $d
     /tmp/ccXVsCtc.s:1884   .bss.timeForRotorStopStatusMs:00000000 $d
     /tmp/ccXVsCtc.s:1894   .bss.oncekiDegerler:00000000 oncekiDegerler
     /tmp/ccXVsCtc.s:1891   .bss.oncekiDegerler:00000000 $d
     /tmp/ccXVsCtc.s:1898   .bss.previousTime2:00000000 $d
     /tmp/ccXVsCtc.s:1908   .data.firstStepDelay:00000000 firstStepDelay
     /tmp/ccXVsCtc.s:1905   .data.firstStepDelay:00000000 $d
     /tmp/ccXVsCtc.s:1912   .data.min_pwm_limit:00000000 $d
     /tmp/ccXVsCtc.s:1922   .bss.pedal_value_mapped:00000000 pedal_value_mapped
     /tmp/ccXVsCtc.s:1919   .bss.pedal_value_mapped:00000000 $d
     /tmp/ccXVsCtc.s:1929   .bss.pwm_value2:00000000 pwm_value2
     /tmp/ccXVsCtc.s:1926   .bss.pwm_value2:00000000 $d
     /tmp/ccXVsCtc.s:1933   .bss.pwm_value:00000000 $d
     /tmp/ccXVsCtc.s:1943   .bss.step:00000000 step
     /tmp/ccXVsCtc.s:1940   .bss.step:00000000 $d
     /tmp/ccXVsCtc.s:1949   .data.geri_vites:00000000 geri_vites
     /tmp/ccXVsCtc.s:1956   .bss.hall_C:00000000 $d
     /tmp/ccXVsCtc.s:1962   .bss.hall_B:00000000 $d
     /tmp/ccXVsCtc.s:1968   .bss.hall_A:00000000 $d
     /tmp/ccXVsCtc.s:1974   .bss.run_status:00000000 $d
     /tmp/ccXVsCtc.s:1977   .bss.filtered_current:00000000 $d
     /tmp/ccXVsCtc.s:1984   .bss.currentValue:00000000 $d
     /tmp/ccXVsCtc.s:1991   .bss.speedInAdc:00000000 $d
     /tmp/ccXVsCtc.s:1998   .bss.adcBuffer:00000000 $d
     /tmp/ccXVsCtc.s:2023   .bss.oldValue:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
ARM GAS  /tmp/ccXVsCtc.s 			page 56


__aeabi_d2uiz
phaseControlBemf
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_i2d
__aeabi_ddiv
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_TIM1_Init
MX_USB_DEVICE_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
HAL_ADC_Start_DMA
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_TIM_Base_Start_IT
HAL_Delay
HAL_GetTick
log_variable
LOG_POST
hadc1
htim1
htim2
htim3
htim4
HAL_GPIO_ReadPin
HAL_GPIO_EXTI_Callback
