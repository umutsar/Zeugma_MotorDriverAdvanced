ARM GAS  /tmp/ccixHgFH.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.map,"ax",%progbits
  19              		.align	1
  20              		.global	map
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	map:
  26              	.LVL0:
  27              	.LFB68:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  **************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  **************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****  * in the root directory of this software component.
  14:Src/main.c    ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  **************************
  17:Src/main.c    ****  */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "adc.h"
  22:Src/main.c    **** #include "dma.h"
  23:Src/main.c    **** #include "tim.h"
  24:Src/main.c    **** #include "usb_device.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** #include "stdbool.h"
  30:Src/main.c    **** #include "debug_monitor.h"
  31:Src/main.c    **** #include "first_step.h"
ARM GAS  /tmp/ccixHgFH.s 			page 2


  32:Src/main.c    **** #include "rpm.h"
  33:Src/main.c    **** #include "steps.h"
  34:Src/main.c    **** #include "old_value_hall.h"
  35:Src/main.c    **** #include "bemf.h"
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END Includes */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PTD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PD */
  46:Src/main.c    **** #define voltageConversion_value 0.0396593777777778
  47:Src/main.c    **** #define currentConversionValue 0.00083008
  48:Src/main.c    **** 
  49:Src/main.c    **** #define ALPHA_SHIFT 4            // α = 1 / 2^ALPHA_SHIFT (örn: 3 → α = 1/8)
  50:Src/main.c    **** #define ALPHA (1 << ALPHA_SHIFT) // 2^ALPHA_SHIFT
  51:Src/main.c    **** /* USER CODE END PD */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  54:Src/main.c    **** /* USER CODE BEGIN PM */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PM */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PV */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** void SystemClock_Config(void);
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** volatile bool oldValue[3] = {0, 0, 0};
  74:Src/main.c    **** bool mode = 1;
  75:Src/main.c    **** volatile bool first_step_flag = 1;
  76:Src/main.c    **** volatile bool flagg = 1;
  77:Src/main.c    **** uint32_t adcbuffer[7] = {0};
  78:Src/main.c    **** volatile uint16_t speedInAdc = 0;
  79:Src/main.c    **** volatile uint16_t currentValue = 0;
  80:Src/main.c    **** volatile uint16_t filtered_current = 0;
  81:Src/main.c    **** bool run_status = false;
  82:Src/main.c    **** volatile bool hall_A = 0, hall_B = 0, hall_C = 0;
  83:Src/main.c    **** bool geri_vites = true;
  84:Src/main.c    **** volatile uint32_t step = 0;
  85:Src/main.c    **** volatile uint32_t pwm_value = 0;
  86:Src/main.c    **** volatile uint32_t pwm_value2 = 0;
  87:Src/main.c    **** 
  88:Src/main.c    **** uint32_t pedal_value_mapped = 0;
ARM GAS  /tmp/ccixHgFH.s 			page 3


  89:Src/main.c    **** uint16_t min_pwm_limit = 130;
  90:Src/main.c    **** volatile uint16_t firstStepDelay = 200;
  91:Src/main.c    **** volatile uint32_t previousTime2 = 0;
  92:Src/main.c    **** volatile uint8_t oncekiDegerler[3];
  93:Src/main.c    **** uint32_t timeForRotorStopStatusMs = 0;
  94:Src/main.c    **** uint32_t timeForRotorStopStatusMsFlag = 0;
  95:Src/main.c    **** 
  96:Src/main.c    **** volatile uint32_t rpm_counter = 0;
  97:Src/main.c    **** volatile uint32_t rpm;
  98:Src/main.c    **** volatile uint32_t difference_two_coummutation_time = 1;
  99:Src/main.c    **** uint32_t previousTime3 = 0;
 100:Src/main.c    **** 
 101:Src/main.c    **** uint16_t minCurrent = 5000;
 102:Src/main.c    **** uint16_t maxCurrent = 0;
 103:Src/main.c    **** uint16_t temporary_current_value = 0;
 104:Src/main.c    **** uint16_t average = 0;
 105:Src/main.c    **** uint32_t tim3sayi = 0;
 106:Src/main.c    **** uint32_t new_ARR = 0;
 107:Src/main.c    **** uint8_t isStoppedTimers = 0;
 108:Src/main.c    **** volatile uint16_t saved_pwm_rpm[30] = {0};
 109:Src/main.c    **** 
 110:Src/main.c    **** uint32_t interval_of_runstatus = 0;
 111:Src/main.c    **** 
 112:Src/main.c    **** volatile uint32_t phase_A;
 113:Src/main.c    **** volatile uint32_t phase_B;
 114:Src/main.c    **** volatile uint32_t phase_C;
 115:Src/main.c    **** 
 116:Src/main.c    **** uint16_t target_rpm = 0;
 117:Src/main.c    **** uint16_t max_rpm_limit = 3200;
 118:Src/main.c    **** uint16_t max_current_limit = 2100;
 119:Src/main.c    **** 
 120:Src/main.c    **** uint8_t flag12 = 0;
 121:Src/main.c    **** uint16_t battery_voltage = 0;
 122:Src/main.c    **** volatile uint16_t motor_voltage = 0;
 123:Src/main.c    **** 
 124:Src/main.c    **** uint32_t previousTime4 = 0;
 125:Src/main.c    **** 
 126:Src/main.c    **** uint16_t analyze_data_1[480] = {0};
 127:Src/main.c    **** uint16_t array_counter;
 128:Src/main.c    **** 
 129:Src/main.c    **** uint16_t rpm_analysis[1024] = {0};
 130:Src/main.c    **** 
 131:Src/main.c    **** uint16_t interval_of_steps[1024] = {0};
 132:Src/main.c    **** 
 133:Src/main.c    **** uint8_t step_atlandi = 0;
 134:Src/main.c    **** uint16_t rpm_max_limit_flag = 1;
 135:Src/main.c    **** uint8_t backEMF_mode = 0;
 136:Src/main.c    **** 
 137:Src/main.c    **** uint8_t polarity_A = 0;
 138:Src/main.c    **** uint8_t polarity_B = 0;
 139:Src/main.c    **** uint8_t polarity_C = 0;
 140:Src/main.c    **** 
 141:Src/main.c    **** uint8_t polarity_A_old = 0;
 142:Src/main.c    **** uint8_t polarity_B_old = 0;
 143:Src/main.c    **** uint8_t polarity_C_old = 0;
 144:Src/main.c    **** 
 145:Src/main.c    **** uint32_t intersection_interval = 0;
ARM GAS  /tmp/ccixHgFH.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    **** uint16_t notr = 0;
 148:Src/main.c    **** uint8_t bemf_execute_flag = 0;
 149:Src/main.c    **** 
 150:Src/main.c    **** // VARIABLE END
 151:Src/main.c    **** 
 152:Src/main.c    **** long map(long x, long in_min, long in_max, long out_min, long out_max)
 153:Src/main.c    **** {
  28              		.loc 1 153 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 154:Src/main.c    ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  33              		.loc 1 154 3 view .LVU1
  34              		.loc 1 154 13 is_stmt 0 view .LVU2
  35 0000 A0EB010C 		sub	ip, r0, r1
  36              		.loc 1 154 34 view .LVU3
  37 0004 0098     		ldr	r0, [sp]
  38              	.LVL1:
  39              		.loc 1 154 34 view .LVU4
  40 0006 C01A     		subs	r0, r0, r3
  41              		.loc 1 154 23 view .LVU5
  42 0008 00FB0CFC 		mul	ip, r0, ip
  43              		.loc 1 154 55 view .LVU6
  44 000c 521A     		subs	r2, r2, r1
  45              	.LVL2:
  46              		.loc 1 154 45 view .LVU7
  47 000e 9CFBF2FC 		sdiv	ip, ip, r2
 155:Src/main.c    **** }
  48              		.loc 1 155 1 view .LVU8
  49 0012 0CEB0300 		add	r0, ip, r3
  50 0016 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.ema_filter0,"ax",%progbits
  55              		.align	1
  56              		.global	ema_filter0
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	ema_filter0:
  62              	.LVL3:
  63              	.LFB69:
 156:Src/main.c    **** 
 157:Src/main.c    **** // void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 158:Src/main.c    **** // {
 159:Src/main.c    **** //   rpm = rpm_counter * 25;
 160:Src/main.c    **** //   rpm_counter = 0;
 161:Src/main.c    **** // }
 162:Src/main.c    **** 
 163:Src/main.c    **** // GPIO INTERRUPT HAS BEEN REMOVED FROM HERE
 164:Src/main.c    **** 
 165:Src/main.c    **** uint16_t ema_filter0(uint16_t new_value)
 166:Src/main.c    **** {
  64              		.loc 1 166 1 is_stmt 1 view -0
  65              		.cfi_startproc
ARM GAS  /tmp/ccixHgFH.s 			page 5


  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 167:Src/main.c    ****   static uint16_t filtered_value0 = 0;
  69              		.loc 1 167 3 view .LVU10
 168:Src/main.c    **** 
 169:Src/main.c    ****   if (filtered_value0 == 0)
  70              		.loc 1 169 3 view .LVU11
  71              		.loc 1 169 23 is_stmt 0 view .LVU12
  72 0000 064B     		ldr	r3, .L4
  73 0002 1B88     		ldrh	r3, [r3]
  74              		.loc 1 169 6 view .LVU13
  75 0004 0BB9     		cbnz	r3, .L3
 170:Src/main.c    ****     filtered_value0 = new_value;
  76              		.loc 1 170 5 is_stmt 1 view .LVU14
  77              		.loc 1 170 21 is_stmt 0 view .LVU15
  78 0006 054B     		ldr	r3, .L4
  79 0008 1880     		strh	r0, [r3]	@ movhi
  80              	.L3:
 171:Src/main.c    **** 
 172:Src/main.c    ****   filtered_value0 = filtered_value0 + ((new_value - filtered_value0) >> ALPHA_SHIFT);
  81              		.loc 1 172 3 is_stmt 1 view .LVU16
  82              		.loc 1 172 51 is_stmt 0 view .LVU17
  83 000a 044A     		ldr	r2, .L4
  84 000c 1388     		ldrh	r3, [r2]
  85 000e C01A     		subs	r0, r0, r3
  86              	.LVL4:
  87              		.loc 1 172 37 view .LVU18
  88 0010 03EB2010 		add	r0, r3, r0, asr #4
  89 0014 80B2     		uxth	r0, r0
  90              		.loc 1 172 19 view .LVU19
  91 0016 1080     		strh	r0, [r2]	@ movhi
 173:Src/main.c    **** 
 174:Src/main.c    ****   return filtered_value0;
  92              		.loc 1 174 3 is_stmt 1 view .LVU20
 175:Src/main.c    **** }
  93              		.loc 1 175 1 is_stmt 0 view .LVU21
  94 0018 7047     		bx	lr
  95              	.L5:
  96 001a 00BF     		.align	2
  97              	.L4:
  98 001c 00000000 		.word	filtered_value0.3
  99              		.cfi_endproc
 100              	.LFE69:
 102              		.section	.text.ema_filter1,"ax",%progbits
 103              		.align	1
 104              		.global	ema_filter1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	ema_filter1:
 110              	.LVL5:
 111              	.LFB70:
 176:Src/main.c    **** 
 177:Src/main.c    **** uint16_t ema_filter1(uint16_t new_value)
 178:Src/main.c    **** {
 112              		.loc 1 178 1 is_stmt 1 view -0
ARM GAS  /tmp/ccixHgFH.s 			page 6


 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 179:Src/main.c    ****   static uint16_t filtered_value1 = 0;
 117              		.loc 1 179 3 view .LVU23
 180:Src/main.c    **** 
 181:Src/main.c    ****   if (filtered_value1 == 0)
 118              		.loc 1 181 3 view .LVU24
 119              		.loc 1 181 23 is_stmt 0 view .LVU25
 120 0000 064B     		ldr	r3, .L8
 121 0002 1B88     		ldrh	r3, [r3]
 122              		.loc 1 181 6 view .LVU26
 123 0004 0BB9     		cbnz	r3, .L7
 182:Src/main.c    ****     filtered_value1 = new_value;
 124              		.loc 1 182 5 is_stmt 1 view .LVU27
 125              		.loc 1 182 21 is_stmt 0 view .LVU28
 126 0006 054B     		ldr	r3, .L8
 127 0008 1880     		strh	r0, [r3]	@ movhi
 128              	.L7:
 183:Src/main.c    **** 
 184:Src/main.c    ****   filtered_value1 = filtered_value1 + ((new_value - filtered_value1) >> ALPHA_SHIFT);
 129              		.loc 1 184 3 is_stmt 1 view .LVU29
 130              		.loc 1 184 51 is_stmt 0 view .LVU30
 131 000a 044A     		ldr	r2, .L8
 132 000c 1388     		ldrh	r3, [r2]
 133 000e C01A     		subs	r0, r0, r3
 134              	.LVL6:
 135              		.loc 1 184 37 view .LVU31
 136 0010 03EB2010 		add	r0, r3, r0, asr #4
 137 0014 80B2     		uxth	r0, r0
 138              		.loc 1 184 19 view .LVU32
 139 0016 1080     		strh	r0, [r2]	@ movhi
 185:Src/main.c    **** 
 186:Src/main.c    ****   return filtered_value1;
 140              		.loc 1 186 3 is_stmt 1 view .LVU33
 187:Src/main.c    **** }
 141              		.loc 1 187 1 is_stmt 0 view .LVU34
 142 0018 7047     		bx	lr
 143              	.L9:
 144 001a 00BF     		.align	2
 145              	.L8:
 146 001c 00000000 		.word	filtered_value1.2
 147              		.cfi_endproc
 148              	.LFE70:
 150              		.section	.text.ema_filter2,"ax",%progbits
 151              		.align	1
 152              		.global	ema_filter2
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	ema_filter2:
 158              	.LVL7:
 159              	.LFB71:
 188:Src/main.c    **** 
 189:Src/main.c    **** uint16_t ema_filter2(uint16_t new_value)
 190:Src/main.c    **** {
ARM GAS  /tmp/ccixHgFH.s 			page 7


 160              		.loc 1 190 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 191:Src/main.c    ****   static uint16_t filtered_value2 = 0;
 165              		.loc 1 191 3 view .LVU36
 192:Src/main.c    **** 
 193:Src/main.c    ****   if (filtered_value2 == 0)
 166              		.loc 1 193 3 view .LVU37
 167              		.loc 1 193 23 is_stmt 0 view .LVU38
 168 0000 064B     		ldr	r3, .L12
 169 0002 1B88     		ldrh	r3, [r3]
 170              		.loc 1 193 6 view .LVU39
 171 0004 0BB9     		cbnz	r3, .L11
 194:Src/main.c    ****     filtered_value2 = new_value;
 172              		.loc 1 194 5 is_stmt 1 view .LVU40
 173              		.loc 1 194 21 is_stmt 0 view .LVU41
 174 0006 054B     		ldr	r3, .L12
 175 0008 1880     		strh	r0, [r3]	@ movhi
 176              	.L11:
 195:Src/main.c    **** 
 196:Src/main.c    ****   filtered_value2 = filtered_value2 + ((new_value - filtered_value2) >> ALPHA_SHIFT);
 177              		.loc 1 196 3 is_stmt 1 view .LVU42
 178              		.loc 1 196 51 is_stmt 0 view .LVU43
 179 000a 044A     		ldr	r2, .L12
 180 000c 1388     		ldrh	r3, [r2]
 181 000e C01A     		subs	r0, r0, r3
 182              	.LVL8:
 183              		.loc 1 196 37 view .LVU44
 184 0010 03EB2010 		add	r0, r3, r0, asr #4
 185 0014 80B2     		uxth	r0, r0
 186              		.loc 1 196 19 view .LVU45
 187 0016 1080     		strh	r0, [r2]	@ movhi
 197:Src/main.c    **** 
 198:Src/main.c    ****   return filtered_value2;
 188              		.loc 1 198 3 is_stmt 1 view .LVU46
 199:Src/main.c    **** }
 189              		.loc 1 199 1 is_stmt 0 view .LVU47
 190 0018 7047     		bx	lr
 191              	.L13:
 192 001a 00BF     		.align	2
 193              	.L12:
 194 001c 00000000 		.word	filtered_value2.1
 195              		.cfi_endproc
 196              	.LFE71:
 198              		.section	.text.ema_filter3,"ax",%progbits
 199              		.align	1
 200              		.global	ema_filter3
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	ema_filter3:
 206              	.LVL9:
 207              	.LFB72:
 200:Src/main.c    **** 
 201:Src/main.c    **** uint16_t ema_filter3(uint16_t new_value)
ARM GAS  /tmp/ccixHgFH.s 			page 8


 202:Src/main.c    **** {
 208              		.loc 1 202 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 203:Src/main.c    ****   static uint16_t filtered_value3 = 0;
 213              		.loc 1 203 3 view .LVU49
 204:Src/main.c    **** 
 205:Src/main.c    ****   if (filtered_value3 == 0)
 214              		.loc 1 205 3 view .LVU50
 215              		.loc 1 205 23 is_stmt 0 view .LVU51
 216 0000 064B     		ldr	r3, .L16
 217 0002 1B88     		ldrh	r3, [r3]
 218              		.loc 1 205 6 view .LVU52
 219 0004 0BB9     		cbnz	r3, .L15
 206:Src/main.c    ****     filtered_value3 = new_value;
 220              		.loc 1 206 5 is_stmt 1 view .LVU53
 221              		.loc 1 206 21 is_stmt 0 view .LVU54
 222 0006 054B     		ldr	r3, .L16
 223 0008 1880     		strh	r0, [r3]	@ movhi
 224              	.L15:
 207:Src/main.c    **** 
 208:Src/main.c    ****   filtered_value3 = filtered_value3 + ((new_value - filtered_value3) >> ALPHA_SHIFT);
 225              		.loc 1 208 3 is_stmt 1 view .LVU55
 226              		.loc 1 208 51 is_stmt 0 view .LVU56
 227 000a 044A     		ldr	r2, .L16
 228 000c 1388     		ldrh	r3, [r2]
 229 000e C01A     		subs	r0, r0, r3
 230              	.LVL10:
 231              		.loc 1 208 37 view .LVU57
 232 0010 03EB2010 		add	r0, r3, r0, asr #4
 233 0014 80B2     		uxth	r0, r0
 234              		.loc 1 208 19 view .LVU58
 235 0016 1080     		strh	r0, [r2]	@ movhi
 209:Src/main.c    **** 
 210:Src/main.c    ****   return filtered_value3;
 236              		.loc 1 210 3 is_stmt 1 view .LVU59
 211:Src/main.c    **** }
 237              		.loc 1 211 1 is_stmt 0 view .LVU60
 238 0018 7047     		bx	lr
 239              	.L17:
 240 001a 00BF     		.align	2
 241              	.L16:
 242 001c 00000000 		.word	filtered_value3.0
 243              		.cfi_endproc
 244              	.LFE72:
 246              		.section	.text.filtreye_koy,"ax",%progbits
 247              		.align	1
 248              		.global	filtreye_koy
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	filtreye_koy:
 254              	.LVL11:
 255              	.LFB73:
 212:Src/main.c    **** 
ARM GAS  /tmp/ccixHgFH.s 			page 9


 213:Src/main.c    **** uint16_t dizi[120] = {0};
 214:Src/main.c    **** uint16_t dizi_index = 0;
 215:Src/main.c    **** // Gecici olarak devre dışı
 216:Src/main.c    **** uint16_t filtreye_koy(uint16_t num)
 217:Src/main.c    **** {
 256              		.loc 1 217 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 218:Src/main.c    ****   uint16_t toplam = 0;
 261              		.loc 1 218 3 view .LVU62
 219:Src/main.c    ****   uint16_t average = 0;
 262              		.loc 1 219 3 view .LVU63
 220:Src/main.c    **** 
 221:Src/main.c    ****   dizi[dizi_index++] = num;
 263              		.loc 1 221 3 view .LVU64
 264              		.loc 1 221 18 is_stmt 0 view .LVU65
 265 0000 1149     		ldr	r1, .L25
 266 0002 0A88     		ldrh	r2, [r1]
 267 0004 531C     		adds	r3, r2, #1
 268 0006 9BB2     		uxth	r3, r3
 269 0008 0B80     		strh	r3, [r1]	@ movhi
 270              		.loc 1 221 22 view .LVU66
 271 000a 1049     		ldr	r1, .L25+4
 272 000c 21F81200 		strh	r0, [r1, r2, lsl #1]	@ movhi
 222:Src/main.c    **** 
 223:Src/main.c    ****   if (dizi_index == 120)
 273              		.loc 1 223 3 is_stmt 1 view .LVU67
 274              		.loc 1 223 6 is_stmt 0 view .LVU68
 275 0010 782B     		cmp	r3, #120
 276 0012 02D0     		beq	.L24
 277              	.L19:
 224:Src/main.c    ****     dizi_index = 0;
 225:Src/main.c    **** 
 226:Src/main.c    ****   for (uint8_t i = 0; i < 120; i++)
 278              		.loc 1 226 3 is_stmt 1 view .LVU69
 279              	.LBB4:
 280              		.loc 1 226 8 view .LVU70
 281              	.LVL12:
 282              		.loc 1 226 16 is_stmt 0 view .LVU71
 283 0014 0023     		movs	r3, #0
 284              	.LBE4:
 218:Src/main.c    ****   uint16_t average = 0;
 285              		.loc 1 218 12 view .LVU72
 286 0016 1A46     		mov	r2, r3
 287              	.LBB5:
 288              		.loc 1 226 3 view .LVU73
 289 0018 0AE0     		b	.L20
 290              	.LVL13:
 291              	.L24:
 292              		.loc 1 226 3 view .LVU74
 293              	.LBE5:
 224:Src/main.c    ****     dizi_index = 0;
 294              		.loc 1 224 5 is_stmt 1 view .LVU75
 224:Src/main.c    ****     dizi_index = 0;
 295              		.loc 1 224 16 is_stmt 0 view .LVU76
ARM GAS  /tmp/ccixHgFH.s 			page 10


 296 001a 0B4B     		ldr	r3, .L25
 297 001c 0022     		movs	r2, #0
 298 001e 1A80     		strh	r2, [r3]	@ movhi
 299 0020 F8E7     		b	.L19
 300              	.LVL14:
 301              	.L21:
 302              	.LBB6:
 227:Src/main.c    ****   {
 228:Src/main.c    ****     toplam += dizi[i];
 303              		.loc 1 228 5 is_stmt 1 view .LVU77
 304              		.loc 1 228 19 is_stmt 0 view .LVU78
 305 0022 0A49     		ldr	r1, .L25+4
 306 0024 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 307              		.loc 1 228 12 view .LVU79
 308 0028 0A44     		add	r2, r2, r1
 309              	.LVL15:
 310              		.loc 1 228 12 view .LVU80
 311 002a 92B2     		uxth	r2, r2
 312              	.LVL16:
 226:Src/main.c    ****   {
 313              		.loc 1 226 33 is_stmt 1 discriminator 3 view .LVU81
 314 002c 0133     		adds	r3, r3, #1
 315              	.LVL17:
 226:Src/main.c    ****   {
 316              		.loc 1 226 33 is_stmt 0 discriminator 3 view .LVU82
 317 002e DBB2     		uxtb	r3, r3
 318              	.LVL18:
 319              	.L20:
 226:Src/main.c    ****   {
 320              		.loc 1 226 25 is_stmt 1 discriminator 1 view .LVU83
 321 0030 772B     		cmp	r3, #119
 322 0032 F6D9     		bls	.L21
 323              	.LBE6:
 229:Src/main.c    ****   }
 230:Src/main.c    **** 
 231:Src/main.c    ****   if (toplam > 120)
 324              		.loc 1 231 3 view .LVU84
 325              		.loc 1 231 6 is_stmt 0 view .LVU85
 326 0034 782A     		cmp	r2, #120
 327 0036 05D9     		bls	.L23
 232:Src/main.c    ****     average = toplam / 120;
 328              		.loc 1 232 5 is_stmt 1 view .LVU86
 329              		.loc 1 232 13 is_stmt 0 view .LVU87
 330 0038 054B     		ldr	r3, .L25+8
 331              	.LVL19:
 332              		.loc 1 232 13 view .LVU88
 333 003a A3FB0232 		umull	r3, r2, r3, r2
 334              	.LVL20:
 335              		.loc 1 232 13 view .LVU89
 336 003e C2F38F10 		ubfx	r0, r2, #6, #16
 337              	.LVL21:
 233:Src/main.c    ****   else
 234:Src/main.c    ****     return 0;
 235:Src/main.c    **** 
 236:Src/main.c    ****   return average;
 338              		.loc 1 236 3 is_stmt 1 view .LVU90
 339              		.loc 1 236 10 is_stmt 0 view .LVU91
ARM GAS  /tmp/ccixHgFH.s 			page 11


 340 0042 7047     		bx	lr
 341              	.LVL22:
 342              	.L23:
 234:Src/main.c    **** 
 343              		.loc 1 234 12 view .LVU92
 344 0044 0020     		movs	r0, #0
 345              	.LVL23:
 237:Src/main.c    **** }
 346              		.loc 1 237 1 view .LVU93
 347 0046 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0048 00000000 		.word	dizi_index
 352 004c 00000000 		.word	dizi
 353 0050 89888888 		.word	-2004318071
 354              		.cfi_endproc
 355              	.LFE73:
 357              		.global	__aeabi_ui2d
 358              		.global	__aeabi_dmul
 359              		.global	__aeabi_d2uiz
 360              		.section	.rodata.HAL_ADC_ConvCpltCallback.str1.4,"aMS",%progbits,1
 361              		.align	2
 362              	.LC0:
 363 0000 70776D5F 		.ascii	"pwm_value\000"
 363      76616C75 
 363      6500
 364              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 365              		.align	1
 366              		.global	HAL_ADC_ConvCpltCallback
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 371              	HAL_ADC_ConvCpltCallback:
 372              	.LVL24:
 373              	.LFB74:
 238:Src/main.c    **** 
 239:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 240:Src/main.c    **** { // ADC DMA LEMLERİ
 374              		.loc 1 240 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 241:Src/main.c    ****   if (hadc->Instance == ADC1)
 378              		.loc 1 241 3 view .LVU95
 379              		.loc 1 241 11 is_stmt 0 view .LVU96
 380 0000 0268     		ldr	r2, [r0]
 381              		.loc 1 241 6 view .LVU97
 382 0002 6B4B     		ldr	r3, .L47+8
 383 0004 9A42     		cmp	r2, r3
 384 0006 00D0     		beq	.L45
 385 0008 7047     		bx	lr
 386              	.L45:
 240:Src/main.c    ****   if (hadc->Instance == ADC1)
 387              		.loc 1 240 1 view .LVU98
 388 000a 30B5     		push	{r4, r5, lr}
 389              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccixHgFH.s 			page 12


 390              		.cfi_offset 4, -12
 391              		.cfi_offset 5, -8
 392              		.cfi_offset 14, -4
 393 000c 83B0     		sub	sp, sp, #12
 394              		.cfi_def_cfa_offset 24
 395              	.LBB7:
 242:Src/main.c    ****   {
 243:Src/main.c    **** 
 244:Src/main.c    ****     battery_voltage = adcbuffer[5] * 0.03843902;
 396              		.loc 1 244 5 is_stmt 1 view .LVU99
 397              		.loc 1 244 32 is_stmt 0 view .LVU100
 398 000e 694C     		ldr	r4, .L47+12
 399              		.loc 1 244 36 view .LVU101
 400 0010 6069     		ldr	r0, [r4, #20]
 401              	.LVL25:
 402              		.loc 1 244 36 view .LVU102
 403 0012 FFF7FEFF 		bl	__aeabi_ui2d
 404              	.LVL26:
 405 0016 64A3     		adr	r3, .L47
 406 0018 D3E90023 		ldrd	r2, [r3]
 407 001c FFF7FEFF 		bl	__aeabi_dmul
 408              	.LVL27:
 409              		.loc 1 244 21 view .LVU103
 410 0020 FFF7FEFF 		bl	__aeabi_d2uiz
 411              	.LVL28:
 412 0024 644B     		ldr	r3, .L47+16
 413 0026 1880     		strh	r0, [r3]	@ movhi
 245:Src/main.c    ****     if ((GPIOA->IDR & GPIO_PIN_8) + (GPIOA->IDR & GPIO_PIN_9) + (GPIOA->IDR & GPIO_PIN_10) == 0)
 414              		.loc 1 245 5 is_stmt 1 view .LVU104
 415              		.loc 1 245 15 is_stmt 0 view .LVU105
 416 0028 644B     		ldr	r3, .L47+20
 417 002a 9A68     		ldr	r2, [r3, #8]
 418              		.loc 1 245 43 view .LVU106
 419 002c 9A68     		ldr	r2, [r3, #8]
 420              		.loc 1 245 71 view .LVU107
 421 002e 9B68     		ldr	r3, [r3, #8]
 246:Src/main.c    ****     {
 247:Src/main.c    ****       // if ((GPIOB->IDR & GPIO_PIN_13) == 0 && (step == 3 || step == 6))
 248:Src/main.c    ****       // {
 249:Src/main.c    ****       //   phase_A = adcbuffer[3];
 250:Src/main.c    ****       //   notr = adcbuffer[6];
 251:Src/main.c    ****       //   if (phase_A > notr)
 252:Src/main.c    ****       //     polarity_A = 1;
 253:Src/main.c    **** 
 254:Src/main.c    ****       //   else
 255:Src/main.c    ****       //     polarity_A = 0;
 256:Src/main.c    ****       // }
 257:Src/main.c    ****       // if ((GPIOB->IDR & GPIO_PIN_14) == 0 && (step == 2 || step == 5))
 258:Src/main.c    ****       // {
 259:Src/main.c    ****       //   phase_B = adcbuffer[4];
 260:Src/main.c    ****       //   notr = adcbuffer[6];
 261:Src/main.c    ****       //   if (phase_B > notr)
 262:Src/main.c    ****       //     polarity_B = 1;
 263:Src/main.c    **** 
 264:Src/main.c    ****       //   else
 265:Src/main.c    ****       //     polarity_B = 0;
 266:Src/main.c    ****       // }
ARM GAS  /tmp/ccixHgFH.s 			page 13


 267:Src/main.c    ****       // if ((GPIOB->IDR & GPIO_PIN_15) == 0 && (step == 1 || step == 4))
 268:Src/main.c    ****       // {
 269:Src/main.c    ****       //   phase_C = adcbuffer[2];
 270:Src/main.c    ****       //   notr = adcbuffer[6];
 271:Src/main.c    ****       //   if (phase_C > notr)
 272:Src/main.c    ****       //     polarity_C = 1;
 273:Src/main.c    **** 
 274:Src/main.c    ****       //   else
 275:Src/main.c    ****       //     polarity_C = 0;
 276:Src/main.c    ****       // }
 277:Src/main.c    ****     }
 422              		.loc 1 277 5 is_stmt 1 view .LVU108
 278:Src/main.c    **** 
 279:Src/main.c    ****     // A
 280:Src/main.c    ****     phase_A = ema_filter1(adcbuffer[3]);
 423              		.loc 1 280 5 view .LVU109
 424              		.loc 1 280 15 is_stmt 0 view .LVU110
 425 0030 A089     		ldrh	r0, [r4, #12]
 426 0032 FFF7FEFF 		bl	ema_filter1
 427              	.LVL29:
 428              		.loc 1 280 13 discriminator 1 view .LVU111
 429 0036 624D     		ldr	r5, .L47+24
 430 0038 2860     		str	r0, [r5]
 281:Src/main.c    ****     notr = ema_filter0(adcbuffer[6]);
 431              		.loc 1 281 5 is_stmt 1 view .LVU112
 432              		.loc 1 281 12 is_stmt 0 view .LVU113
 433 003a 208B     		ldrh	r0, [r4, #24]
 434 003c FFF7FEFF 		bl	ema_filter0
 435              	.LVL30:
 436              		.loc 1 281 10 discriminator 1 view .LVU114
 437 0040 604B     		ldr	r3, .L47+28
 438 0042 1880     		strh	r0, [r3]	@ movhi
 282:Src/main.c    ****     if (phase_A > notr)
 439              		.loc 1 282 5 is_stmt 1 view .LVU115
 440              		.loc 1 282 17 is_stmt 0 view .LVU116
 441 0044 2B68     		ldr	r3, [r5]
 442              		.loc 1 282 8 view .LVU117
 443 0046 9842     		cmp	r0, r3
 444 0048 5ED2     		bcs	.L29
 283:Src/main.c    ****       polarity_A = 1;
 445              		.loc 1 283 7 is_stmt 1 view .LVU118
 446              		.loc 1 283 18 is_stmt 0 view .LVU119
 447 004a 5F4B     		ldr	r3, .L47+32
 448 004c 0122     		movs	r2, #1
 449 004e 1A70     		strb	r2, [r3]
 450              	.L30:
 284:Src/main.c    ****     else
 285:Src/main.c    ****       polarity_A = 0;
 286:Src/main.c    **** 
 287:Src/main.c    ****     // B
 288:Src/main.c    ****     phase_B = ema_filter2(adcbuffer[4]);
 451              		.loc 1 288 5 is_stmt 1 view .LVU120
 452              		.loc 1 288 36 is_stmt 0 view .LVU121
 453 0050 584D     		ldr	r5, .L47+12
 454              		.loc 1 288 15 view .LVU122
 455 0052 288A     		ldrh	r0, [r5, #16]
 456 0054 FFF7FEFF 		bl	ema_filter2
ARM GAS  /tmp/ccixHgFH.s 			page 14


 457              	.LVL31:
 458              		.loc 1 288 13 discriminator 1 view .LVU123
 459 0058 5C4C     		ldr	r4, .L47+36
 460 005a 2060     		str	r0, [r4]
 289:Src/main.c    ****     notr = ema_filter0(adcbuffer[6]);
 461              		.loc 1 289 5 is_stmt 1 view .LVU124
 462              		.loc 1 289 12 is_stmt 0 view .LVU125
 463 005c 288B     		ldrh	r0, [r5, #24]
 464 005e FFF7FEFF 		bl	ema_filter0
 465              	.LVL32:
 466              		.loc 1 289 10 discriminator 1 view .LVU126
 467 0062 584B     		ldr	r3, .L47+28
 468 0064 1880     		strh	r0, [r3]	@ movhi
 290:Src/main.c    ****     if (phase_B > notr)
 469              		.loc 1 290 5 is_stmt 1 view .LVU127
 470              		.loc 1 290 17 is_stmt 0 view .LVU128
 471 0066 2368     		ldr	r3, [r4]
 472              		.loc 1 290 8 view .LVU129
 473 0068 9842     		cmp	r0, r3
 474 006a 51D2     		bcs	.L31
 291:Src/main.c    ****       polarity_B = 1;
 475              		.loc 1 291 7 is_stmt 1 view .LVU130
 476              		.loc 1 291 18 is_stmt 0 view .LVU131
 477 006c 584B     		ldr	r3, .L47+40
 478 006e 0122     		movs	r2, #1
 479 0070 1A70     		strb	r2, [r3]
 480              	.L32:
 292:Src/main.c    ****     else
 293:Src/main.c    ****       polarity_B = 0;
 294:Src/main.c    **** 
 295:Src/main.c    ****     // C
 296:Src/main.c    ****     phase_C = ema_filter3(adcbuffer[2]);
 481              		.loc 1 296 5 is_stmt 1 view .LVU132
 482              		.loc 1 296 36 is_stmt 0 view .LVU133
 483 0072 504D     		ldr	r5, .L47+12
 484              		.loc 1 296 15 view .LVU134
 485 0074 2889     		ldrh	r0, [r5, #8]
 486 0076 FFF7FEFF 		bl	ema_filter3
 487              	.LVL33:
 488              		.loc 1 296 13 discriminator 1 view .LVU135
 489 007a 564C     		ldr	r4, .L47+44
 490 007c 2060     		str	r0, [r4]
 297:Src/main.c    ****     notr = ema_filter0(adcbuffer[6]);
 491              		.loc 1 297 5 is_stmt 1 view .LVU136
 492              		.loc 1 297 12 is_stmt 0 view .LVU137
 493 007e 288B     		ldrh	r0, [r5, #24]
 494 0080 FFF7FEFF 		bl	ema_filter0
 495              	.LVL34:
 496              		.loc 1 297 10 discriminator 1 view .LVU138
 497 0084 4F4B     		ldr	r3, .L47+28
 498 0086 1880     		strh	r0, [r3]	@ movhi
 298:Src/main.c    ****     if (phase_C > notr)
 499              		.loc 1 298 5 is_stmt 1 view .LVU139
 500              		.loc 1 298 17 is_stmt 0 view .LVU140
 501 0088 2368     		ldr	r3, [r4]
 502              		.loc 1 298 8 view .LVU141
 503 008a 9842     		cmp	r0, r3
ARM GAS  /tmp/ccixHgFH.s 			page 15


 504 008c 44D2     		bcs	.L33
 299:Src/main.c    ****       polarity_C = 1;
 505              		.loc 1 299 7 is_stmt 1 view .LVU142
 506              		.loc 1 299 18 is_stmt 0 view .LVU143
 507 008e 524B     		ldr	r3, .L47+48
 508 0090 0122     		movs	r2, #1
 509 0092 1A70     		strb	r2, [r3]
 510              	.L34:
 300:Src/main.c    ****     else
 301:Src/main.c    ****       polarity_C = 0;
 302:Src/main.c    **** 
 303:Src/main.c    ****     uint16_t average_phase = (uint16_t)((phase_A + phase_B + phase_C) / 3);
 511              		.loc 1 303 5 is_stmt 1 view .LVU144
 512              		.loc 1 303 50 is_stmt 0 view .LVU145
 513 0094 4A4B     		ldr	r3, .L47+24
 514 0096 1B68     		ldr	r3, [r3]
 515 0098 4C4A     		ldr	r2, .L47+36
 516 009a 1268     		ldr	r2, [r2]
 517 009c 1344     		add	r3, r3, r2
 518              		.loc 1 303 60 view .LVU146
 519 009e 4D4A     		ldr	r2, .L47+44
 520 00a0 1268     		ldr	r2, [r2]
 521 00a2 1344     		add	r3, r3, r2
 522              		.loc 1 303 71 view .LVU147
 523 00a4 4D4A     		ldr	r2, .L47+52
 524 00a6 A2FB0323 		umull	r2, r3, r2, r3
 525              		.loc 1 303 14 view .LVU148
 526 00aa C3F34F03 		ubfx	r3, r3, #1, #16
 527              	.LVL35:
 304:Src/main.c    ****     // motor_voltage = filtreye_koy(average_phase);
 305:Src/main.c    ****     // motor_voltage = ema_filter(average_phase);
 306:Src/main.c    ****     motor_voltage = average_phase * 10;
 528              		.loc 1 306 5 is_stmt 1 view .LVU149
 529              		.loc 1 306 19 is_stmt 0 view .LVU150
 530 00ae 03EB8303 		add	r3, r3, r3, lsl #2
 531              	.LVL36:
 532              		.loc 1 306 19 view .LVU151
 533 00b2 5B00     		lsls	r3, r3, #1
 534 00b4 9BB2     		uxth	r3, r3
 535 00b6 4A4A     		ldr	r2, .L47+56
 536 00b8 1380     		strh	r3, [r2]	@ movhi
 307:Src/main.c    **** 
 308:Src/main.c    ****     currentValue = adcbuffer[1];
 537              		.loc 1 308 5 is_stmt 1 view .LVU152
 538              		.loc 1 308 18 is_stmt 0 view .LVU153
 539 00ba 3E4B     		ldr	r3, .L47+12
 540 00bc 9A88     		ldrh	r2, [r3, #4]
 541 00be 494B     		ldr	r3, .L47+60
 542 00c0 1A80     		strh	r2, [r3]	@ movhi
 309:Src/main.c    ****     filtered_current = 4500 - currentValue;
 543              		.loc 1 309 5 is_stmt 1 view .LVU154
 544              		.loc 1 309 29 is_stmt 0 view .LVU155
 545 00c2 1B88     		ldrh	r3, [r3]
 546 00c4 9BB2     		uxth	r3, r3
 547 00c6 C3F58C53 		rsb	r3, r3, #4480
 548 00ca 1433     		adds	r3, r3, #20
 549 00cc 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccixHgFH.s 			page 16


 550              		.loc 1 309 22 view .LVU156
 551 00ce 464A     		ldr	r2, .L47+64
 552 00d0 1380     		strh	r3, [r2]	@ movhi
 310:Src/main.c    **** 
 311:Src/main.c    ****     // TEMPORARY DEVELOPING LINES
 312:Src/main.c    ****     if (filtered_current <= 1600 && filtered_current >= 1300)
 553              		.loc 1 312 5 is_stmt 1 view .LVU157
 554              		.loc 1 312 26 is_stmt 0 view .LVU158
 555 00d2 1388     		ldrh	r3, [r2]
 556 00d4 9BB2     		uxth	r3, r3
 557              		.loc 1 312 8 view .LVU159
 558 00d6 B3F5C86F 		cmp	r3, #1600
 559 00da 21D8     		bhi	.L35
 560              		.loc 1 312 54 discriminator 1 view .LVU160
 561 00dc 1388     		ldrh	r3, [r2]
 562 00de 9BB2     		uxth	r3, r3
 563              		.loc 1 312 34 discriminator 1 view .LVU161
 564 00e0 40F21352 		movw	r2, #1299
 565 00e4 9342     		cmp	r3, r2
 566 00e6 1BD9     		bls	.L35
 313:Src/main.c    ****       temporary_current_value = map(filtered_current, 1300, 1600, 0, 4430);
 567              		.loc 1 313 7 is_stmt 1 view .LVU162
 568              		.loc 1 313 33 is_stmt 0 view .LVU163
 569 00e8 3F4B     		ldr	r3, .L47+64
 570 00ea 1888     		ldrh	r0, [r3]
 571 00ec 41F24E13 		movw	r3, #4430
 572 00f0 0093     		str	r3, [sp]
 573 00f2 0023     		movs	r3, #0
 574 00f4 4FF4C862 		mov	r2, #1600
 575 00f8 40F21451 		movw	r1, #1300
 576 00fc 80B2     		uxth	r0, r0
 577 00fe FFF7FEFF 		bl	map
 578              	.LVL37:
 579              		.loc 1 313 31 discriminator 1 view .LVU164
 580 0102 3A4B     		ldr	r3, .L47+68
 581 0104 1880     		strh	r0, [r3]	@ movhi
 582              		.loc 1 313 31 view .LVU165
 583 0106 15E0     		b	.L36
 584              	.LVL38:
 585              	.L29:
 285:Src/main.c    **** 
 586              		.loc 1 285 7 is_stmt 1 view .LVU166
 285:Src/main.c    **** 
 587              		.loc 1 285 18 is_stmt 0 view .LVU167
 588 0108 2F4B     		ldr	r3, .L47+32
 589 010a 0022     		movs	r2, #0
 590 010c 1A70     		strb	r2, [r3]
 591 010e 9FE7     		b	.L30
 592              	.L31:
 293:Src/main.c    **** 
 593              		.loc 1 293 7 is_stmt 1 view .LVU168
 293:Src/main.c    **** 
 594              		.loc 1 293 18 is_stmt 0 view .LVU169
 595 0110 2F4B     		ldr	r3, .L47+40
 596 0112 0022     		movs	r2, #0
 597 0114 1A70     		strb	r2, [r3]
 598 0116 ACE7     		b	.L32
ARM GAS  /tmp/ccixHgFH.s 			page 17


 599              	.L33:
 301:Src/main.c    **** 
 600              		.loc 1 301 7 is_stmt 1 view .LVU170
 301:Src/main.c    **** 
 601              		.loc 1 301 18 is_stmt 0 view .LVU171
 602 0118 2F4B     		ldr	r3, .L47+48
 603 011a 0022     		movs	r2, #0
 604 011c 1A70     		strb	r2, [r3]
 605 011e B9E7     		b	.L34
 606              	.LVL39:
 607              	.L35:
 314:Src/main.c    ****     else if (filtered_current > 1600)
 608              		.loc 1 314 10 is_stmt 1 view .LVU172
 609              		.loc 1 314 31 is_stmt 0 view .LVU173
 610 0120 314B     		ldr	r3, .L47+64
 611 0122 1B88     		ldrh	r3, [r3]
 612 0124 9BB2     		uxth	r3, r3
 613              		.loc 1 314 13 view .LVU174
 614 0126 B3F5C86F 		cmp	r3, #1600
 615 012a 2CD9     		bls	.L37
 315:Src/main.c    ****       temporary_current_value = 4430;
 616              		.loc 1 315 7 is_stmt 1 view .LVU175
 617              		.loc 1 315 31 is_stmt 0 view .LVU176
 618 012c 2F4B     		ldr	r3, .L47+68
 619 012e 41F24E12 		movw	r2, #4430
 620 0132 1A80     		strh	r2, [r3]	@ movhi
 621              	.L36:
 316:Src/main.c    ****     else
 317:Src/main.c    ****       temporary_current_value = 1300;
 318:Src/main.c    ****     // END
 319:Src/main.c    **** 
 320:Src/main.c    ****     speedInAdc = adcbuffer[0];
 622              		.loc 1 320 5 is_stmt 1 view .LVU177
 623              		.loc 1 320 16 is_stmt 0 view .LVU178
 624 0134 1F4B     		ldr	r3, .L47+12
 625 0136 1A88     		ldrh	r2, [r3]
 626 0138 2D4B     		ldr	r3, .L47+72
 627 013a 1A80     		strh	r2, [r3]	@ movhi
 321:Src/main.c    **** 
 322:Src/main.c    ****     // target_rpm
 323:Src/main.c    **** 
 324:Src/main.c    ****     if ((currentValue <= 1500) && (pwm_value > 100))
 628              		.loc 1 324 5 is_stmt 1 view .LVU179
 629              		.loc 1 324 23 is_stmt 0 view .LVU180
 630 013c 294B     		ldr	r3, .L47+60
 631 013e 1B88     		ldrh	r3, [r3]
 632 0140 9BB2     		uxth	r3, r3
 633              		.loc 1 324 8 view .LVU181
 634 0142 40F2DC52 		movw	r2, #1500
 635 0146 9342     		cmp	r3, r2
 636 0148 03D8     		bhi	.L38
 637              		.loc 1 324 46 discriminator 1 view .LVU182
 638 014a 2A4B     		ldr	r3, .L47+76
 639 014c 1B68     		ldr	r3, [r3]
 640              		.loc 1 324 32 discriminator 1 view .LVU183
 641 014e 642B     		cmp	r3, #100
 642 0150 1ED8     		bhi	.L46
ARM GAS  /tmp/ccixHgFH.s 			page 18


 643              	.L38:
 325:Src/main.c    ****     {
 326:Src/main.c    ****       pwm_value = pwm_value - 1;
 327:Src/main.c    ****       LOG_VAR(pwm_value);
 328:Src/main.c    ****     }
 329:Src/main.c    **** 
 330:Src/main.c    ****     if (minCurrent > filtered_current)
 644              		.loc 1 330 5 is_stmt 1 view .LVU184
 645              		.loc 1 330 20 is_stmt 0 view .LVU185
 646 0152 294B     		ldr	r3, .L47+80
 647 0154 1A88     		ldrh	r2, [r3]
 648 0156 244B     		ldr	r3, .L47+64
 649 0158 1B88     		ldrh	r3, [r3]
 650 015a 9BB2     		uxth	r3, r3
 651              		.loc 1 330 8 view .LVU186
 652 015c 9A42     		cmp	r2, r3
 653 015e 03D9     		bls	.L39
 331:Src/main.c    ****       minCurrent = filtered_current;
 654              		.loc 1 331 7 is_stmt 1 view .LVU187
 655              		.loc 1 331 18 is_stmt 0 view .LVU188
 656 0160 214B     		ldr	r3, .L47+64
 657 0162 1A88     		ldrh	r2, [r3]
 658 0164 244B     		ldr	r3, .L47+80
 659 0166 1A80     		strh	r2, [r3]	@ movhi
 660              	.L39:
 332:Src/main.c    ****     if (maxCurrent < filtered_current)
 661              		.loc 1 332 5 is_stmt 1 view .LVU189
 662              		.loc 1 332 20 is_stmt 0 view .LVU190
 663 0168 244B     		ldr	r3, .L47+84
 664 016a 1A88     		ldrh	r2, [r3]
 665 016c 1E4B     		ldr	r3, .L47+64
 666 016e 1B88     		ldrh	r3, [r3]
 667 0170 9BB2     		uxth	r3, r3
 668              		.loc 1 332 8 view .LVU191
 669 0172 9A42     		cmp	r2, r3
 670 0174 03D2     		bcs	.L40
 333:Src/main.c    ****       maxCurrent = filtered_current;
 671              		.loc 1 333 7 is_stmt 1 view .LVU192
 672              		.loc 1 333 18 is_stmt 0 view .LVU193
 673 0176 1C4B     		ldr	r3, .L47+64
 674 0178 1A88     		ldrh	r2, [r3]
 675 017a 204B     		ldr	r3, .L47+84
 676 017c 1A80     		strh	r2, [r3]	@ movhi
 677              	.L40:
 334:Src/main.c    ****     phaseControlBemf();
 678              		.loc 1 334 5 is_stmt 1 view .LVU194
 679 017e FFF7FEFF 		bl	phaseControlBemf
 680              	.LVL40:
 681              	.LBE7:
 335:Src/main.c    ****   }
 336:Src/main.c    **** }
 682              		.loc 1 336 1 is_stmt 0 view .LVU195
 683 0182 03B0     		add	sp, sp, #12
 684              		.cfi_remember_state
 685              		.cfi_def_cfa_offset 12
 686              		@ sp needed
 687 0184 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccixHgFH.s 			page 19


 688              	.L37:
 689              		.cfi_restore_state
 690              	.LBB8:
 317:Src/main.c    ****     // END
 691              		.loc 1 317 7 is_stmt 1 view .LVU196
 317:Src/main.c    ****     // END
 692              		.loc 1 317 31 is_stmt 0 view .LVU197
 693 0186 194B     		ldr	r3, .L47+68
 694 0188 40F21452 		movw	r2, #1300
 695 018c 1A80     		strh	r2, [r3]	@ movhi
 696 018e D1E7     		b	.L36
 697              	.L46:
 326:Src/main.c    ****       LOG_VAR(pwm_value);
 698              		.loc 1 326 7 is_stmt 1 view .LVU198
 326:Src/main.c    ****       LOG_VAR(pwm_value);
 699              		.loc 1 326 29 is_stmt 0 view .LVU199
 700 0190 184B     		ldr	r3, .L47+76
 701 0192 1A68     		ldr	r2, [r3]
 702 0194 013A     		subs	r2, r2, #1
 326:Src/main.c    ****       LOG_VAR(pwm_value);
 703              		.loc 1 326 17 view .LVU200
 704 0196 1A60     		str	r2, [r3]
 327:Src/main.c    ****     }
 705              		.loc 1 327 7 is_stmt 1 view .LVU201
 706 0198 1968     		ldr	r1, [r3]
 707 019a 1948     		ldr	r0, .L47+88
 708 019c FFF7FEFF 		bl	log_variable
 709              	.LVL41:
 710 01a0 D7E7     		b	.L38
 711              	.L48:
 712 01a2 00BFAFF3 		.align	3
 712      0080
 713              	.L47:
 714 01a8 E1A0947B 		.word	2073338081
 715 01ac 47AEA33F 		.word	1067691591
 716 01b0 00240140 		.word	1073816576
 717 01b4 00000000 		.word	adcbuffer
 718 01b8 00000000 		.word	battery_voltage
 719 01bc 00080140 		.word	1073809408
 720 01c0 00000000 		.word	phase_A
 721 01c4 00000000 		.word	notr
 722 01c8 00000000 		.word	polarity_A
 723 01cc 00000000 		.word	phase_B
 724 01d0 00000000 		.word	polarity_B
 725 01d4 00000000 		.word	phase_C
 726 01d8 00000000 		.word	polarity_C
 727 01dc ABAAAAAA 		.word	-1431655765
 728 01e0 00000000 		.word	motor_voltage
 729 01e4 00000000 		.word	currentValue
 730 01e8 00000000 		.word	filtered_current
 731 01ec 00000000 		.word	temporary_current_value
 732 01f0 00000000 		.word	speedInAdc
 733 01f4 00000000 		.word	pwm_value
 734 01f8 00000000 		.word	minCurrent
 735 01fc 00000000 		.word	maxCurrent
 736 0200 00000000 		.word	.LC0
 737              	.LBE8:
ARM GAS  /tmp/ccixHgFH.s 			page 20


 738              		.cfi_endproc
 739              	.LFE74:
 741              		.section	.text.Error_Handler,"ax",%progbits
 742              		.align	1
 743              		.global	Error_Handler
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	Error_Handler:
 749              	.LFB77:
 337:Src/main.c    **** 
 338:Src/main.c    **** /* USER CODE END 0 */
 339:Src/main.c    **** 
 340:Src/main.c    **** /**
 341:Src/main.c    ****  * @brief  The application entry point.
 342:Src/main.c    ****  * @retval int
 343:Src/main.c    ****  */
 344:Src/main.c    **** int main(void)
 345:Src/main.c    **** {
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE BEGIN 1 */
 348:Src/main.c    ****   /* USER CODE END 1 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 353:Src/main.c    ****   HAL_Init();
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE BEGIN Init */
 356:Src/main.c    **** 
 357:Src/main.c    ****   /* USER CODE END Init */
 358:Src/main.c    **** 
 359:Src/main.c    ****   /* Configure the system clock */
 360:Src/main.c    ****   SystemClock_Config();
 361:Src/main.c    **** 
 362:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 363:Src/main.c    **** 
 364:Src/main.c    ****   /* USER CODE END SysInit */
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* Initialize all configured peripherals */
 367:Src/main.c    ****   MX_GPIO_Init();
 368:Src/main.c    ****   MX_DMA_Init();
 369:Src/main.c    ****   MX_ADC1_Init();
 370:Src/main.c    ****   MX_TIM1_Init();
 371:Src/main.c    ****   MX_USB_DEVICE_Init();
 372:Src/main.c    ****   MX_TIM2_Init();
 373:Src/main.c    ****   MX_TIM3_Init();
 374:Src/main.c    ****   MX_TIM4_Init();
 375:Src/main.c    ****   /* USER CODE BEGIN 2 */
 376:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, adcbuffer, 7);
 377:Src/main.c    **** 
 378:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 379:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 380:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 381:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 382:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 383:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
ARM GAS  /tmp/ccixHgFH.s 			page 21


 384:Src/main.c    **** 
 385:Src/main.c    ****   HAL_TIM_Base_Start(&htim2);
 386:Src/main.c    **** 
 387:Src/main.c    ****   HAL_Delay(1000);
 388:Src/main.c    ****   TIM1->CCER = 0x0000;
 389:Src/main.c    ****   previousTime2 = HAL_GetTick();
 390:Src/main.c    ****   previousTime3 = HAL_GetTick();
 391:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 392:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim3, 0);
 393:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim4);
 394:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim4, 0);
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* USER CODE END 2 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* Infinite loop */
 399:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 400:Src/main.c    ****   while (1)
 401:Src/main.c    ****   {
 402:Src/main.c    **** 
 403:Src/main.c    ****     hall_A = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 404:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 405:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 406:Src/main.c    ****     if (!run_status)
 407:Src/main.c    ****     {
 408:Src/main.c    ****       pwm_value = 10.50 * motor_voltage / battery_voltage;
 409:Src/main.c    ****     }
 410:Src/main.c    **** 
 411:Src/main.c    ****     // uint32_t filtreli_akim = filtreye_koy(filtered_current);
 412:Src/main.c    ****     average = 0;
 413:Src/main.c    **** 
 414:Src/main.c    ****     /* USER CODE END WHILE */
 415:Src/main.c    **** 
 416:Src/main.c    ****     /* USER CODE BEGIN 3 */
 417:Src/main.c    ****     if (HAL_GetTick() - previousTime3 > 50) // && rpm_max_limit_flag)
 418:Src/main.c    ****     {
 419:Src/main.c    **** 
 420:Src/main.c    ****       // LOG_VAR(phase_A);
 421:Src/main.c    ****       // LOG_VAR(phase_B);
 422:Src/main.c    ****       // LOG_VAR(phase_C);
 423:Src/main.c    ****       LOG_VAR(rpm);
 424:Src/main.c    ****       LOG_POST();
 425:Src/main.c    ****       // LOG_VAR(adcbuffer[6]);
 426:Src/main.c    **** 
 427:Src/main.c    ****       // // LOG_VAR(step);
 428:Src/main.c    **** 
 429:Src/main.c    ****       // LOG_POST();
 430:Src/main.c    ****       step_atlandi = 0;
 431:Src/main.c    ****       previousTime3 = HAL_GetTick();
 432:Src/main.c    ****     }
 433:Src/main.c    **** 
 434:Src/main.c    ****     // LOG_VAR(rpm);
 435:Src/main.c    **** 
 436:Src/main.c    ****     // LOG_VAR(filtered_current);
 437:Src/main.c    ****     // LOG_VAR(pwm_value);
 438:Src/main.c    **** 
 439:Src/main.c    ****     // LOG_VAR(pedal_value_mapped);
 440:Src/main.c    ****     // LOG_VAR(temporary_current_value);
ARM GAS  /tmp/ccixHgFH.s 			page 22


 441:Src/main.c    **** 
 442:Src/main.c    ****     // LOG_POST();
 443:Src/main.c    ****     if (HAL_GetTick() - previousTime2 > 1500 && run_status)
 444:Src/main.c    ****     {
 445:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 446:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 447:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
 448:Src/main.c    ****       TIM1->CCER = 0x0000;
 449:Src/main.c    ****       // rpm = get_rpm(-1);
 450:Src/main.c    ****       previousTime2 = HAL_GetTick();
 451:Src/main.c    ****     }
 452:Src/main.c    **** 
 453:Src/main.c    ****     // if (HAL_GetTick() - timeForRotorStopStatusMs > 500 && run_status)
 454:Src/main.c    ****     // {
 455:Src/main.c    ****     //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 456:Src/main.c    ****     //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 457:Src/main.c    ****     //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 458:Src/main.c    ****     //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 459:Src/main.c    ****     //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 460:Src/main.c    ****     //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 461:Src/main.c    ****     // }
 462:Src/main.c    **** 
 463:Src/main.c    ****     if (speedInAdc >= 900) // Checked
 464:Src/main.c    ****     {
 465:Src/main.c    ****       // if (isStoppedTimers && 0)
 466:Src/main.c    ****       // {
 467:Src/main.c    ****       //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 468:Src/main.c    ****       //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 469:Src/main.c    ****       //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 470:Src/main.c    ****       //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 471:Src/main.c    ****       //   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 472:Src/main.c    ****       //   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 473:Src/main.c    ****       //   isStoppedTimers = 0;
 474:Src/main.c    ****       // }
 475:Src/main.c    **** 
 476:Src/main.c    ****       timeForRotorStopStatusMsFlag = 1;
 477:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 478:Src/main.c    **** 
 479:Src/main.c    ****       if (mode == 0)
 480:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 481:Src/main.c    ****       else
 482:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 483:Src/main.c    **** 
 484:Src/main.c    ****       HAL_Delay(1); // Kaldırılabilir
 485:Src/main.c    **** 
 486:Src/main.c    ****       if (rpm > target_rpm) // if (filtered_current > pedal_value_mapped)
 487:Src/main.c    ****       {
 488:Src/main.c    ****         if (pwm_value > min_pwm_limit)
 489:Src/main.c    ****         {
 490:Src/main.c    ****           pwm_value -= 1;
 491:Src/main.c    ****         }
 492:Src/main.c    ****         else
 493:Src/main.c    ****         {
 494:Src/main.c    ****           pwm_value = min_pwm_limit;
 495:Src/main.c    ****         }
 496:Src/main.c    ****       }
 497:Src/main.c    **** 
ARM GAS  /tmp/ccixHgFH.s 			page 23


 498:Src/main.c    ****       else
 499:Src/main.c    ****       {
 500:Src/main.c    ****         if (pwm_value < min_pwm_limit)
 501:Src/main.c    ****         {
 502:Src/main.c    ****           pwm_value = min_pwm_limit;
 503:Src/main.c    ****         }
 504:Src/main.c    ****         else if (pwm_value < 1167)
 505:Src/main.c    ****         {
 506:Src/main.c    ****           pwm_value += 1;
 507:Src/main.c    ****         }
 508:Src/main.c    ****       }
 509:Src/main.c    **** 
 510:Src/main.c    ****       if (!run_status)
 511:Src/main.c    ****       {
 512:Src/main.c    ****         run_status = true;
 513:Src/main.c    ****         // geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 514:Src/main.c    ****         hall_A = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 515:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 516:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 517:Src/main.c    ****         if (motor_voltage < 150)
 518:Src/main.c    ****         {
 519:Src/main.c    ****           pwm_value = min_pwm_limit;
 520:Src/main.c    ****           HAL_GPIO_EXTI_Callback(GPIO_PIN_2);
 521:Src/main.c    ****           // first_step(hall_A, hall_B, hall_C);
 522:Src/main.c    ****         }
 523:Src/main.c    ****       }
 524:Src/main.c    ****     }
 525:Src/main.c    **** 
 526:Src/main.c    ****     else if ((run_status) && (speedInAdc < 800))
 527:Src/main.c    ****     {
 528:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
 529:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, 0);
 530:Src/main.c    ****       // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 0);
 531:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0); // Mosfetleri kapatıyoruz
 532:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 533:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 534:Src/main.c    ****       TIM1->CCER = 0x0000;
 535:Src/main.c    ****       flagg = 1;
 536:Src/main.c    ****       // step = 0;
 537:Src/main.c    ****       first_step_flag = 1;
 538:Src/main.c    **** 
 539:Src/main.c    ****       // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 540:Src/main.c    ****       // HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_1);
 541:Src/main.c    ****       // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 542:Src/main.c    ****       // HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_2);
 543:Src/main.c    ****       // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 544:Src/main.c    ****       // HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_3);
 545:Src/main.c    ****       // isStoppedTimers = 1;
 546:Src/main.c    ****       if (timeForRotorStopStatusMsFlag)
 547:Src/main.c    ****       {
 548:Src/main.c    ****         timeForRotorStopStatusMs = HAL_GetTick();
 549:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 550:Src/main.c    ****       }
 551:Src/main.c    ****       run_status = false;
 552:Src/main.c    ****     }
 553:Src/main.c    ****   }
 554:Src/main.c    **** 
ARM GAS  /tmp/ccixHgFH.s 			page 24


 555:Src/main.c    ****   hall_A = HAL_GPIO_ReadPin(GPIOA, HALL_1_Pin);
 556:Src/main.c    ****   hall_B = HAL_GPIO_ReadPin(GPIOA, HALL_2_Pin);
 557:Src/main.c    ****   hall_C = HAL_GPIO_ReadPin(GPIOA, HALL_3_Pin);
 558:Src/main.c    ****   /* USER CODE END 3 */
 559:Src/main.c    **** }
 560:Src/main.c    **** 
 561:Src/main.c    **** /**
 562:Src/main.c    ****  * @brief System Clock Configuration
 563:Src/main.c    ****  * @retval None
 564:Src/main.c    ****  */
 565:Src/main.c    **** void SystemClock_Config(void)
 566:Src/main.c    **** {
 567:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 568:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 569:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 570:Src/main.c    **** 
 571:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 572:Src/main.c    ****    * in the RCC_OscInitTypeDef structure.
 573:Src/main.c    ****    */
 574:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 575:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 576:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 577:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 578:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 579:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 580:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 581:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 582:Src/main.c    ****   {
 583:Src/main.c    ****     Error_Handler();
 584:Src/main.c    ****   }
 585:Src/main.c    **** 
 586:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 587:Src/main.c    ****    */
 588:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 589:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 590:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 591:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 592:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 593:Src/main.c    **** 
 594:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 595:Src/main.c    ****   {
 596:Src/main.c    ****     Error_Handler();
 597:Src/main.c    ****   }
 598:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC | RCC_PERIPHCLK_USB;
 599:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 600:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 601:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 602:Src/main.c    ****   {
 603:Src/main.c    ****     Error_Handler();
 604:Src/main.c    ****   }
 605:Src/main.c    **** }
 606:Src/main.c    **** 
 607:Src/main.c    **** /* USER CODE BEGIN 4 */
 608:Src/main.c    **** 
 609:Src/main.c    **** /* USER CODE END 4 */
 610:Src/main.c    **** 
 611:Src/main.c    **** /**
ARM GAS  /tmp/ccixHgFH.s 			page 25


 612:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 613:Src/main.c    ****  * @retval None
 614:Src/main.c    ****  */
 615:Src/main.c    **** void Error_Handler(void)
 616:Src/main.c    **** {
 750              		.loc 1 616 1 view -0
 751              		.cfi_startproc
 752              		@ Volatile: function does not return.
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 617:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 618:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 619:Src/main.c    ****   __disable_irq();
 756              		.loc 1 619 3 view .LVU203
 757              	.LBB9:
 758              	.LBI9:
 759              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  /tmp/ccixHgFH.s 			page 26


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccixHgFH.s 			page 27


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 760              		.loc 2 140 27 view .LVU204
 761              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 762              		.loc 2 142 3 view .LVU205
 763              		.syntax unified
 764              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 765 0000 72B6     		cpsid i
 766              	@ 0 "" 2
 767              		.thumb
 768              		.syntax unified
 769              	.L50:
 770              	.LBE10:
ARM GAS  /tmp/ccixHgFH.s 			page 28


 771              	.LBE9:
 620:Src/main.c    ****   while (1)
 772              		.loc 1 620 3 view .LVU206
 621:Src/main.c    ****   {
 622:Src/main.c    ****   }
 773              		.loc 1 622 3 view .LVU207
 620:Src/main.c    ****   while (1)
 774              		.loc 1 620 9 view .LVU208
 775 0002 FEE7     		b	.L50
 776              		.cfi_endproc
 777              	.LFE77:
 779              		.section	.text.SystemClock_Config,"ax",%progbits
 780              		.align	1
 781              		.global	SystemClock_Config
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 786              	SystemClock_Config:
 787              	.LFB76:
 566:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 788              		.loc 1 566 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 80
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792 0000 00B5     		push	{lr}
 793              		.cfi_def_cfa_offset 4
 794              		.cfi_offset 14, -4
 795 0002 95B0     		sub	sp, sp, #84
 796              		.cfi_def_cfa_offset 88
 567:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 797              		.loc 1 567 3 view .LVU210
 567:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 798              		.loc 1 567 22 is_stmt 0 view .LVU211
 799 0004 2822     		movs	r2, #40
 800 0006 0021     		movs	r1, #0
 801 0008 0DEB0200 		add	r0, sp, r2
 802 000c FFF7FEFF 		bl	memset
 803              	.LVL42:
 568:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 804              		.loc 1 568 3 is_stmt 1 view .LVU212
 568:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 805              		.loc 1 568 22 is_stmt 0 view .LVU213
 806 0010 0023     		movs	r3, #0
 807 0012 0593     		str	r3, [sp, #20]
 808 0014 0693     		str	r3, [sp, #24]
 809 0016 0793     		str	r3, [sp, #28]
 810 0018 0893     		str	r3, [sp, #32]
 811 001a 0993     		str	r3, [sp, #36]
 569:Src/main.c    **** 
 812              		.loc 1 569 3 is_stmt 1 view .LVU214
 569:Src/main.c    **** 
 813              		.loc 1 569 28 is_stmt 0 view .LVU215
 814 001c 0193     		str	r3, [sp, #4]
 815 001e 0293     		str	r3, [sp, #8]
 816 0020 0393     		str	r3, [sp, #12]
 817 0022 0493     		str	r3, [sp, #16]
 574:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/ccixHgFH.s 			page 29


 818              		.loc 1 574 3 is_stmt 1 view .LVU216
 574:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 819              		.loc 1 574 36 is_stmt 0 view .LVU217
 820 0024 0122     		movs	r2, #1
 821 0026 0A92     		str	r2, [sp, #40]
 575:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 822              		.loc 1 575 3 is_stmt 1 view .LVU218
 575:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 823              		.loc 1 575 30 is_stmt 0 view .LVU219
 824 0028 4FF48033 		mov	r3, #65536
 825 002c 0B93     		str	r3, [sp, #44]
 576:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 826              		.loc 1 576 3 is_stmt 1 view .LVU220
 577:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 827              		.loc 1 577 3 view .LVU221
 577:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 828              		.loc 1 577 30 is_stmt 0 view .LVU222
 829 002e 0E92     		str	r2, [sp, #56]
 578:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 830              		.loc 1 578 3 is_stmt 1 view .LVU223
 578:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 831              		.loc 1 578 34 is_stmt 0 view .LVU224
 832 0030 0222     		movs	r2, #2
 833 0032 1192     		str	r2, [sp, #68]
 579:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 834              		.loc 1 579 3 is_stmt 1 view .LVU225
 579:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 835              		.loc 1 579 35 is_stmt 0 view .LVU226
 836 0034 1293     		str	r3, [sp, #72]
 580:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 837              		.loc 1 580 3 is_stmt 1 view .LVU227
 580:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 838              		.loc 1 580 32 is_stmt 0 view .LVU228
 839 0036 4FF4E013 		mov	r3, #1835008
 840 003a 1393     		str	r3, [sp, #76]
 581:Src/main.c    ****   {
 841              		.loc 1 581 3 is_stmt 1 view .LVU229
 581:Src/main.c    ****   {
 842              		.loc 1 581 7 is_stmt 0 view .LVU230
 843 003c 0AA8     		add	r0, sp, #40
 844 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 845              	.LVL43:
 581:Src/main.c    ****   {
 846              		.loc 1 581 6 discriminator 1 view .LVU231
 847 0042 D8B9     		cbnz	r0, .L56
 588:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 848              		.loc 1 588 3 is_stmt 1 view .LVU232
 588:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 849              		.loc 1 588 31 is_stmt 0 view .LVU233
 850 0044 0F23     		movs	r3, #15
 851 0046 0593     		str	r3, [sp, #20]
 589:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 852              		.loc 1 589 3 is_stmt 1 view .LVU234
 589:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 853              		.loc 1 589 34 is_stmt 0 view .LVU235
 854 0048 0221     		movs	r1, #2
 855 004a 0691     		str	r1, [sp, #24]
ARM GAS  /tmp/ccixHgFH.s 			page 30


 590:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 856              		.loc 1 590 3 is_stmt 1 view .LVU236
 590:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 857              		.loc 1 590 35 is_stmt 0 view .LVU237
 858 004c 0023     		movs	r3, #0
 859 004e 0793     		str	r3, [sp, #28]
 591:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 860              		.loc 1 591 3 is_stmt 1 view .LVU238
 591:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 861              		.loc 1 591 36 is_stmt 0 view .LVU239
 862 0050 4FF48062 		mov	r2, #1024
 863 0054 0892     		str	r2, [sp, #32]
 592:Src/main.c    **** 
 864              		.loc 1 592 3 is_stmt 1 view .LVU240
 592:Src/main.c    **** 
 865              		.loc 1 592 36 is_stmt 0 view .LVU241
 866 0056 0993     		str	r3, [sp, #36]
 594:Src/main.c    ****   {
 867              		.loc 1 594 3 is_stmt 1 view .LVU242
 594:Src/main.c    ****   {
 868              		.loc 1 594 7 is_stmt 0 view .LVU243
 869 0058 05A8     		add	r0, sp, #20
 870 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 871              	.LVL44:
 594:Src/main.c    ****   {
 872              		.loc 1 594 6 discriminator 1 view .LVU244
 873 005e 78B9     		cbnz	r0, .L57
 598:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 874              		.loc 1 598 3 is_stmt 1 view .LVU245
 598:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 875              		.loc 1 598 38 is_stmt 0 view .LVU246
 876 0060 1223     		movs	r3, #18
 877 0062 0193     		str	r3, [sp, #4]
 599:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 878              		.loc 1 599 3 is_stmt 1 view .LVU247
 599:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 879              		.loc 1 599 35 is_stmt 0 view .LVU248
 880 0064 4FF40043 		mov	r3, #32768
 881 0068 0393     		str	r3, [sp, #12]
 600:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 882              		.loc 1 600 3 is_stmt 1 view .LVU249
 600:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 883              		.loc 1 600 35 is_stmt 0 view .LVU250
 884 006a 0023     		movs	r3, #0
 885 006c 0493     		str	r3, [sp, #16]
 601:Src/main.c    ****   {
 886              		.loc 1 601 3 is_stmt 1 view .LVU251
 601:Src/main.c    ****   {
 887              		.loc 1 601 7 is_stmt 0 view .LVU252
 888 006e 01A8     		add	r0, sp, #4
 889 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 890              	.LVL45:
 601:Src/main.c    ****   {
 891              		.loc 1 601 6 discriminator 1 view .LVU253
 892 0074 30B9     		cbnz	r0, .L58
 605:Src/main.c    **** 
 893              		.loc 1 605 1 view .LVU254
ARM GAS  /tmp/ccixHgFH.s 			page 31


 894 0076 15B0     		add	sp, sp, #84
 895              		.cfi_remember_state
 896              		.cfi_def_cfa_offset 4
 897              		@ sp needed
 898 0078 5DF804FB 		ldr	pc, [sp], #4
 899              	.L56:
 900              		.cfi_restore_state
 583:Src/main.c    ****   }
 901              		.loc 1 583 5 is_stmt 1 view .LVU255
 902 007c FFF7FEFF 		bl	Error_Handler
 903              	.LVL46:
 904              	.L57:
 596:Src/main.c    ****   }
 905              		.loc 1 596 5 view .LVU256
 906 0080 FFF7FEFF 		bl	Error_Handler
 907              	.LVL47:
 908              	.L58:
 603:Src/main.c    ****   }
 909              		.loc 1 603 5 view .LVU257
 910 0084 FFF7FEFF 		bl	Error_Handler
 911              	.LVL48:
 912              		.cfi_endproc
 913              	.LFE76:
 915              		.global	__aeabi_i2d
 916              		.global	__aeabi_ddiv
 917              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 918              		.align	2
 919              	.LC1:
 920 0000 72706D00 		.ascii	"rpm\000"
 921              		.section	.text.main,"ax",%progbits
 922              		.align	1
 923              		.global	main
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 928              	main:
 929              	.LFB75:
 345:Src/main.c    **** 
 930              		.loc 1 345 1 view -0
 931              		.cfi_startproc
 932              		@ Volatile: function does not return.
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 00B5     		push	{lr}
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 14, -4
 938 0002 83B0     		sub	sp, sp, #12
 939              		.cfi_def_cfa_offset 16
 353:Src/main.c    **** 
 940              		.loc 1 353 3 view .LVU259
 941 0004 FFF7FEFF 		bl	HAL_Init
 942              	.LVL49:
 360:Src/main.c    **** 
 943              		.loc 1 360 3 view .LVU260
 944 0008 FFF7FEFF 		bl	SystemClock_Config
 945              	.LVL50:
 367:Src/main.c    ****   MX_DMA_Init();
ARM GAS  /tmp/ccixHgFH.s 			page 32


 946              		.loc 1 367 3 view .LVU261
 947 000c FFF7FEFF 		bl	MX_GPIO_Init
 948              	.LVL51:
 368:Src/main.c    ****   MX_ADC1_Init();
 949              		.loc 1 368 3 view .LVU262
 950 0010 FFF7FEFF 		bl	MX_DMA_Init
 951              	.LVL52:
 369:Src/main.c    ****   MX_TIM1_Init();
 952              		.loc 1 369 3 view .LVU263
 953 0014 FFF7FEFF 		bl	MX_ADC1_Init
 954              	.LVL53:
 370:Src/main.c    ****   MX_USB_DEVICE_Init();
 955              		.loc 1 370 3 view .LVU264
 956 0018 FFF7FEFF 		bl	MX_TIM1_Init
 957              	.LVL54:
 371:Src/main.c    ****   MX_TIM2_Init();
 958              		.loc 1 371 3 view .LVU265
 959 001c FFF7FEFF 		bl	MX_USB_DEVICE_Init
 960              	.LVL55:
 372:Src/main.c    ****   MX_TIM3_Init();
 961              		.loc 1 372 3 view .LVU266
 962 0020 FFF7FEFF 		bl	MX_TIM2_Init
 963              	.LVL56:
 373:Src/main.c    ****   MX_TIM4_Init();
 964              		.loc 1 373 3 view .LVU267
 965 0024 FFF7FEFF 		bl	MX_TIM3_Init
 966              	.LVL57:
 374:Src/main.c    ****   /* USER CODE BEGIN 2 */
 967              		.loc 1 374 3 view .LVU268
 968 0028 FFF7FEFF 		bl	MX_TIM4_Init
 969              	.LVL58:
 376:Src/main.c    **** 
 970              		.loc 1 376 3 view .LVU269
 971 002c 0722     		movs	r2, #7
 972 002e 4049     		ldr	r1, .L77
 973 0030 4048     		ldr	r0, .L77+4
 974 0032 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 975              	.LVL59:
 378:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 976              		.loc 1 378 3 view .LVU270
 977 0036 404C     		ldr	r4, .L77+8
 978 0038 0021     		movs	r1, #0
 979 003a 2046     		mov	r0, r4
 980 003c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 981              	.LVL60:
 379:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 982              		.loc 1 379 3 view .LVU271
 983 0040 0021     		movs	r1, #0
 984 0042 2046     		mov	r0, r4
 985 0044 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 986              	.LVL61:
 380:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 987              		.loc 1 380 3 view .LVU272
 988 0048 0421     		movs	r1, #4
 989 004a 2046     		mov	r0, r4
 990 004c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 991              	.LVL62:
ARM GAS  /tmp/ccixHgFH.s 			page 33


 381:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 992              		.loc 1 381 3 view .LVU273
 993 0050 0421     		movs	r1, #4
 994 0052 2046     		mov	r0, r4
 995 0054 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 996              	.LVL63:
 382:Src/main.c    ****   HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 997              		.loc 1 382 3 view .LVU274
 998 0058 0821     		movs	r1, #8
 999 005a 2046     		mov	r0, r4
 1000 005c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1001              	.LVL64:
 383:Src/main.c    **** 
 1002              		.loc 1 383 3 view .LVU275
 1003 0060 0821     		movs	r1, #8
 1004 0062 2046     		mov	r0, r4
 1005 0064 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1006              	.LVL65:
 385:Src/main.c    **** 
 1007              		.loc 1 385 3 view .LVU276
 1008 0068 3448     		ldr	r0, .L77+12
 1009 006a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1010              	.LVL66:
 387:Src/main.c    ****   TIM1->CCER = 0x0000;
 1011              		.loc 1 387 3 view .LVU277
 1012 006e 4FF47A70 		mov	r0, #1000
 1013 0072 FFF7FEFF 		bl	HAL_Delay
 1014              	.LVL67:
 388:Src/main.c    ****   previousTime2 = HAL_GetTick();
 1015              		.loc 1 388 3 view .LVU278
 388:Src/main.c    ****   previousTime2 = HAL_GetTick();
 1016              		.loc 1 388 14 is_stmt 0 view .LVU279
 1017 0076 0024     		movs	r4, #0
 1018 0078 314B     		ldr	r3, .L77+16
 1019 007a 1C62     		str	r4, [r3, #32]
 389:Src/main.c    ****   previousTime3 = HAL_GetTick();
 1020              		.loc 1 389 3 is_stmt 1 view .LVU280
 389:Src/main.c    ****   previousTime3 = HAL_GetTick();
 1021              		.loc 1 389 19 is_stmt 0 view .LVU281
 1022 007c FFF7FEFF 		bl	HAL_GetTick
 1023              	.LVL68:
 389:Src/main.c    ****   previousTime3 = HAL_GetTick();
 1024              		.loc 1 389 17 discriminator 1 view .LVU282
 1025 0080 304B     		ldr	r3, .L77+20
 1026 0082 1860     		str	r0, [r3]
 390:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 1027              		.loc 1 390 3 is_stmt 1 view .LVU283
 390:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 1028              		.loc 1 390 19 is_stmt 0 view .LVU284
 1029 0084 FFF7FEFF 		bl	HAL_GetTick
 1030              	.LVL69:
 390:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 1031              		.loc 1 390 17 discriminator 1 view .LVU285
 1032 0088 2F4B     		ldr	r3, .L77+24
 1033 008a 1860     		str	r0, [r3]
 391:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim3, 0);
 1034              		.loc 1 391 3 is_stmt 1 view .LVU286
ARM GAS  /tmp/ccixHgFH.s 			page 34


 1035 008c 2F4D     		ldr	r5, .L77+28
 1036 008e 2846     		mov	r0, r5
 1037 0090 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1038              	.LVL70:
 392:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim4);
 1039              		.loc 1 392 3 view .LVU287
 1040 0094 2B68     		ldr	r3, [r5]
 1041 0096 5C62     		str	r4, [r3, #36]
 393:Src/main.c    ****   __HAL_TIM_SET_COUNTER(&htim4, 0);
 1042              		.loc 1 393 3 view .LVU288
 1043 0098 2D4D     		ldr	r5, .L77+32
 1044 009a 2846     		mov	r0, r5
 1045 009c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1046              	.LVL71:
 394:Src/main.c    **** 
 1047              		.loc 1 394 3 view .LVU289
 1048 00a0 2B68     		ldr	r3, [r5]
 1049 00a2 5C62     		str	r4, [r3, #36]
 1050 00a4 84E0     		b	.L60
 1051              	.L75:
 423:Src/main.c    ****       LOG_POST();
 1052              		.loc 1 423 7 view .LVU290
 1053 00a6 2B4B     		ldr	r3, .L77+36
 1054 00a8 1968     		ldr	r1, [r3]
 1055 00aa 2B48     		ldr	r0, .L77+40
 1056 00ac FFF7FEFF 		bl	log_variable
 1057              	.LVL72:
 424:Src/main.c    ****       // LOG_VAR(adcbuffer[6]);
 1058              		.loc 1 424 7 view .LVU291
 1059 00b0 FFF7FEFF 		bl	LOG_POST
 1060              	.LVL73:
 430:Src/main.c    ****       previousTime3 = HAL_GetTick();
 1061              		.loc 1 430 7 view .LVU292
 430:Src/main.c    ****       previousTime3 = HAL_GetTick();
 1062              		.loc 1 430 20 is_stmt 0 view .LVU293
 1063 00b4 294B     		ldr	r3, .L77+44
 1064 00b6 0022     		movs	r2, #0
 1065 00b8 1A70     		strb	r2, [r3]
 431:Src/main.c    ****     }
 1066              		.loc 1 431 7 is_stmt 1 view .LVU294
 431:Src/main.c    ****     }
 1067              		.loc 1 431 23 is_stmt 0 view .LVU295
 1068 00ba FFF7FEFF 		bl	HAL_GetTick
 1069              	.LVL74:
 431:Src/main.c    ****     }
 1070              		.loc 1 431 21 discriminator 1 view .LVU296
 1071 00be 224B     		ldr	r3, .L77+24
 1072 00c0 1860     		str	r0, [r3]
 1073 00c2 B8E0     		b	.L62
 1074              	.L76:
 445:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 1075              		.loc 1 445 7 is_stmt 1 view .LVU297
 1076 00c4 1C4B     		ldr	r3, .L77+8
 1077 00c6 1A68     		ldr	r2, [r3]
 1078 00c8 0023     		movs	r3, #0
 1079 00ca D363     		str	r3, [r2, #60]
 446:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0);
ARM GAS  /tmp/ccixHgFH.s 			page 35


 1080              		.loc 1 446 7 view .LVU298
 1081 00cc 9363     		str	r3, [r2, #56]
 447:Src/main.c    ****       TIM1->CCER = 0x0000;
 1082              		.loc 1 447 7 view .LVU299
 1083 00ce 5363     		str	r3, [r2, #52]
 448:Src/main.c    ****       // rpm = get_rpm(-1);
 1084              		.loc 1 448 7 view .LVU300
 448:Src/main.c    ****       // rpm = get_rpm(-1);
 1085              		.loc 1 448 18 is_stmt 0 view .LVU301
 1086 00d0 1B4A     		ldr	r2, .L77+16
 1087 00d2 1362     		str	r3, [r2, #32]
 450:Src/main.c    ****     }
 1088              		.loc 1 450 7 is_stmt 1 view .LVU302
 450:Src/main.c    ****     }
 1089              		.loc 1 450 23 is_stmt 0 view .LVU303
 1090 00d4 FFF7FEFF 		bl	HAL_GetTick
 1091              	.LVL75:
 450:Src/main.c    ****     }
 1092              		.loc 1 450 21 discriminator 1 view .LVU304
 1093 00d8 1A4B     		ldr	r3, .L77+20
 1094 00da 1860     		str	r0, [r3]
 1095 00dc B9E0     		b	.L63
 1096              	.L65:
 482:Src/main.c    **** 
 1097              		.loc 1 482 9 is_stmt 1 view .LVU305
 482:Src/main.c    **** 
 1098              		.loc 1 482 22 is_stmt 0 view .LVU306
 1099 00de 204B     		ldr	r3, .L77+48
 1100 00e0 1888     		ldrh	r0, [r3]
 1101 00e2 204B     		ldr	r3, .L77+52
 1102 00e4 1B88     		ldrh	r3, [r3]
 1103 00e6 0093     		str	r3, [sp]
 1104 00e8 0023     		movs	r3, #0
 1105 00ea 4FF46162 		mov	r2, #3600
 1106 00ee 4FF42F71 		mov	r1, #700
 1107 00f2 80B2     		uxth	r0, r0
 1108 00f4 FFF7FEFF 		bl	map
 1109              	.LVL76:
 482:Src/main.c    **** 
 1110              		.loc 1 482 20 discriminator 1 view .LVU307
 1111 00f8 1B4B     		ldr	r3, .L77+56
 1112 00fa 1880     		strh	r0, [r3]	@ movhi
 1113 00fc CDE0     		b	.L66
 1114              	.L68:
 494:Src/main.c    ****         }
 1115              		.loc 1 494 11 is_stmt 1 view .LVU308
 494:Src/main.c    ****         }
 1116              		.loc 1 494 21 is_stmt 0 view .LVU309
 1117 00fe 1B4A     		ldr	r2, .L77+60
 1118 0100 1360     		str	r3, [r2]
 1119 0102 DFE0     		b	.L69
 1120              	.L67:
 500:Src/main.c    ****         {
 1121              		.loc 1 500 9 is_stmt 1 view .LVU310
 500:Src/main.c    ****         {
 1122              		.loc 1 500 23 is_stmt 0 view .LVU311
 1123 0104 1A4B     		ldr	r3, .L77+64
ARM GAS  /tmp/ccixHgFH.s 			page 36


 1124 0106 1B88     		ldrh	r3, [r3]
 1125 0108 184A     		ldr	r2, .L77+60
 1126 010a 1268     		ldr	r2, [r2]
 500:Src/main.c    ****         {
 1127              		.loc 1 500 12 view .LVU312
 1128 010c 9342     		cmp	r3, r2
 1129 010e 02D9     		bls	.L70
 502:Src/main.c    ****         }
 1130              		.loc 1 502 11 is_stmt 1 view .LVU313
 502:Src/main.c    ****         }
 1131              		.loc 1 502 21 is_stmt 0 view .LVU314
 1132 0110 164A     		ldr	r2, .L77+60
 1133 0112 1360     		str	r3, [r2]
 1134 0114 D6E0     		b	.L69
 1135              	.L70:
 504:Src/main.c    ****         {
 1136              		.loc 1 504 14 is_stmt 1 view .LVU315
 504:Src/main.c    ****         {
 1137              		.loc 1 504 28 is_stmt 0 view .LVU316
 1138 0116 154B     		ldr	r3, .L77+60
 1139 0118 1A68     		ldr	r2, [r3]
 504:Src/main.c    ****         {
 1140              		.loc 1 504 17 view .LVU317
 1141 011a 40F28E43 		movw	r3, #1166
 1142 011e 9A42     		cmp	r2, r3
 1143 0120 00F2D080 		bhi	.L69
 506:Src/main.c    ****         }
 1144              		.loc 1 506 11 is_stmt 1 view .LVU318
 506:Src/main.c    ****         }
 1145              		.loc 1 506 21 is_stmt 0 view .LVU319
 1146 0124 114A     		ldr	r2, .L77+60
 1147 0126 1368     		ldr	r3, [r2]
 1148 0128 0133     		adds	r3, r3, #1
 1149 012a 1360     		str	r3, [r2]
 1150 012c CAE0     		b	.L69
 1151              	.L78:
 1152 012e 00BF     		.align	2
 1153              	.L77:
 1154 0130 00000000 		.word	adcbuffer
 1155 0134 00000000 		.word	hadc1
 1156 0138 00000000 		.word	htim1
 1157 013c 00000000 		.word	htim2
 1158 0140 002C0140 		.word	1073818624
 1159 0144 00000000 		.word	previousTime2
 1160 0148 00000000 		.word	previousTime3
 1161 014c 00000000 		.word	htim3
 1162 0150 00000000 		.word	htim4
 1163 0154 00000000 		.word	rpm
 1164 0158 00000000 		.word	.LC1
 1165 015c 00000000 		.word	step_atlandi
 1166 0160 00000000 		.word	speedInAdc
 1167 0164 00000000 		.word	max_rpm_limit
 1168 0168 00000000 		.word	target_rpm
 1169 016c 00000000 		.word	pwm_value
 1170 0170 00000000 		.word	min_pwm_limit
 1171              	.L64:
 526:Src/main.c    ****     {
ARM GAS  /tmp/ccixHgFH.s 			page 37


 1172              		.loc 1 526 10 is_stmt 1 view .LVU320
 526:Src/main.c    ****     {
 1173              		.loc 1 526 14 is_stmt 0 view .LVU321
 1174 0174 704B     		ldr	r3, .L79
 1175 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526:Src/main.c    ****     {
 1176              		.loc 1 526 13 view .LVU322
 1177 0178 D3B1     		cbz	r3, .L60
 526:Src/main.c    ****     {
 1178              		.loc 1 526 42 discriminator 1 view .LVU323
 1179 017a 704B     		ldr	r3, .L79+4
 1180 017c 1B88     		ldrh	r3, [r3]
 1181 017e 9BB2     		uxth	r3, r3
 526:Src/main.c    ****     {
 1182              		.loc 1 526 27 discriminator 1 view .LVU324
 1183 0180 B3F5487F 		cmp	r3, #800
 1184 0184 14D2     		bcs	.L60
 531:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 0);
 1185              		.loc 1 531 7 is_stmt 1 view .LVU325
 1186 0186 6E4B     		ldr	r3, .L79+8
 1187 0188 1A68     		ldr	r2, [r3]
 1188 018a 0023     		movs	r3, #0
 1189 018c 5363     		str	r3, [r2, #52]
 532:Src/main.c    ****       __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0);
 1190              		.loc 1 532 7 view .LVU326
 1191 018e 9363     		str	r3, [r2, #56]
 533:Src/main.c    ****       TIM1->CCER = 0x0000;
 1192              		.loc 1 533 7 view .LVU327
 1193 0190 D363     		str	r3, [r2, #60]
 534:Src/main.c    ****       flagg = 1;
 1194              		.loc 1 534 7 view .LVU328
 534:Src/main.c    ****       flagg = 1;
 1195              		.loc 1 534 18 is_stmt 0 view .LVU329
 1196 0192 6C4A     		ldr	r2, .L79+12
 1197 0194 1362     		str	r3, [r2, #32]
 535:Src/main.c    ****       // step = 0;
 1198              		.loc 1 535 7 is_stmt 1 view .LVU330
 535:Src/main.c    ****       // step = 0;
 1199              		.loc 1 535 13 is_stmt 0 view .LVU331
 1200 0196 0123     		movs	r3, #1
 1201 0198 6B4A     		ldr	r2, .L79+16
 1202 019a 1370     		strb	r3, [r2]
 537:Src/main.c    **** 
 1203              		.loc 1 537 7 is_stmt 1 view .LVU332
 537:Src/main.c    **** 
 1204              		.loc 1 537 23 is_stmt 0 view .LVU333
 1205 019c 6B4A     		ldr	r2, .L79+20
 1206 019e 1370     		strb	r3, [r2]
 546:Src/main.c    ****       {
 1207              		.loc 1 546 7 is_stmt 1 view .LVU334
 546:Src/main.c    ****       {
 1208              		.loc 1 546 11 is_stmt 0 view .LVU335
 1209 01a0 6B4B     		ldr	r3, .L79+24
 1210 01a2 1B68     		ldr	r3, [r3]
 546:Src/main.c    ****       {
 1211              		.loc 1 546 10 view .LVU336
 1212 01a4 002B     		cmp	r3, #0
ARM GAS  /tmp/ccixHgFH.s 			page 38


 1213 01a6 40F0BE80 		bne	.L74
 1214              	.L72:
 551:Src/main.c    ****     }
 1215              		.loc 1 551 7 is_stmt 1 view .LVU337
 551:Src/main.c    ****     }
 1216              		.loc 1 551 18 is_stmt 0 view .LVU338
 1217 01aa 634B     		ldr	r3, .L79
 1218 01ac 0022     		movs	r2, #0
 1219 01ae 1A70     		strb	r2, [r3]
 1220              	.L60:
 400:Src/main.c    ****   {
 1221              		.loc 1 400 3 is_stmt 1 view .LVU339
 403:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1222              		.loc 1 403 5 view .LVU340
 403:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1223              		.loc 1 403 14 is_stmt 0 view .LVU341
 1224 01b0 684C     		ldr	r4, .L79+28
 1225 01b2 0121     		movs	r1, #1
 1226 01b4 2046     		mov	r0, r4
 1227 01b6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1228              	.LVL77:
 403:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1229              		.loc 1 403 14 discriminator 1 view .LVU342
 1230 01ba 0038     		subs	r0, r0, #0
 1231 01bc 18BF     		it	ne
 1232 01be 0120     		movne	r0, #1
 403:Src/main.c    ****     hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1233              		.loc 1 403 12 discriminator 1 view .LVU343
 1234 01c0 654B     		ldr	r3, .L79+32
 1235 01c2 1870     		strb	r0, [r3]
 404:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1236              		.loc 1 404 5 is_stmt 1 view .LVU344
 404:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1237              		.loc 1 404 14 is_stmt 0 view .LVU345
 1238 01c4 0221     		movs	r1, #2
 1239 01c6 2046     		mov	r0, r4
 1240 01c8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1241              	.LVL78:
 404:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1242              		.loc 1 404 14 discriminator 1 view .LVU346
 1243 01cc 0038     		subs	r0, r0, #0
 1244 01ce 18BF     		it	ne
 1245 01d0 0120     		movne	r0, #1
 404:Src/main.c    ****     hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1246              		.loc 1 404 12 discriminator 1 view .LVU347
 1247 01d2 624B     		ldr	r3, .L79+36
 1248 01d4 1870     		strb	r0, [r3]
 405:Src/main.c    ****     if (!run_status)
 1249              		.loc 1 405 5 is_stmt 1 view .LVU348
 405:Src/main.c    ****     if (!run_status)
 1250              		.loc 1 405 14 is_stmt 0 view .LVU349
 1251 01d6 0421     		movs	r1, #4
 1252 01d8 2046     		mov	r0, r4
 1253 01da FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1254              	.LVL79:
 405:Src/main.c    ****     if (!run_status)
 1255              		.loc 1 405 14 discriminator 1 view .LVU350
ARM GAS  /tmp/ccixHgFH.s 			page 39


 1256 01de 0038     		subs	r0, r0, #0
 1257 01e0 18BF     		it	ne
 1258 01e2 0120     		movne	r0, #1
 405:Src/main.c    ****     if (!run_status)
 1259              		.loc 1 405 12 discriminator 1 view .LVU351
 1260 01e4 5E4B     		ldr	r3, .L79+40
 1261 01e6 1870     		strb	r0, [r3]
 406:Src/main.c    ****     {
 1262              		.loc 1 406 5 is_stmt 1 view .LVU352
 406:Src/main.c    ****     {
 1263              		.loc 1 406 9 is_stmt 0 view .LVU353
 1264 01e8 534B     		ldr	r3, .L79
 1265 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406:Src/main.c    ****     {
 1266              		.loc 1 406 8 view .LVU354
 1267 01ec C3B9     		cbnz	r3, .L61
 408:Src/main.c    ****     }
 1268              		.loc 1 408 7 is_stmt 1 view .LVU355
 408:Src/main.c    ****     }
 1269              		.loc 1 408 25 is_stmt 0 view .LVU356
 1270 01ee 5D4B     		ldr	r3, .L79+44
 1271 01f0 1888     		ldrh	r0, [r3]
 1272 01f2 80B2     		uxth	r0, r0
 1273 01f4 FFF7FEFF 		bl	__aeabi_i2d
 1274              	.LVL80:
 1275 01f8 0022     		movs	r2, #0
 1276 01fa 5B4B     		ldr	r3, .L79+48
 1277 01fc FFF7FEFF 		bl	__aeabi_dmul
 1278              	.LVL81:
 1279 0200 0446     		mov	r4, r0
 1280 0202 0D46     		mov	r5, r1
 408:Src/main.c    ****     }
 1281              		.loc 1 408 41 view .LVU357
 1282 0204 594B     		ldr	r3, .L79+52
 1283 0206 1888     		ldrh	r0, [r3]
 1284 0208 FFF7FEFF 		bl	__aeabi_i2d
 1285              	.LVL82:
 1286 020c 0246     		mov	r2, r0
 1287 020e 0B46     		mov	r3, r1
 1288 0210 2046     		mov	r0, r4
 1289 0212 2946     		mov	r1, r5
 1290 0214 FFF7FEFF 		bl	__aeabi_ddiv
 1291              	.LVL83:
 408:Src/main.c    ****     }
 1292              		.loc 1 408 17 view .LVU358
 1293 0218 FFF7FEFF 		bl	__aeabi_d2uiz
 1294              	.LVL84:
 1295 021c 544B     		ldr	r3, .L79+56
 1296 021e 1860     		str	r0, [r3]
 1297              	.L61:
 412:Src/main.c    **** 
 1298              		.loc 1 412 5 is_stmt 1 view .LVU359
 412:Src/main.c    **** 
 1299              		.loc 1 412 13 is_stmt 0 view .LVU360
 1300 0220 544B     		ldr	r3, .L79+60
 1301 0222 0022     		movs	r2, #0
 1302 0224 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccixHgFH.s 			page 40


 417:Src/main.c    ****     {
 1303              		.loc 1 417 5 is_stmt 1 view .LVU361
 417:Src/main.c    ****     {
 1304              		.loc 1 417 9 is_stmt 0 view .LVU362
 1305 0226 FFF7FEFF 		bl	HAL_GetTick
 1306              	.LVL85:
 417:Src/main.c    ****     {
 1307              		.loc 1 417 23 discriminator 1 view .LVU363
 1308 022a 534B     		ldr	r3, .L79+64
 1309 022c 1B68     		ldr	r3, [r3]
 1310 022e C01A     		subs	r0, r0, r3
 417:Src/main.c    ****     {
 1311              		.loc 1 417 8 discriminator 1 view .LVU364
 1312 0230 3228     		cmp	r0, #50
 1313 0232 3FF638AF 		bhi	.L75
 1314              	.L62:
 443:Src/main.c    ****     {
 1315              		.loc 1 443 5 is_stmt 1 view .LVU365
 443:Src/main.c    ****     {
 1316              		.loc 1 443 9 is_stmt 0 view .LVU366
 1317 0236 FFF7FEFF 		bl	HAL_GetTick
 1318              	.LVL86:
 443:Src/main.c    ****     {
 1319              		.loc 1 443 23 discriminator 1 view .LVU367
 1320 023a 504B     		ldr	r3, .L79+68
 1321 023c 1B68     		ldr	r3, [r3]
 1322 023e C01A     		subs	r0, r0, r3
 443:Src/main.c    ****     {
 1323              		.loc 1 443 8 discriminator 1 view .LVU368
 1324 0240 40F2DC53 		movw	r3, #1500
 1325 0244 9842     		cmp	r0, r3
 1326 0246 04D9     		bls	.L63
 443:Src/main.c    ****     {
 1327              		.loc 1 443 46 discriminator 1 view .LVU369
 1328 0248 3B4B     		ldr	r3, .L79
 1329 024a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 024c 002B     		cmp	r3, #0
 1331 024e 7FF439AF 		bne	.L76
 1332              	.L63:
 463:Src/main.c    ****     {
 1333              		.loc 1 463 5 is_stmt 1 view .LVU370
 463:Src/main.c    ****     {
 1334              		.loc 1 463 20 is_stmt 0 view .LVU371
 1335 0252 3A4B     		ldr	r3, .L79+4
 1336 0254 1B88     		ldrh	r3, [r3]
 1337 0256 9BB2     		uxth	r3, r3
 463:Src/main.c    ****     {
 1338              		.loc 1 463 8 view .LVU372
 1339 0258 B3F5617F 		cmp	r3, #900
 1340 025c 8AD3     		bcc	.L64
 476:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 1341              		.loc 1 476 7 is_stmt 1 view .LVU373
 476:Src/main.c    ****       mode = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5); // Nitro mod
 1342              		.loc 1 476 36 is_stmt 0 view .LVU374
 1343 025e 3C4B     		ldr	r3, .L79+24
 1344 0260 0122     		movs	r2, #1
 1345 0262 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccixHgFH.s 			page 41


 477:Src/main.c    **** 
 1346              		.loc 1 477 7 is_stmt 1 view .LVU375
 477:Src/main.c    **** 
 1347              		.loc 1 477 14 is_stmt 0 view .LVU376
 1348 0264 2021     		movs	r1, #32
 1349 0266 4648     		ldr	r0, .L79+72
 1350 0268 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1351              	.LVL87:
 477:Src/main.c    **** 
 1352              		.loc 1 477 14 discriminator 1 view .LVU377
 1353 026c 0028     		cmp	r0, #0
 1354 026e 14BF     		ite	ne
 1355 0270 0122     		movne	r2, #1
 1356 0272 0022     		moveq	r2, #0
 477:Src/main.c    **** 
 1357              		.loc 1 477 12 discriminator 1 view .LVU378
 1358 0274 434B     		ldr	r3, .L79+76
 1359 0276 1A70     		strb	r2, [r3]
 479:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 1360              		.loc 1 479 7 is_stmt 1 view .LVU379
 479:Src/main.c    ****         target_rpm = map(speedInAdc, 700, 3600, 0, max_rpm_limit);
 1361              		.loc 1 479 10 is_stmt 0 view .LVU380
 1362 0278 7FF431AF 		bne	.L65
 480:Src/main.c    ****       else
 1363              		.loc 1 480 9 is_stmt 1 view .LVU381
 480:Src/main.c    ****       else
 1364              		.loc 1 480 22 is_stmt 0 view .LVU382
 1365 027c 2F4B     		ldr	r3, .L79+4
 1366 027e 1888     		ldrh	r0, [r3]
 1367 0280 414B     		ldr	r3, .L79+80
 1368 0282 1B88     		ldrh	r3, [r3]
 1369 0284 0093     		str	r3, [sp]
 1370 0286 0023     		movs	r3, #0
 1371 0288 4FF46162 		mov	r2, #3600
 1372 028c 4FF42F71 		mov	r1, #700
 1373 0290 80B2     		uxth	r0, r0
 1374 0292 FFF7FEFF 		bl	map
 1375              	.LVL88:
 480:Src/main.c    ****       else
 1376              		.loc 1 480 20 discriminator 1 view .LVU383
 1377 0296 3D4B     		ldr	r3, .L79+84
 1378 0298 1880     		strh	r0, [r3]	@ movhi
 1379              	.L66:
 484:Src/main.c    **** 
 1380              		.loc 1 484 7 is_stmt 1 view .LVU384
 1381 029a 0120     		movs	r0, #1
 1382 029c FFF7FEFF 		bl	HAL_Delay
 1383              	.LVL89:
 486:Src/main.c    ****       {
 1384              		.loc 1 486 7 view .LVU385
 486:Src/main.c    ****       {
 1385              		.loc 1 486 15 is_stmt 0 view .LVU386
 1386 02a0 3A4B     		ldr	r3, .L79+84
 1387 02a2 1A88     		ldrh	r2, [r3]
 1388 02a4 3A4B     		ldr	r3, .L79+88
 1389 02a6 1B68     		ldr	r3, [r3]
 486:Src/main.c    ****       {
ARM GAS  /tmp/ccixHgFH.s 			page 42


 1390              		.loc 1 486 10 view .LVU387
 1391 02a8 9A42     		cmp	r2, r3
 1392 02aa BFF42BAF 		bcs	.L67
 488:Src/main.c    ****         {
 1393              		.loc 1 488 9 is_stmt 1 view .LVU388
 488:Src/main.c    ****         {
 1394              		.loc 1 488 23 is_stmt 0 view .LVU389
 1395 02ae 394B     		ldr	r3, .L79+92
 1396 02b0 1B88     		ldrh	r3, [r3]
 1397 02b2 2F4A     		ldr	r2, .L79+56
 1398 02b4 1268     		ldr	r2, [r2]
 488:Src/main.c    ****         {
 1399              		.loc 1 488 12 view .LVU390
 1400 02b6 9342     		cmp	r3, r2
 1401 02b8 BFF421AF 		bcs	.L68
 490:Src/main.c    ****         }
 1402              		.loc 1 490 11 is_stmt 1 view .LVU391
 490:Src/main.c    ****         }
 1403              		.loc 1 490 21 is_stmt 0 view .LVU392
 1404 02bc 2C4A     		ldr	r2, .L79+56
 1405 02be 1368     		ldr	r3, [r2]
 1406 02c0 013B     		subs	r3, r3, #1
 1407 02c2 1360     		str	r3, [r2]
 1408              	.L69:
 510:Src/main.c    ****       {
 1409              		.loc 1 510 7 is_stmt 1 view .LVU393
 510:Src/main.c    ****       {
 1410              		.loc 1 510 11 is_stmt 0 view .LVU394
 1411 02c4 1C4B     		ldr	r3, .L79
 1412 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 510:Src/main.c    ****       {
 1413              		.loc 1 510 10 view .LVU395
 1414 02c8 002B     		cmp	r3, #0
 1415 02ca 7FF471AF 		bne	.L60
 512:Src/main.c    ****         // geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 1416              		.loc 1 512 9 is_stmt 1 view .LVU396
 512:Src/main.c    ****         // geri_vites = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3);
 1417              		.loc 1 512 20 is_stmt 0 view .LVU397
 1418 02ce 0121     		movs	r1, #1
 1419 02d0 194B     		ldr	r3, .L79
 1420 02d2 1970     		strb	r1, [r3]
 514:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1421              		.loc 1 514 9 is_stmt 1 view .LVU398
 514:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1422              		.loc 1 514 18 is_stmt 0 view .LVU399
 1423 02d4 1F4C     		ldr	r4, .L79+28
 1424 02d6 2046     		mov	r0, r4
 1425 02d8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1426              	.LVL90:
 514:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1427              		.loc 1 514 18 discriminator 1 view .LVU400
 1428 02dc 0038     		subs	r0, r0, #0
 1429 02de 18BF     		it	ne
 1430 02e0 0120     		movne	r0, #1
 514:Src/main.c    ****         hall_B = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1);
 1431              		.loc 1 514 16 discriminator 1 view .LVU401
 1432 02e2 1D4B     		ldr	r3, .L79+32
ARM GAS  /tmp/ccixHgFH.s 			page 43


 1433 02e4 1870     		strb	r0, [r3]
 515:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1434              		.loc 1 515 9 is_stmt 1 view .LVU402
 515:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1435              		.loc 1 515 18 is_stmt 0 view .LVU403
 1436 02e6 0221     		movs	r1, #2
 1437 02e8 2046     		mov	r0, r4
 1438 02ea FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1439              	.LVL91:
 515:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1440              		.loc 1 515 18 discriminator 1 view .LVU404
 1441 02ee 0038     		subs	r0, r0, #0
 1442 02f0 18BF     		it	ne
 1443 02f2 0120     		movne	r0, #1
 515:Src/main.c    ****         hall_C = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2);
 1444              		.loc 1 515 16 discriminator 1 view .LVU405
 1445 02f4 194B     		ldr	r3, .L79+36
 1446 02f6 1870     		strb	r0, [r3]
 516:Src/main.c    ****         if (motor_voltage < 150)
 1447              		.loc 1 516 9 is_stmt 1 view .LVU406
 516:Src/main.c    ****         if (motor_voltage < 150)
 1448              		.loc 1 516 18 is_stmt 0 view .LVU407
 1449 02f8 0421     		movs	r1, #4
 1450 02fa 2046     		mov	r0, r4
 1451 02fc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1452              	.LVL92:
 516:Src/main.c    ****         if (motor_voltage < 150)
 1453              		.loc 1 516 18 discriminator 1 view .LVU408
 1454 0300 0038     		subs	r0, r0, #0
 1455 0302 18BF     		it	ne
 1456 0304 0120     		movne	r0, #1
 516:Src/main.c    ****         if (motor_voltage < 150)
 1457              		.loc 1 516 16 discriminator 1 view .LVU409
 1458 0306 164B     		ldr	r3, .L79+40
 1459 0308 1870     		strb	r0, [r3]
 517:Src/main.c    ****         {
 1460              		.loc 1 517 9 is_stmt 1 view .LVU410
 517:Src/main.c    ****         {
 1461              		.loc 1 517 27 is_stmt 0 view .LVU411
 1462 030a 164B     		ldr	r3, .L79+44
 1463 030c 1B88     		ldrh	r3, [r3]
 1464 030e 9BB2     		uxth	r3, r3
 517:Src/main.c    ****         {
 1465              		.loc 1 517 12 view .LVU412
 1466 0310 952B     		cmp	r3, #149
 1467 0312 3FF64DAF 		bhi	.L60
 519:Src/main.c    ****           HAL_GPIO_EXTI_Callback(GPIO_PIN_2);
 1468              		.loc 1 519 11 is_stmt 1 view .LVU413
 519:Src/main.c    ****           HAL_GPIO_EXTI_Callback(GPIO_PIN_2);
 1469              		.loc 1 519 21 is_stmt 0 view .LVU414
 1470 0316 1F4B     		ldr	r3, .L79+92
 1471 0318 1A88     		ldrh	r2, [r3]
 1472 031a 154B     		ldr	r3, .L79+56
 1473 031c 1A60     		str	r2, [r3]
 520:Src/main.c    ****           // first_step(hall_A, hall_B, hall_C);
 1474              		.loc 1 520 11 is_stmt 1 view .LVU415
 1475 031e 0420     		movs	r0, #4
ARM GAS  /tmp/ccixHgFH.s 			page 44


 1476 0320 FFF7FEFF 		bl	HAL_GPIO_EXTI_Callback
 1477              	.LVL93:
 1478 0324 44E7     		b	.L60
 1479              	.L74:
 548:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1480              		.loc 1 548 9 view .LVU416
 548:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1481              		.loc 1 548 36 is_stmt 0 view .LVU417
 1482 0326 FFF7FEFF 		bl	HAL_GetTick
 1483              	.LVL94:
 548:Src/main.c    ****         timeForRotorStopStatusMsFlag = 0;
 1484              		.loc 1 548 34 discriminator 1 view .LVU418
 1485 032a 1B4B     		ldr	r3, .L79+96
 1486 032c 1860     		str	r0, [r3]
 549:Src/main.c    ****       }
 1487              		.loc 1 549 9 is_stmt 1 view .LVU419
 549:Src/main.c    ****       }
 1488              		.loc 1 549 38 is_stmt 0 view .LVU420
 1489 032e 084B     		ldr	r3, .L79+24
 1490 0330 0022     		movs	r2, #0
 1491 0332 1A60     		str	r2, [r3]
 1492 0334 39E7     		b	.L72
 1493              	.L80:
 1494 0336 00BF     		.align	2
 1495              	.L79:
 1496 0338 00000000 		.word	run_status
 1497 033c 00000000 		.word	speedInAdc
 1498 0340 00000000 		.word	htim1
 1499 0344 002C0140 		.word	1073818624
 1500 0348 00000000 		.word	flagg
 1501 034c 00000000 		.word	first_step_flag
 1502 0350 00000000 		.word	timeForRotorStopStatusMsFlag
 1503 0354 00080140 		.word	1073809408
 1504 0358 00000000 		.word	hall_A
 1505 035c 00000000 		.word	hall_B
 1506 0360 00000000 		.word	hall_C
 1507 0364 00000000 		.word	motor_voltage
 1508 0368 00002540 		.word	1076166656
 1509 036c 00000000 		.word	battery_voltage
 1510 0370 00000000 		.word	pwm_value
 1511 0374 00000000 		.word	average
 1512 0378 00000000 		.word	previousTime3
 1513 037c 00000000 		.word	previousTime2
 1514 0380 000C0140 		.word	1073810432
 1515 0384 00000000 		.word	mode
 1516 0388 00000000 		.word	max_rpm_limit
 1517 038c 00000000 		.word	target_rpm
 1518 0390 00000000 		.word	rpm
 1519 0394 00000000 		.word	min_pwm_limit
 1520 0398 00000000 		.word	timeForRotorStopStatusMs
 1521              		.cfi_endproc
 1522              	.LFE75:
 1524              		.section	.bss.filtered_value3.0,"aw",%nobits
 1525              		.align	1
 1528              	filtered_value3.0:
 1529 0000 0000     		.space	2
 1530              		.section	.bss.filtered_value2.1,"aw",%nobits
ARM GAS  /tmp/ccixHgFH.s 			page 45


 1531              		.align	1
 1534              	filtered_value2.1:
 1535 0000 0000     		.space	2
 1536              		.section	.bss.filtered_value1.2,"aw",%nobits
 1537              		.align	1
 1540              	filtered_value1.2:
 1541 0000 0000     		.space	2
 1542              		.section	.bss.filtered_value0.3,"aw",%nobits
 1543              		.align	1
 1546              	filtered_value0.3:
 1547 0000 0000     		.space	2
 1548              		.global	dizi_index
 1549              		.section	.bss.dizi_index,"aw",%nobits
 1550              		.align	1
 1553              	dizi_index:
 1554 0000 0000     		.space	2
 1555              		.global	dizi
 1556              		.section	.bss.dizi,"aw",%nobits
 1557              		.align	2
 1560              	dizi:
 1561 0000 00000000 		.space	240
 1561      00000000 
 1561      00000000 
 1561      00000000 
 1561      00000000 
 1562              		.global	bemf_execute_flag
 1563              		.section	.bss.bemf_execute_flag,"aw",%nobits
 1566              	bemf_execute_flag:
 1567 0000 00       		.space	1
 1568              		.global	notr
 1569              		.section	.bss.notr,"aw",%nobits
 1570              		.align	1
 1573              	notr:
 1574 0000 0000     		.space	2
 1575              		.global	intersection_interval
 1576              		.section	.bss.intersection_interval,"aw",%nobits
 1577              		.align	2
 1580              	intersection_interval:
 1581 0000 00000000 		.space	4
 1582              		.global	polarity_C_old
 1583              		.section	.bss.polarity_C_old,"aw",%nobits
 1586              	polarity_C_old:
 1587 0000 00       		.space	1
 1588              		.global	polarity_B_old
 1589              		.section	.bss.polarity_B_old,"aw",%nobits
 1592              	polarity_B_old:
 1593 0000 00       		.space	1
 1594              		.global	polarity_A_old
 1595              		.section	.bss.polarity_A_old,"aw",%nobits
 1598              	polarity_A_old:
 1599 0000 00       		.space	1
 1600              		.global	polarity_C
 1601              		.section	.bss.polarity_C,"aw",%nobits
 1604              	polarity_C:
 1605 0000 00       		.space	1
 1606              		.global	polarity_B
 1607              		.section	.bss.polarity_B,"aw",%nobits
ARM GAS  /tmp/ccixHgFH.s 			page 46


 1610              	polarity_B:
 1611 0000 00       		.space	1
 1612              		.global	polarity_A
 1613              		.section	.bss.polarity_A,"aw",%nobits
 1616              	polarity_A:
 1617 0000 00       		.space	1
 1618              		.global	backEMF_mode
 1619              		.section	.bss.backEMF_mode,"aw",%nobits
 1622              	backEMF_mode:
 1623 0000 00       		.space	1
 1624              		.global	rpm_max_limit_flag
 1625              		.section	.data.rpm_max_limit_flag,"aw"
 1626              		.align	1
 1629              	rpm_max_limit_flag:
 1630 0000 0100     		.short	1
 1631              		.global	step_atlandi
 1632              		.section	.bss.step_atlandi,"aw",%nobits
 1635              	step_atlandi:
 1636 0000 00       		.space	1
 1637              		.global	interval_of_steps
 1638              		.section	.bss.interval_of_steps,"aw",%nobits
 1639              		.align	2
 1642              	interval_of_steps:
 1643 0000 00000000 		.space	2048
 1643      00000000 
 1643      00000000 
 1643      00000000 
 1643      00000000 
 1644              		.global	rpm_analysis
 1645              		.section	.bss.rpm_analysis,"aw",%nobits
 1646              		.align	2
 1649              	rpm_analysis:
 1650 0000 00000000 		.space	2048
 1650      00000000 
 1650      00000000 
 1650      00000000 
 1650      00000000 
 1651              		.global	array_counter
 1652              		.section	.bss.array_counter,"aw",%nobits
 1653              		.align	1
 1656              	array_counter:
 1657 0000 0000     		.space	2
 1658              		.global	analyze_data_1
 1659              		.section	.bss.analyze_data_1,"aw",%nobits
 1660              		.align	2
 1663              	analyze_data_1:
 1664 0000 00000000 		.space	960
 1664      00000000 
 1664      00000000 
 1664      00000000 
 1664      00000000 
 1665              		.global	previousTime4
 1666              		.section	.bss.previousTime4,"aw",%nobits
 1667              		.align	2
 1670              	previousTime4:
 1671 0000 00000000 		.space	4
 1672              		.global	motor_voltage
ARM GAS  /tmp/ccixHgFH.s 			page 47


 1673              		.section	.bss.motor_voltage,"aw",%nobits
 1674              		.align	1
 1677              	motor_voltage:
 1678 0000 0000     		.space	2
 1679              		.global	battery_voltage
 1680              		.section	.bss.battery_voltage,"aw",%nobits
 1681              		.align	1
 1684              	battery_voltage:
 1685 0000 0000     		.space	2
 1686              		.global	flag12
 1687              		.section	.bss.flag12,"aw",%nobits
 1690              	flag12:
 1691 0000 00       		.space	1
 1692              		.global	max_current_limit
 1693              		.section	.data.max_current_limit,"aw"
 1694              		.align	1
 1697              	max_current_limit:
 1698 0000 3408     		.short	2100
 1699              		.global	max_rpm_limit
 1700              		.section	.data.max_rpm_limit,"aw"
 1701              		.align	1
 1704              	max_rpm_limit:
 1705 0000 800C     		.short	3200
 1706              		.global	target_rpm
 1707              		.section	.bss.target_rpm,"aw",%nobits
 1708              		.align	1
 1711              	target_rpm:
 1712 0000 0000     		.space	2
 1713              		.global	phase_C
 1714              		.section	.bss.phase_C,"aw",%nobits
 1715              		.align	2
 1718              	phase_C:
 1719 0000 00000000 		.space	4
 1720              		.global	phase_B
 1721              		.section	.bss.phase_B,"aw",%nobits
 1722              		.align	2
 1725              	phase_B:
 1726 0000 00000000 		.space	4
 1727              		.global	phase_A
 1728              		.section	.bss.phase_A,"aw",%nobits
 1729              		.align	2
 1732              	phase_A:
 1733 0000 00000000 		.space	4
 1734              		.global	interval_of_runstatus
 1735              		.section	.bss.interval_of_runstatus,"aw",%nobits
 1736              		.align	2
 1739              	interval_of_runstatus:
 1740 0000 00000000 		.space	4
 1741              		.global	saved_pwm_rpm
 1742              		.section	.bss.saved_pwm_rpm,"aw",%nobits
 1743              		.align	2
 1746              	saved_pwm_rpm:
 1747 0000 00000000 		.space	60
 1747      00000000 
 1747      00000000 
 1747      00000000 
 1747      00000000 
ARM GAS  /tmp/ccixHgFH.s 			page 48


 1748              		.global	isStoppedTimers
 1749              		.section	.bss.isStoppedTimers,"aw",%nobits
 1752              	isStoppedTimers:
 1753 0000 00       		.space	1
 1754              		.global	new_ARR
 1755              		.section	.bss.new_ARR,"aw",%nobits
 1756              		.align	2
 1759              	new_ARR:
 1760 0000 00000000 		.space	4
 1761              		.global	tim3sayi
 1762              		.section	.bss.tim3sayi,"aw",%nobits
 1763              		.align	2
 1766              	tim3sayi:
 1767 0000 00000000 		.space	4
 1768              		.global	average
 1769              		.section	.bss.average,"aw",%nobits
 1770              		.align	1
 1773              	average:
 1774 0000 0000     		.space	2
 1775              		.global	temporary_current_value
 1776              		.section	.bss.temporary_current_value,"aw",%nobits
 1777              		.align	1
 1780              	temporary_current_value:
 1781 0000 0000     		.space	2
 1782              		.global	maxCurrent
 1783              		.section	.bss.maxCurrent,"aw",%nobits
 1784              		.align	1
 1787              	maxCurrent:
 1788 0000 0000     		.space	2
 1789              		.global	minCurrent
 1790              		.section	.data.minCurrent,"aw"
 1791              		.align	1
 1794              	minCurrent:
 1795 0000 8813     		.short	5000
 1796              		.global	previousTime3
 1797              		.section	.bss.previousTime3,"aw",%nobits
 1798              		.align	2
 1801              	previousTime3:
 1802 0000 00000000 		.space	4
 1803              		.global	difference_two_coummutation_time
 1804              		.section	.data.difference_two_coummutation_time,"aw"
 1805              		.align	2
 1808              	difference_two_coummutation_time:
 1809 0000 01000000 		.word	1
 1810              		.global	rpm
 1811              		.section	.bss.rpm,"aw",%nobits
 1812              		.align	2
 1815              	rpm:
 1816 0000 00000000 		.space	4
 1817              		.global	rpm_counter
 1818              		.section	.bss.rpm_counter,"aw",%nobits
 1819              		.align	2
 1822              	rpm_counter:
 1823 0000 00000000 		.space	4
 1824              		.global	timeForRotorStopStatusMsFlag
 1825              		.section	.bss.timeForRotorStopStatusMsFlag,"aw",%nobits
 1826              		.align	2
ARM GAS  /tmp/ccixHgFH.s 			page 49


 1829              	timeForRotorStopStatusMsFlag:
 1830 0000 00000000 		.space	4
 1831              		.global	timeForRotorStopStatusMs
 1832              		.section	.bss.timeForRotorStopStatusMs,"aw",%nobits
 1833              		.align	2
 1836              	timeForRotorStopStatusMs:
 1837 0000 00000000 		.space	4
 1838              		.global	oncekiDegerler
 1839              		.section	.bss.oncekiDegerler,"aw",%nobits
 1840              		.align	2
 1843              	oncekiDegerler:
 1844 0000 000000   		.space	3
 1845              		.global	previousTime2
 1846              		.section	.bss.previousTime2,"aw",%nobits
 1847              		.align	2
 1850              	previousTime2:
 1851 0000 00000000 		.space	4
 1852              		.global	firstStepDelay
 1853              		.section	.data.firstStepDelay,"aw"
 1854              		.align	1
 1857              	firstStepDelay:
 1858 0000 C800     		.short	200
 1859              		.global	min_pwm_limit
 1860              		.section	.data.min_pwm_limit,"aw"
 1861              		.align	1
 1864              	min_pwm_limit:
 1865 0000 8200     		.short	130
 1866              		.global	pedal_value_mapped
 1867              		.section	.bss.pedal_value_mapped,"aw",%nobits
 1868              		.align	2
 1871              	pedal_value_mapped:
 1872 0000 00000000 		.space	4
 1873              		.global	pwm_value2
 1874              		.section	.bss.pwm_value2,"aw",%nobits
 1875              		.align	2
 1878              	pwm_value2:
 1879 0000 00000000 		.space	4
 1880              		.global	pwm_value
 1881              		.section	.bss.pwm_value,"aw",%nobits
 1882              		.align	2
 1885              	pwm_value:
 1886 0000 00000000 		.space	4
 1887              		.global	step
 1888              		.section	.bss.step,"aw",%nobits
 1889              		.align	2
 1892              	step:
 1893 0000 00000000 		.space	4
 1894              		.global	geri_vites
 1895              		.section	.data.geri_vites,"aw"
 1898              	geri_vites:
 1899 0000 01       		.byte	1
 1900              		.global	hall_C
 1901              		.section	.bss.hall_C,"aw",%nobits
 1904              	hall_C:
 1905 0000 00       		.space	1
 1906              		.global	hall_B
 1907              		.section	.bss.hall_B,"aw",%nobits
ARM GAS  /tmp/ccixHgFH.s 			page 50


 1910              	hall_B:
 1911 0000 00       		.space	1
 1912              		.global	hall_A
 1913              		.section	.bss.hall_A,"aw",%nobits
 1916              	hall_A:
 1917 0000 00       		.space	1
 1918              		.global	run_status
 1919              		.section	.bss.run_status,"aw",%nobits
 1922              	run_status:
 1923 0000 00       		.space	1
 1924              		.global	filtered_current
 1925              		.section	.bss.filtered_current,"aw",%nobits
 1926              		.align	1
 1929              	filtered_current:
 1930 0000 0000     		.space	2
 1931              		.global	currentValue
 1932              		.section	.bss.currentValue,"aw",%nobits
 1933              		.align	1
 1936              	currentValue:
 1937 0000 0000     		.space	2
 1938              		.global	speedInAdc
 1939              		.section	.bss.speedInAdc,"aw",%nobits
 1940              		.align	1
 1943              	speedInAdc:
 1944 0000 0000     		.space	2
 1945              		.global	adcbuffer
 1946              		.section	.bss.adcbuffer,"aw",%nobits
 1947              		.align	2
 1950              	adcbuffer:
 1951 0000 00000000 		.space	28
 1951      00000000 
 1951      00000000 
 1951      00000000 
 1951      00000000 
 1952              		.global	flagg
 1953              		.section	.data.flagg,"aw"
 1956              	flagg:
 1957 0000 01       		.byte	1
 1958              		.global	first_step_flag
 1959              		.section	.data.first_step_flag,"aw"
 1962              	first_step_flag:
 1963 0000 01       		.byte	1
 1964              		.global	mode
 1965              		.section	.data.mode,"aw"
 1968              	mode:
 1969 0000 01       		.byte	1
 1970              		.global	oldValue
 1971              		.section	.bss.oldValue,"aw",%nobits
 1972              		.align	2
 1975              	oldValue:
 1976 0000 000000   		.space	3
 1977              		.text
 1978              	.Letext0:
 1979              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.3.1/include/stdint.h"
 1980              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1981              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1982              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /tmp/ccixHgFH.s 			page 51


 1983              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1984              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1985              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1986              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1987              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1988              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1989              		.file 13 "Inc/main.h"
 1990              		.file 14 "Inc/adc.h"
 1991              		.file 15 "Inc/tim.h"
 1992              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1993              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1994              		.file 18 "Inc/usb_device.h"
 1995              		.file 19 "Inc/dma.h"
 1996              		.file 20 "Inc/gpio.h"
 1997              		.file 21 "Inc/Zeugma_h/debug_monitor.h"
 1998              		.file 22 "Inc/Zeugma_h/bemf.h"
 1999              		.file 23 "<built-in>"
ARM GAS  /tmp/ccixHgFH.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccixHgFH.s:19     .text.map:00000000 $t
     /tmp/ccixHgFH.s:25     .text.map:00000000 map
     /tmp/ccixHgFH.s:55     .text.ema_filter0:00000000 $t
     /tmp/ccixHgFH.s:61     .text.ema_filter0:00000000 ema_filter0
     /tmp/ccixHgFH.s:98     .text.ema_filter0:0000001c $d
     /tmp/ccixHgFH.s:1546   .bss.filtered_value0.3:00000000 filtered_value0.3
     /tmp/ccixHgFH.s:103    .text.ema_filter1:00000000 $t
     /tmp/ccixHgFH.s:109    .text.ema_filter1:00000000 ema_filter1
     /tmp/ccixHgFH.s:146    .text.ema_filter1:0000001c $d
     /tmp/ccixHgFH.s:1540   .bss.filtered_value1.2:00000000 filtered_value1.2
     /tmp/ccixHgFH.s:151    .text.ema_filter2:00000000 $t
     /tmp/ccixHgFH.s:157    .text.ema_filter2:00000000 ema_filter2
     /tmp/ccixHgFH.s:194    .text.ema_filter2:0000001c $d
     /tmp/ccixHgFH.s:1534   .bss.filtered_value2.1:00000000 filtered_value2.1
     /tmp/ccixHgFH.s:199    .text.ema_filter3:00000000 $t
     /tmp/ccixHgFH.s:205    .text.ema_filter3:00000000 ema_filter3
     /tmp/ccixHgFH.s:242    .text.ema_filter3:0000001c $d
     /tmp/ccixHgFH.s:1528   .bss.filtered_value3.0:00000000 filtered_value3.0
     /tmp/ccixHgFH.s:247    .text.filtreye_koy:00000000 $t
     /tmp/ccixHgFH.s:253    .text.filtreye_koy:00000000 filtreye_koy
     /tmp/ccixHgFH.s:351    .text.filtreye_koy:00000048 $d
     /tmp/ccixHgFH.s:1553   .bss.dizi_index:00000000 dizi_index
     /tmp/ccixHgFH.s:1560   .bss.dizi:00000000 dizi
     /tmp/ccixHgFH.s:361    .rodata.HAL_ADC_ConvCpltCallback.str1.4:00000000 $d
     /tmp/ccixHgFH.s:365    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/ccixHgFH.s:371    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/ccixHgFH.s:714    .text.HAL_ADC_ConvCpltCallback:000001a8 $d
     /tmp/ccixHgFH.s:1950   .bss.adcbuffer:00000000 adcbuffer
     /tmp/ccixHgFH.s:1684   .bss.battery_voltage:00000000 battery_voltage
     /tmp/ccixHgFH.s:1732   .bss.phase_A:00000000 phase_A
     /tmp/ccixHgFH.s:1573   .bss.notr:00000000 notr
     /tmp/ccixHgFH.s:1616   .bss.polarity_A:00000000 polarity_A
     /tmp/ccixHgFH.s:1725   .bss.phase_B:00000000 phase_B
     /tmp/ccixHgFH.s:1610   .bss.polarity_B:00000000 polarity_B
     /tmp/ccixHgFH.s:1718   .bss.phase_C:00000000 phase_C
     /tmp/ccixHgFH.s:1604   .bss.polarity_C:00000000 polarity_C
     /tmp/ccixHgFH.s:1677   .bss.motor_voltage:00000000 motor_voltage
     /tmp/ccixHgFH.s:1936   .bss.currentValue:00000000 currentValue
     /tmp/ccixHgFH.s:1929   .bss.filtered_current:00000000 filtered_current
     /tmp/ccixHgFH.s:1780   .bss.temporary_current_value:00000000 temporary_current_value
     /tmp/ccixHgFH.s:1943   .bss.speedInAdc:00000000 speedInAdc
     /tmp/ccixHgFH.s:1885   .bss.pwm_value:00000000 pwm_value
     /tmp/ccixHgFH.s:1794   .data.minCurrent:00000000 minCurrent
     /tmp/ccixHgFH.s:1787   .bss.maxCurrent:00000000 maxCurrent
     /tmp/ccixHgFH.s:742    .text.Error_Handler:00000000 $t
     /tmp/ccixHgFH.s:748    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccixHgFH.s:780    .text.SystemClock_Config:00000000 $t
     /tmp/ccixHgFH.s:786    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccixHgFH.s:918    .rodata.main.str1.4:00000000 $d
     /tmp/ccixHgFH.s:922    .text.main:00000000 $t
     /tmp/ccixHgFH.s:928    .text.main:00000000 main
     /tmp/ccixHgFH.s:1154   .text.main:00000130 $d
     /tmp/ccixHgFH.s:1850   .bss.previousTime2:00000000 previousTime2
     /tmp/ccixHgFH.s:1801   .bss.previousTime3:00000000 previousTime3
     /tmp/ccixHgFH.s:1815   .bss.rpm:00000000 rpm
ARM GAS  /tmp/ccixHgFH.s 			page 53


     /tmp/ccixHgFH.s:1635   .bss.step_atlandi:00000000 step_atlandi
     /tmp/ccixHgFH.s:1704   .data.max_rpm_limit:00000000 max_rpm_limit
     /tmp/ccixHgFH.s:1711   .bss.target_rpm:00000000 target_rpm
     /tmp/ccixHgFH.s:1864   .data.min_pwm_limit:00000000 min_pwm_limit
     /tmp/ccixHgFH.s:1174   .text.main:00000174 $t
     /tmp/ccixHgFH.s:1496   .text.main:00000338 $d
     /tmp/ccixHgFH.s:1922   .bss.run_status:00000000 run_status
     /tmp/ccixHgFH.s:1956   .data.flagg:00000000 flagg
     /tmp/ccixHgFH.s:1962   .data.first_step_flag:00000000 first_step_flag
     /tmp/ccixHgFH.s:1829   .bss.timeForRotorStopStatusMsFlag:00000000 timeForRotorStopStatusMsFlag
     /tmp/ccixHgFH.s:1916   .bss.hall_A:00000000 hall_A
     /tmp/ccixHgFH.s:1910   .bss.hall_B:00000000 hall_B
     /tmp/ccixHgFH.s:1904   .bss.hall_C:00000000 hall_C
     /tmp/ccixHgFH.s:1773   .bss.average:00000000 average
     /tmp/ccixHgFH.s:1968   .data.mode:00000000 mode
     /tmp/ccixHgFH.s:1836   .bss.timeForRotorStopStatusMs:00000000 timeForRotorStopStatusMs
     /tmp/ccixHgFH.s:1525   .bss.filtered_value3.0:00000000 $d
     /tmp/ccixHgFH.s:1531   .bss.filtered_value2.1:00000000 $d
     /tmp/ccixHgFH.s:1537   .bss.filtered_value1.2:00000000 $d
     /tmp/ccixHgFH.s:1543   .bss.filtered_value0.3:00000000 $d
     /tmp/ccixHgFH.s:1550   .bss.dizi_index:00000000 $d
     /tmp/ccixHgFH.s:1557   .bss.dizi:00000000 $d
     /tmp/ccixHgFH.s:1566   .bss.bemf_execute_flag:00000000 bemf_execute_flag
     /tmp/ccixHgFH.s:1567   .bss.bemf_execute_flag:00000000 $d
     /tmp/ccixHgFH.s:1570   .bss.notr:00000000 $d
     /tmp/ccixHgFH.s:1580   .bss.intersection_interval:00000000 intersection_interval
     /tmp/ccixHgFH.s:1577   .bss.intersection_interval:00000000 $d
     /tmp/ccixHgFH.s:1586   .bss.polarity_C_old:00000000 polarity_C_old
     /tmp/ccixHgFH.s:1587   .bss.polarity_C_old:00000000 $d
     /tmp/ccixHgFH.s:1592   .bss.polarity_B_old:00000000 polarity_B_old
     /tmp/ccixHgFH.s:1593   .bss.polarity_B_old:00000000 $d
     /tmp/ccixHgFH.s:1598   .bss.polarity_A_old:00000000 polarity_A_old
     /tmp/ccixHgFH.s:1599   .bss.polarity_A_old:00000000 $d
     /tmp/ccixHgFH.s:1605   .bss.polarity_C:00000000 $d
     /tmp/ccixHgFH.s:1611   .bss.polarity_B:00000000 $d
     /tmp/ccixHgFH.s:1617   .bss.polarity_A:00000000 $d
     /tmp/ccixHgFH.s:1622   .bss.backEMF_mode:00000000 backEMF_mode
     /tmp/ccixHgFH.s:1623   .bss.backEMF_mode:00000000 $d
     /tmp/ccixHgFH.s:1629   .data.rpm_max_limit_flag:00000000 rpm_max_limit_flag
     /tmp/ccixHgFH.s:1626   .data.rpm_max_limit_flag:00000000 $d
     /tmp/ccixHgFH.s:1636   .bss.step_atlandi:00000000 $d
     /tmp/ccixHgFH.s:1642   .bss.interval_of_steps:00000000 interval_of_steps
     /tmp/ccixHgFH.s:1639   .bss.interval_of_steps:00000000 $d
     /tmp/ccixHgFH.s:1649   .bss.rpm_analysis:00000000 rpm_analysis
     /tmp/ccixHgFH.s:1646   .bss.rpm_analysis:00000000 $d
     /tmp/ccixHgFH.s:1656   .bss.array_counter:00000000 array_counter
     /tmp/ccixHgFH.s:1653   .bss.array_counter:00000000 $d
     /tmp/ccixHgFH.s:1663   .bss.analyze_data_1:00000000 analyze_data_1
     /tmp/ccixHgFH.s:1660   .bss.analyze_data_1:00000000 $d
     /tmp/ccixHgFH.s:1670   .bss.previousTime4:00000000 previousTime4
     /tmp/ccixHgFH.s:1667   .bss.previousTime4:00000000 $d
     /tmp/ccixHgFH.s:1674   .bss.motor_voltage:00000000 $d
     /tmp/ccixHgFH.s:1681   .bss.battery_voltage:00000000 $d
     /tmp/ccixHgFH.s:1690   .bss.flag12:00000000 flag12
     /tmp/ccixHgFH.s:1691   .bss.flag12:00000000 $d
     /tmp/ccixHgFH.s:1697   .data.max_current_limit:00000000 max_current_limit
     /tmp/ccixHgFH.s:1694   .data.max_current_limit:00000000 $d
ARM GAS  /tmp/ccixHgFH.s 			page 54


     /tmp/ccixHgFH.s:1701   .data.max_rpm_limit:00000000 $d
     /tmp/ccixHgFH.s:1708   .bss.target_rpm:00000000 $d
     /tmp/ccixHgFH.s:1715   .bss.phase_C:00000000 $d
     /tmp/ccixHgFH.s:1722   .bss.phase_B:00000000 $d
     /tmp/ccixHgFH.s:1729   .bss.phase_A:00000000 $d
     /tmp/ccixHgFH.s:1739   .bss.interval_of_runstatus:00000000 interval_of_runstatus
     /tmp/ccixHgFH.s:1736   .bss.interval_of_runstatus:00000000 $d
     /tmp/ccixHgFH.s:1746   .bss.saved_pwm_rpm:00000000 saved_pwm_rpm
     /tmp/ccixHgFH.s:1743   .bss.saved_pwm_rpm:00000000 $d
     /tmp/ccixHgFH.s:1752   .bss.isStoppedTimers:00000000 isStoppedTimers
     /tmp/ccixHgFH.s:1753   .bss.isStoppedTimers:00000000 $d
     /tmp/ccixHgFH.s:1759   .bss.new_ARR:00000000 new_ARR
     /tmp/ccixHgFH.s:1756   .bss.new_ARR:00000000 $d
     /tmp/ccixHgFH.s:1766   .bss.tim3sayi:00000000 tim3sayi
     /tmp/ccixHgFH.s:1763   .bss.tim3sayi:00000000 $d
     /tmp/ccixHgFH.s:1770   .bss.average:00000000 $d
     /tmp/ccixHgFH.s:1777   .bss.temporary_current_value:00000000 $d
     /tmp/ccixHgFH.s:1784   .bss.maxCurrent:00000000 $d
     /tmp/ccixHgFH.s:1791   .data.minCurrent:00000000 $d
     /tmp/ccixHgFH.s:1798   .bss.previousTime3:00000000 $d
     /tmp/ccixHgFH.s:1808   .data.difference_two_coummutation_time:00000000 difference_two_coummutation_time
     /tmp/ccixHgFH.s:1805   .data.difference_two_coummutation_time:00000000 $d
     /tmp/ccixHgFH.s:1812   .bss.rpm:00000000 $d
     /tmp/ccixHgFH.s:1822   .bss.rpm_counter:00000000 rpm_counter
     /tmp/ccixHgFH.s:1819   .bss.rpm_counter:00000000 $d
     /tmp/ccixHgFH.s:1826   .bss.timeForRotorStopStatusMsFlag:00000000 $d
     /tmp/ccixHgFH.s:1833   .bss.timeForRotorStopStatusMs:00000000 $d
     /tmp/ccixHgFH.s:1843   .bss.oncekiDegerler:00000000 oncekiDegerler
     /tmp/ccixHgFH.s:1840   .bss.oncekiDegerler:00000000 $d
     /tmp/ccixHgFH.s:1847   .bss.previousTime2:00000000 $d
     /tmp/ccixHgFH.s:1857   .data.firstStepDelay:00000000 firstStepDelay
     /tmp/ccixHgFH.s:1854   .data.firstStepDelay:00000000 $d
     /tmp/ccixHgFH.s:1861   .data.min_pwm_limit:00000000 $d
     /tmp/ccixHgFH.s:1871   .bss.pedal_value_mapped:00000000 pedal_value_mapped
     /tmp/ccixHgFH.s:1868   .bss.pedal_value_mapped:00000000 $d
     /tmp/ccixHgFH.s:1878   .bss.pwm_value2:00000000 pwm_value2
     /tmp/ccixHgFH.s:1875   .bss.pwm_value2:00000000 $d
     /tmp/ccixHgFH.s:1882   .bss.pwm_value:00000000 $d
     /tmp/ccixHgFH.s:1892   .bss.step:00000000 step
     /tmp/ccixHgFH.s:1889   .bss.step:00000000 $d
     /tmp/ccixHgFH.s:1898   .data.geri_vites:00000000 geri_vites
     /tmp/ccixHgFH.s:1905   .bss.hall_C:00000000 $d
     /tmp/ccixHgFH.s:1911   .bss.hall_B:00000000 $d
     /tmp/ccixHgFH.s:1917   .bss.hall_A:00000000 $d
     /tmp/ccixHgFH.s:1923   .bss.run_status:00000000 $d
     /tmp/ccixHgFH.s:1926   .bss.filtered_current:00000000 $d
     /tmp/ccixHgFH.s:1933   .bss.currentValue:00000000 $d
     /tmp/ccixHgFH.s:1940   .bss.speedInAdc:00000000 $d
     /tmp/ccixHgFH.s:1947   .bss.adcbuffer:00000000 $d
     /tmp/ccixHgFH.s:1975   .bss.oldValue:00000000 oldValue
     /tmp/ccixHgFH.s:1972   .bss.oldValue:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
phaseControlBemf
ARM GAS  /tmp/ccixHgFH.s 			page 55


log_variable
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_i2d
__aeabi_ddiv
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_TIM1_Init
MX_USB_DEVICE_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
HAL_ADC_Start_DMA
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_TIM_Base_Start
HAL_Delay
HAL_GetTick
HAL_TIM_Base_Start_IT
LOG_POST
hadc1
htim1
htim2
htim3
htim4
HAL_GPIO_ReadPin
HAL_GPIO_EXTI_Callback
